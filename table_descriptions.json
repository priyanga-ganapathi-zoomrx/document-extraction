{
  "tables": [
    {
      "table_name": "geographies",
      "description": "The `geographies` table stores hierarchical geographical information. Each record represents a geographical entity (e.g., country, state, city) with a unique `id`, a short `code`, a descriptive `name`, and a `geography_type` classifying it.  The `parent_geography_id` establishes hierarchical relationships, linking a geography to its parent (e.g., a city to its state). The `data` column can store additional JSON formatted data specific to each geography.  Duplicate `geography_type` column mentioned in the prompt has been removed.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each geographic entry in the `geographies` table. Automatically increments with each new record. Serves as the primary key."
        },
        {
          "name": "code",
          "type": "VARCHAR",
          "description": "`code` (VARCHAR):  A short, unique alphanumeric code representing a specific geographic area.  Used for efficient referencing and indexing within the `geographies` table.  Examples might include ISO country codes, state abbreviations, or internal region identifiers."
        },
        {
          "name": "name",
          "type": "VARCHAR",
          "description": "`name` (VARCHAR):  The name of the geographic entity (e.g., country, city, region)."
        },
        {
          "name": "geography_type",
          "type": "VARCHAR",
          "description": "Classifies the type of geography represented in this record (e.g., country, state, county, city, zip code)."
        },
        {
          "name": "parent_geography_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column (also INTEGER) in the `geographies` table.  Represents the hierarchical parent geography of the current geography.  Null if the geography is a top-level entity."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing arbitrary geographical information for each entry in the `geographies` table. This may include properties like boundaries, demographics, or other relevant data."
        },
        {
          "name": "geography_type)",
          "type": "TYPE_UNKNOWN",
          "description": "`geography_type (TYPE_UNKNOWN)` in the `geographies` table indicates the type of geographic entity, although the specific format and possible values are currently unknown.  Further investigation is needed to determine the proper data type and usage of this column."
        }
      ]
    },
    {
      "table_name": "companies",
      "description": "The `companies` table stores information about individual companies.  Each company is uniquely identified by its `id`.  The table captures basic details like `name`, a standardized `canonical_name`, `company_type`, and public listing status (`is_public`). For public companies, the `stock_symbol` is recorded.  Hierarchical relationships are represented by the `parent_company_id`.  Headquarters location information is stored in various columns, including `hq_address`, `hq_city`,  `hq_state`,  `hq_postal_code`, `hq_country`, `hq_metro_area`, `hq_latitude`, and `hq_longitude`.  The `last_update_date` tracks the most recent modification.  Additional company-specific data can be stored in a JSON field called `data`.  Finally, `source_type` and `primary_source_id` indicate the origin and identifier of the company data within the primary source.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`companies.id`: A unique, auto-incrementing integer that serves as the primary key for each company record."
        },
        {
          "name": "name",
          "type": "VARCHAR",
          "description": "`name` (VARCHAR):  The name of the company."
        },
        {
          "name": "canonical_name",
          "type": "VARCHAR",
          "description": "The `canonical_name` column in the `companies` table stores a company's standardized name (VARCHAR) used for unique identification and disambiguation, often a lowercase, alphanumeric-only version.  It facilitates consistent referencing and avoids duplicates caused by variations in capitalization, punctuation, or legal suffixes."
        },
        {
          "name": "company_type",
          "type": "VARCHAR",
          "description": "Classifies the type of company, e.g., 'Public', 'Private', 'Non-profit', 'Government'."
        },
        {
          "name": "is_public",
          "type": "BOOLEAN",
          "description": "Indicates whether the company's information is publicly accessible (true) or private (false)."
        },
        {
          "name": "stock_symbol",
          "type": "VARCHAR",
          "description": "`stock_symbol` (VARCHAR):  The ticker symbol representing the company's stock on a stock exchange (e.g., AAPL, MSFT)."
        },
        {
          "name": "parent_company_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `companies` table.  Represents the ID of the parent company, if applicable.  NULL if the company has no parent."
        },
        {
          "name": "hq_address",
          "type": "VARCHAR",
          "description": "`hq_address` (VARCHAR):  Stores the headquarters address of the company."
        },
        {
          "name": "hq_city",
          "type": "VARCHAR",
          "description": "`hq_city` (VARCHAR):  The city in which the company's headquarters is located."
        },
        {
          "name": "hq_state",
          "type": "VARCHAR",
          "description": "`hq_state`:  A VARCHAR field in the `companies` table storing the two-letter abbreviation of the US state where a company's headquarters is located."
        },
        {
          "name": "hq_postal_code",
          "type": "VARCHAR",
          "description": "`hq_postal_code` (VARCHAR): Stores the postal code of the company's headquarters."
        },
        {
          "name": "hq_country",
          "type": "VARCHAR",
          "description": "`hq_country` (VARCHAR): Stores the two-letter ISO country code of the country where the company's headquarters is located."
        },
        {
          "name": "hq_metro_area",
          "type": "VARCHAR",
          "description": "`hq_metro_area` (VARCHAR): Stores the metropolitan area where a company's headquarters is located.  This is a text field and may represent a common name (e.g., \"Greater New York City Area\") rather than a strict geographic definition."
        },
        {
          "name": "hq_latitude",
          "type": "NUMERIC",
          "description": "The `hq_latitude` column in the `companies` table stores the latitude coordinate of a company's headquarters as a numeric value."
        },
        {
          "name": "hq_longitude",
          "type": "NUMERIC",
          "description": "`hq_longitude` (NUMERIC):  The longitude coordinate of the company's headquarters location."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the most recent date and time when information for this company was modified in the `companies` table."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`: A JSONB column in the `companies` table storing flexible key-value pairs of additional company information. This allows for storing semi-structured data that doesn't fit neatly into traditional relational columns."
        },
        {
          "name": "source_type",
          "type": "VARCHAR",
          "description": "`source_type` (VARCHAR):  Indicates the origin or type of source from which the company information was obtained (e.g., 'user_input', 'web_crawler', 'third_party_api', 'business_directory')."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `sources` table.  Indicates the primary information source for this company's data."
        }
      ]
    },
    {
      "table_name": "therapeutic_modalities",
      "description": "The `therapeutic_modalities` table stores information about different therapeutic approaches. Each modality is uniquely identified by `id` and has a user-friendly `name` and a standardized `canonical_name`.  A detailed `description` outlines the modality, while `modality_level` indicates its hierarchical position (e.g., category, subcategory).  `parent_modality_id` links a modality to its broader category.  `properties` stores modality-specific attributes as JSON.  `last_update_date` tracks modifications, `data` holds any miscellaneous data, and `primary_source_id` references the original source of information.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique sequential integer identifier automatically generated for each therapeutic modality record in the `therapeutic_modalities` table. Serves as the primary key."
        },
        {
          "name": "name",
          "type": "VARCHAR",
          "description": "Name of the therapeutic modality (e.g., \"Massage Therapy\", \"Physical Therapy\", \"Acupuncture\")."
        },
        {
          "name": "canonical_name",
          "type": "VARCHAR",
          "description": "The `canonical_name` column in the `therapeutic_modalities` table stores the standardized or preferred name of a therapeutic modality as a string.  This ensures consistent referencing even if alternative names or synonyms exist."
        },
        {
          "name": "description",
          "type": "TEXT",
          "description": "A detailed textual description of the therapeutic modality, including its purpose, application, and relevant procedures."
        },
        {
          "name": "modality_level",
          "type": "VARCHAR",
          "description": "The `modality_level` column in the `therapeutic_modalities` table stores a string value representing the level or intensity of a therapeutic modality.  This could represent categories like \"low,\" \"medium,\" \"high,\" or more specific designations."
        },
        {
          "name": "parent_modality_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column in the `therapeutic_modalities` table.  Represents the ID of a parent modality if this modality is a sub-type or specialization of another.  `NULL` if this modality is not a sub-type."
        },
        {
          "name": "properties",
          "type": "JSONB",
          "description": "Stores a JSONB object containing various properties related to the therapeutic modality.  This allows for flexible storage of key-value pairs, accommodating diverse attributes without requiring schema changes."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time of the most recent modification to the therapeutic modality entry."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value data related to the therapeutic modality. This allows for storing various attributes and properties of the modality in a structured yet adaptable format."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column of the 'sources' table.  Identifies the primary source of information for the therapeutic modality."
        }
      ]
    },
    {
      "table_name": "diseases",
      "description": "The `diseases` table stores information about various diseases.  Each disease is uniquely identified by an `id`.  The table includes the disease's common `name`, a standardized `canonical_name`, the `disease_type`, and an optional `parent_disease_id` for hierarchical relationships.  `last_update_date` tracks when the record was last modified.  `data` contains additional disease-specific information. `source_type` indicates the origin of the disease information and `primary_source_id` links to the specific source record.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each disease record. Automatically increments upon insertion.  Serves as the primary key for the `diseases` table."
        },
        {
          "name": "name",
          "type": "VARCHAR",
          "description": "`name` (VARCHAR):  The name of the disease."
        },
        {
          "name": "canonical_name",
          "type": "VARCHAR",
          "description": "The `canonical_name` column in the `diseases` table stores the standardized or preferred name for a disease as a string. This ensures consistency and facilitates data integration, avoiding ambiguity caused by variations in disease nomenclature."
        },
        {
          "name": "disease_type",
          "type": "VARCHAR",
          "description": "Classifies the type of disease.  (VARCHAR)"
        },
        {
          "name": "parent_disease_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column (also INTEGER) of the `diseases` table itself.  Represents the ID of a parent disease if the current disease is a subtype or variant of another disease.  NULL if the disease has no parent."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time when information for this disease record was last modified."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`: A JSONB column in the `diseases` table storing flexible, key-value data related to a disease.  This can include symptoms, treatments, risk factors, or other relevant information not readily captured in structured columns."
        },
        {
          "name": "source_type",
          "type": "VARCHAR",
          "description": "`source_type` (VARCHAR):  Indicates the source of information for the disease record.  Examples include 'CDC', 'WHO', 'PubMed', or 'Hospital Record'."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source document (e.g., research paper, medical report) describing the disease."
        }
      ]
    },
    {
      "table_name": "molecular_targets",
      "description": "The `molecular_targets` table stores information about molecular targets, including their various names, type, associated gene and protein identifiers, hierarchical relationships, update timestamp, detailed data, and source information. Each target is uniquely identified by its `id`.  The `parent_target_id` allows for representing relationships between targets, such as protein complexes and their subunits.  The `data` column can store additional target-specific information in a flexible format. Source information is tracked using `source_type` and `primary_source_id`.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  A unique, automatically incrementing integer serving as the primary key for the `molecular_targets` table. It identifies each molecular target record."
        },
        {
          "name": "name",
          "type": "VARCHAR",
          "description": "`name` (VARCHAR):  The name of the molecular target (e.g., protein, gene, RNA)."
        },
        {
          "name": "canonical_name",
          "type": "VARCHAR",
          "description": "Canonical name of the molecular target (e.g., gene symbol, protein name).  This is the preferred, standardized name used for unambiguous identification."
        },
        {
          "name": "target_type",
          "type": "VARCHAR",
          "description": "Specifies the type of molecular target, such as \"gene\", \"protein\", \"RNA\", or \"pathway\"."
        },
        {
          "name": "gene_symbol",
          "type": "VARCHAR",
          "description": "The `gene_symbol` column in the `molecular_targets` table stores the official gene symbol (e.g., TP53, BRCA1) as a string.  This represents the standardized short-form name for a particular gene."
        },
        {
          "name": "uniprot_id",
          "type": "VARCHAR",
          "description": "The `uniprot_id` column (VARCHAR) in the `molecular_targets` table stores the UniProt identifier for a given molecular target. This ID uniquely identifies a protein sequence and provides a link to comprehensive information about the protein in the UniProt database."
        },
        {
          "name": "parent_target_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `target_id` column (also INTEGER) within the `molecular_targets` table.  Represents the ID of a parent or broader molecular target to which this target belongs, allowing for hierarchical organization of targets.  A `NULL` value indicates a top-level target with no parent."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time when information for this molecular target was last modified."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`: A JSONB column storing diverse structured data related to the molecular target, such as experimental results, binding affinities, related pathways, or other relevant information.  This flexible format allows for storing and querying complex data associated with each target."
        },
        {
          "name": "source_type",
          "type": "VARCHAR",
          "description": "`source_type` (VARCHAR): Indicates the source of the molecular target information, e.g., 'literature', 'database', 'experiment'."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column of the 'sources' table.  Identifies the primary source of information for the associated molecular target."
        }
      ]
    },
    {
      "table_name": "drug_classes",
      "description": "The `drug_classes` table stores information about classifications of drugs. Each record represents a drug class with a unique identifier (`id`), a common name (`name`), a standardized name (`canonical_name`), a detailed description (`description`), and an optional link to a parent class (`parent_class_id`).  The `last_update_date` tracks when the record was last modified.  `data` stores additional class-specific information, `source_type` indicates the origin of the data, and `primary_source_id` identifies the specific source record.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each drug class. Automatically increments on insertion. Serves as the primary key for the `drug_classes` table."
        },
        {
          "name": "name",
          "type": "VARCHAR",
          "description": "The `name` column in the `drug_classes` table is a string (VARCHAR) representing the name of a drug class (e.g., \"ACE inhibitor\", \"Beta-blocker\")."
        },
        {
          "name": "canonical_name",
          "type": "VARCHAR",
          "description": "The `canonical_name` column in the `drug_classes` table stores the standardized or preferred name for a drug class as a string. This ensures consistent referencing across the database, even if alternative names exist."
        },
        {
          "name": "description",
          "type": "TEXT",
          "description": "A textual description of the drug class. This field can contain detailed information about the class's characteristics, uses, and mechanisms of action."
        },
        {
          "name": "parent_class_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column (primary key) of the `drug_classes` table itself.  Represents the hierarchical parent class of a drug class, allowing for a tree-like structure of drug classifications.  A `NULL` value indicates a top-level class."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the timestamp of the most recent update to the drug class information in this row."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing miscellaneous data related to the drug class.  This allows for flexible storage of additional attributes and information not captured in other structured columns."
        },
        {
          "name": "source_type",
          "type": "VARCHAR",
          "description": "`source_type` (VARCHAR):  Indicates the source of the drug classification information (e.g., 'FDA', 'WHO', 'internal')."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column of the 'sources' table.  Identifies the primary source of information for the drug class."
        }
      ]
    },
    {
      "table_name": "drugs",
      "description": "The `drugs` table stores information about pharmaceutical drugs. Each drug is uniquely identified by `id`.  The table captures details such as the drug's name (`name`, `canonical_name`), its mechanism of action (`mechanism`), development stage (`development_stage`), disclosure status (`is_disclosed`), approval information (`first_approval_date`, `first_approval_geography_id`), associated company and modality (`primary_company_id`, `primary_modality_id`),  miscellaneous data (`data`), source information (`source_type`, `primary_source_id`), and termination details (`termination_id`, `termination_date`). The `last_update_date` field tracks the most recent modification to the drug record.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique, auto-incrementing integer serving as the primary key for identifying individual drug records within the `drugs` table."
        },
        {
          "name": "name",
          "type": "VARCHAR",
          "description": "`name` (VARCHAR):  The name of the drug."
        },
        {
          "name": "canonical_name",
          "type": "VARCHAR",
          "description": "The `canonical_name` column in the `drugs` table stores the standardized or preferred name of a drug as a string (VARCHAR). This ensures consistent referencing across the database, even if a drug has multiple brand names or synonyms."
        },
        {
          "name": "mechanism",
          "type": "VARCHAR",
          "description": "The `mechanism` column in the `drugs` table stores a string describing the pharmacological mechanism of action of a drug (e.g., \"ACE inhibitor\", \"Beta-blocker\", \"NSAID\")."
        },
        {
          "name": "development_stage",
          "type": "VARCHAR",
          "description": "The `development_stage` column in the `drugs` table is a string (VARCHAR) representing the current phase of a drug's development.  This could include values like \"Preclinical\", \"Phase 1\", \"Phase 2\", \"Phase 3\", \"Approved\", or \"Withdrawn\"."
        },
        {
          "name": "is_disclosed",
          "type": "BOOLEAN",
          "description": "Indicates whether the drug's price is publicly disclosed (true) or not (false)."
        },
        {
          "name": "first_approval_date",
          "type": "DATE",
          "description": "The `first_approval_date` column in the `drugs` table stores the date (YYYY-MM-DD) when a drug was first granted approval, presumably by a regulatory agency."
        },
        {
          "name": "first_approval_geography_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'geographies' table.  Stores the ID of the geographic location where the drug first received regulatory approval."
        },
        {
          "name": "primary_company_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `companies` table.  Identifies the primary company associated with this drug (e.g., manufacturer, distributor)."
        },
        {
          "name": "primary_modality_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'modalities' table.  Indicates the primary mode of administration for the drug (e.g., oral, intravenous, topical)."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time of the most recent update to the drug information in this row."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`: A JSONB column in the `drugs` table storing flexible, key-value data related to the drug entry. This may include various properties not suitable for dedicated columns, allowing for extensibility and complex data structures."
        },
        {
          "name": "source_type",
          "type": "VARCHAR",
          "description": "`source_type` (VARCHAR):  Indicates the source of the drug information, e.g., 'FDA', 'EMA', 'Clinical Trial', 'Pubmed'."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column of the 'sources' table.  Indicates the primary source of information for the drug record."
        },
        {
          "name": "termination_id",
          "type": "INTEGER",
          "description": "Unique identifier for a drug termination record.  Relates to the 'drug_terminations' table."
        },
        {
          "name": "termination_date",
          "type": "DATE",
          "description": "`termination_date` (DATE):  The date on which the drug was discontinued or withdrawn from the market.  NULL indicates the drug is still available."
        }
      ]
    },
    {
      "table_name": "document_sources",
      "description": "The `document_sources` table stores metadata about ingested documents, including their title, type, associated company, date, location (URL or file path), file integrity information, page count, extracted metadata, and ingestion/update timestamps.  It serves as a central registry for all documents processed by the system.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique, auto-incrementing integer serving as the primary key for identifying individual document sources in the `document_sources` table."
        },
        {
          "name": "document_title",
          "type": "VARCHAR",
          "description": "`document_title` (VARCHAR): Stores the title of the document sourced."
        },
        {
          "name": "document_type",
          "type": "VARCHAR",
          "description": "`document_type` (VARCHAR):  Categorizes the type of document sourced, e.g., 'invoice', 'contract', 'report', etc."
        },
        {
          "name": "company_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `companies` table.  Identifies the company associated with the document source."
        },
        {
          "name": "document_date",
          "type": "DATE",
          "description": "The `document_date` column in the `document_sources` table stores the date (YYYY-MM-DD) associated with the document source.  This represents the date the source was created, published, or otherwise relevant to the document."
        },
        {
          "name": "document_url",
          "type": "VARCHAR",
          "description": "`document_url` (VARCHAR): Stores the URL where the original document can be accessed. This applies to documents referenced in the `document_sources` table."
        },
        {
          "name": "file_path",
          "type": "VARCHAR",
          "description": "`file_path` (VARCHAR): Stores the location and name of the source document file. This could be a relative or absolute path, depending on the system configuration."
        },
        {
          "name": "file_hash",
          "type": "VARCHAR",
          "description": "Stores a cryptographic hash (e.g., SHA-256) of the document's content, used for verifying file integrity and deduplication."
        },
        {
          "name": "total_pages",
          "type": "INTEGER",
          "description": "Total number of pages in the document source."
        },
        {
          "name": "metadata",
          "type": "JSONB",
          "description": "`metadata`:  A JSONB column storing arbitrary key-value pairs associated with the document source. This allows for flexible storage of extra information related to the source, such as specific properties, configurations, or other relevant details."
        },
        {
          "name": "ingestion_date",
          "type": "TIMESTAMP",
          "description": "`ingestion_date` (TIMESTAMP):  Records the date and time when a document source was first ingested into the system."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Stores the date and time of the most recent update to the document source record in the `document_sources` table."
        }
      ]
    },
    {
      "table_name": "document_locations",
      "description": "The `document_locations` table stores specific locations within documents.  It links to documents via `document_id` and categorizes the location type (e.g., paragraph, table, image) using `location_type`.  `location_identifier` provides a specific identifier within that type.  Further details like `page_number`, `section_name`, and `content_snippet` help pinpoint the location.  A screenshot of the location can be found at the path stored in `screenshot_path`.  `location_hash` provides a unique hash for the location's content, useful for change detection.  Finally, `location_type` and `location_identifier` are (redundantly) included again - this likely indicates a design flaw where these columns should be removed to avoid redundancy.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id`:  A unique serial number automatically generated for each document location record in the `document_locations` table. Serves as the primary key."
        },
        {
          "name": "document_id",
          "type": "INTEGER",
          "description": "Unique identifier for a document, referencing a record in a related 'documents' table.  Data type is INTEGER."
        },
        {
          "name": "location_type",
          "type": "VARCHAR",
          "description": "Categorizes the type of location where the document is stored.  Examples include 'Office', 'Warehouse', 'Archive', 'Cloud Storage', etc."
        },
        {
          "name": "location_identifier",
          "type": "VARCHAR",
          "description": "A unique identifier (VARCHAR) for a specific location associated with a document, as stored in the `document_locations` table.  This could represent a physical location, a URL, or another system's location identifier."
        },
        {
          "name": "page_number",
          "type": "INTEGER",
          "description": "Stores the page number within a document where a specific element or piece of information is located.  Must be a positive integer."
        },
        {
          "name": "section_name",
          "type": "VARCHAR",
          "description": "`section_name` (VARCHAR): Stores the name of the section within a document where the document is located.  This could be a chapter title, an appendix name, or any other relevant section identifier."
        },
        {
          "name": "content_snippet",
          "type": "TEXT",
          "description": "A brief snippet of the document's content, typically the first few sentences or a relevant excerpt.  Stored as TEXT to accommodate varying lengths."
        },
        {
          "name": "screenshot_path",
          "type": "VARCHAR",
          "description": "Stores the file path to a screenshot associated with the document.  This path is relative to a predefined base directory."
        },
        {
          "name": "location_hash",
          "type": "VARCHAR",
          "description": "`location_hash` (VARCHAR): A hash value representing the storage location of the document. This is used for efficient lookup and deduplication."
        },
        {
          "name": "location_type",
          "type": "TYPE_UNKNOWN",
          "description": "`location_type` (TYPE_UNKNOWN):  Classifies the nature of the document location.  Currently unused and reserved for future implementation of location categorization within the `document_locations` table."
        },
        {
          "name": "location_identifier)",
          "type": "TYPE_UNKNOWN",
          "description": "`location_identifier (TYPE_UNKNOWN)` in the `document_locations` table stores an identifier for the location of a document.  The specific format of the identifier is currently unknown and requires further investigation."
        }
      ]
    },
    {
      "table_name": "entity_source_references",
      "description": "The `entity_source_references` table stores information about the sources and references for specific entities. It links entities (defined by `entity_type` and `entity_id`) to document locations (`document_location_id`) where information about them was extracted.  The table records the type of reference (`reference_type`), the extracted data itself (`extracted_data`), the confidence in the extraction (`confidence_score`), the method used for extraction (`extraction_method`), the date of extraction (`extraction_date`), and any relevant notes (`notes`).",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique sequential identifier for each entity source reference record. Automatically generated by the database."
        },
        {
          "name": "entity_type",
          "type": "VARCHAR",
          "description": "Classifies the type of entity referenced in this record (e.g., 'customer', 'product', 'order')."
        },
        {
          "name": "entity_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the primary key (presumably 'id') of the 'entities' table.  Represents the entity to which the source reference belongs."
        },
        {
          "name": "document_location_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `document_locations` table.  Stores the ID of the location where the source document for the entity reference is stored."
        },
        {
          "name": "reference_type",
          "type": "VARCHAR",
          "description": "Stores a code indicating the type of reference associated with the entity source.  Examples could include 'URL', 'DOI', 'ISBN', 'PubMed ID', etc."
        },
        {
          "name": "extracted_data",
          "type": "JSONB",
          "description": "`extracted_data` (JSONB): Stores extracted key-value pairs or other structured data from the referenced entity source. This allows for flexible storage of varying data structures depending on the source."
        },
        {
          "name": "confidence_score",
          "type": "FLOAT",
          "description": "The `confidence_score` column in the `entity_source_references` table stores a floating-point value representing the confidence level associated with the referenced source for a given entity.  Higher values indicate greater confidence in the accuracy and reliability of the source."
        },
        {
          "name": "extraction_method",
          "type": "VARCHAR",
          "description": "The `extraction_method` column (VARCHAR) in the `entity_source_references` table describes the method used to extract the entity information from the referenced source.  This could include values like \"manual\", \"automated\", \"API\", \"web scraping\", etc."
        },
        {
          "name": "extraction_date",
          "type": "TIMESTAMP",
          "description": "`extraction_date` (TIMESTAMP):  The date and time when the data was extracted from the source for this entity reference."
        },
        {
          "name": "notes",
          "type": "TEXT",
          "description": "Additional notes or comments regarding the relationship between the entity and the source reference."
        },
        {
          "name": "entity_id",
          "type": "TYPE_UNKNOWN",
          "description": "`entity_id` (TYPE_UNKNOWN):  The identifier of the entity referenced in this table.  The specific type of this ID is currently unknown and requires further investigation.  This column likely links to the primary key of an 'entity' table."
        },
        {
          "name": "document_location_id",
          "type": "TYPE_UNKNOWN",
          "description": "Foreign key referencing a location (likely in a 'document_locations' table), indicating where the referenced source document is physically located.  The specific type of location identifier is currently unknown (TYPE_UNKNOWN)."
        },
        {
          "name": "reference_type)",
          "type": "TYPE_UNKNOWN",
          "description": "`reference_type (TYPE_UNKNOWN)` in the `entity_source_references` table specifies the kind of reference associated with a particular entity source.  The specific meaning of the values in this column is currently undefined (TYPE_UNKNOWN) and requires further investigation."
        }
      ]
    },
    {
      "table_name": "entity_synonyms",
      "description": "The `entity_synonyms` table stores synonyms for various entities.  It maps different synonym forms to their canonical representation, along with metadata such as synonym type, confidence score, last update date, and primary source.  This table enables flexible entity lookup and normalization.  The `canonical_form` represents the standardized or preferred term, while `synonym` holds the alternative name.  `entity_type` categorizes the entity (e.g., person, organization, location).  Duplicate `canonical_form` and `synonym` columns seem to be an error and likely one should be removed.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique, auto-incrementing integer serving as the primary key for the `entity_synonyms` table."
        },
        {
          "name": "entity_type",
          "type": "VARCHAR",
          "description": "Classifies the type of entity the synonym refers to (e.g., 'person', 'organization', 'location')."
        },
        {
          "name": "canonical_form",
          "type": "VARCHAR",
          "description": "The `canonical_form` column (VARCHAR) in the `entity_synonyms` table stores the preferred or standardized representation of an entity.  This is the form to which all synonyms in the table ultimately refer."
        },
        {
          "name": "synonym",
          "type": "VARCHAR",
          "description": "Stores a synonym for an entity. This VARCHAR field in the `entity_synonyms` table holds alternative names or labels for a given entity."
        },
        {
          "name": "synonym_type",
          "type": "VARCHAR",
          "description": "Specifies the type or category of the synonym, e.g., 'abbreviation', 'formal name', 'common name', 'misspelling', etc.  This helps differentiate between various synonym relationships."
        },
        {
          "name": "confidence",
          "type": "FLOAT",
          "description": "The `confidence` column in the `entity_synonyms` table is a FLOAT value representing the confidence level (typically between 0.0 and 1.0 inclusive) that a given synonym truly represents the entity.  Higher values indicate greater confidence in the synonym's accuracy and relevance."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the timestamp of the most recent modification to the synonym entry in the `entity_synonyms` table."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source for the synonym in the 'sources' table.  Identifies the authoritative source for this particular synonym."
        },
        {
          "name": "canonical_form",
          "type": "TYPE_UNKNOWN",
          "description": "The `canonical_form` column in the `entity_synonyms` table stores the standardized or preferred form of an entity.  The specific data type is currently unknown (TYPE_UNKNOWN) and requires further investigation. This column likely links to the primary entity representation."
        },
        {
          "name": "synonym)",
          "type": "TYPE_UNKNOWN",
          "description": "`synonym` (TYPE_UNKNOWN):  Stores a synonym for an entity. The specific data type is currently unknown and requires further investigation. This column is part of the `entity_synonyms` table, which likely maps entities to their various synonyms."
        }
      ]
    },
    {
      "table_name": "field_citations",
      "description": "The `field_citations` table stores information about the source citations for specific data fields within various entities.  It links a field within an entity (e.g., a person's birth date) to a specific location within a document where that information was extracted.  The table includes details like the type of entity, the field name, the document location, the confidence in the extraction, and whether the source is considered primary.  `id` serves as a unique identifier for each citation record.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique auto-incrementing integer, serving as the primary key for the `field_citations` table."
        },
        {
          "name": "entity_type",
          "type": "VARCHAR",
          "description": "Classifies the type of entity being cited in the field citation.  Examples could include 'publication', 'person', 'organization', 'dataset', etc."
        },
        {
          "name": "entity_id",
          "type": "INTEGER",
          "description": "Unique identifier for the entity being cited.  This integer refers to a record in the 'entities' table."
        },
        {
          "name": "field_name",
          "type": "VARCHAR",
          "description": "`field_name` (VARCHAR): Stores the name of the field being cited in the `field_citations` table."
        },
        {
          "name": "document_location_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'document_locations' table.  Stores the ID of the location where the cited document can be found."
        },
        {
          "name": "extraction_confidence",
          "type": "FLOAT",
          "description": "`extraction_confidence` (FLOAT):  A value between 0 and 1 representing the confidence level of the automated extraction process for the associated field citation.  Higher values indicate greater confidence in the accuracy of the extracted information."
        },
        {
          "name": "extraction_date",
          "type": "TIMESTAMP",
          "description": "`extraction_date` (TIMESTAMP):  The date and time when the citation data was extracted from its source."
        },
        {
          "name": "is_primary_source",
          "type": "BOOLEAN",
          "description": "Indicates whether the cited source is considered a primary source (TRUE) or a secondary source (FALSE) for the associated field."
        },
        {
          "name": "notes",
          "type": "TEXT",
          "description": "Additional notes or comments regarding the field citation, such as methodology specifics, data limitations, or other relevant context."
        },
        {
          "name": "entity_id",
          "type": "TYPE_UNKNOWN",
          "description": "`entity_id` (TYPE_UNKNOWN):  The ID of the entity being cited.  The specific type of entity is unknown without further context.  This field likely relates to the citation stored in the `field_citations` table."
        },
        {
          "name": "field_name",
          "type": "TYPE_UNKNOWN",
          "description": "In the `field_citations` table, `field_name` (TYPE_UNKNOWN) stores the name of the field being cited.  Further investigation is needed to determine the specific data type and intended usage of this field."
        },
        {
          "name": "document_location_id)",
          "type": "TYPE_UNKNOWN",
          "description": "`document_location_id (TYPE_UNKNOWN)` in the `field_citations` table stores an identifier related to the location within a document where a citation occurs. The specific format and meaning of this identifier are currently unknown and require further investigation."
        }
      ]
    },
    {
      "table_name": "indication_specifications",
      "description": "The `indication_specifications` table stores detailed specifications for drug indications, linking them to specific diseases.  It includes the full specification text, a summarized version, biomarker status, line of therapy, disease stage, prior therapy requirements, combination therapy setting,  the last update date, raw data, the type of source (e.g., clinical trial, regulatory document), and the ID of the primary source.  Each specification is uniquely identified by its `id`.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique serial identifier for each indication specification.  Automatically increments on insertion.  Serves as the primary key for the `indication_specifications` table."
        },
        {
          "name": "disease_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific disease.  This integer links to the `diseases` table.  Used to specify which diseases an indication applies to."
        },
        {
          "name": "specification_text",
          "type": "TEXT",
          "description": "`specification_text` (TEXT): Holds the detailed textual description of a specific indication's specification.  This field can contain lengthy specifications related to an indication record in the `indication_specifications` table."
        },
        {
          "name": "specification_summary",
          "type": "VARCHAR",
          "description": "A concise summary of the specifications for this indication, stored as text.  This provides a brief overview of the key specification details."
        },
        {
          "name": "biomarker_status",
          "type": "JSONB",
          "description": "Stores biomarker status information as a JSON document.  This allows for flexible representation of complex biomarker data, such as different biomarker types, their corresponding test results, and thresholds used for determining positive/negative status."
        },
        {
          "name": "line_of_therapy",
          "type": "VARCHAR",
          "description": "Specifies the line of therapy (e.g., first-line, second-line, etc.) for a given indication."
        },
        {
          "name": "disease_stage",
          "type": "VARCHAR",
          "description": "`disease_stage` (VARCHAR):  Indicates the stage of the disease relevant to the indication specification.  This could be a classification (e.g., Stage I, Stage II, Early, Late, etc.) or a descriptive term."
        },
        {
          "name": "prior_therapy_requirements",
          "type": "TEXT",
          "description": "Textual description of prior therapy requirements for this indication. This field specifies any therapies a patient must have received (or failed to respond to) before being eligible for a treatment associated with this indication."
        },
        {
          "name": "combination_setting",
          "type": "BOOLEAN",
          "description": "Indicates whether a combination therapy setting is applicable for this indication specification (true) or not (false)."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time of the most recent modification to the indication specification."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value pairs related to the indication specification. This allows for storing various attributes and properties of the indication specification in a structured format."
        },
        {
          "name": "source_type",
          "type": "VARCHAR",
          "description": "Specifies the source or origin type of the indication specification.  This could represent values like 'Internal Research', 'Literature Review', 'Clinical Trial', 'Expert Opinion', etc."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source document (e.g., clinical trial, research paper) that supports the specific indication."
        }
      ]
    },
    {
      "table_name": "combination_indication_specifications",
      "description": "The `combination_indication_specifications` table stores detailed information about specific indications (diseases or conditions) for which a drug combination is intended.  It links combinations to diseases and provides specifics on the usage context, including biomarker status, line of therapy, disease stage, prior therapy requirements, the rationale behind the combination, evidence of synergy, and the source of the information. Each record is uniquely identified by `id` and connected to a specific drug combination via `combination_id` and a specific disease via `disease_id`.  The `data` column allows for storing additional structured information related to the specification.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each combination indication specification.  Automatically increments on insertion. Serves as the primary key for this table."
        },
        {
          "name": "combination_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific combination of drugs and indications.  Foreign key referencing the `combinations` table."
        },
        {
          "name": "disease_id",
          "type": "INTEGER",
          "description": "Unique identifier for a disease.  Foreign key referencing the `diseases` table."
        },
        {
          "name": "specification_text",
          "type": "TEXT",
          "description": "`specification_text` (TEXT):  Holds the detailed textual description of a specific combination indication specification. This might include dosage instructions, administration guidelines, or other relevant clinical information."
        },
        {
          "name": "specification_summary",
          "type": "VARCHAR",
          "description": "A brief summary of the specifications for this specific combination of indication (e.g., disease or condition) and product.  This field provides a concise overview of the key specification details."
        },
        {
          "name": "biomarker_status",
          "type": "JSONB",
          "description": "Stores biomarker status information as a JSON document. This allows for flexible representation of complex biomarker data related to specific combination indications.  The JSON structure may vary but typically includes details like biomarker name, status (e.g., positive, negative), cutoff value, and testing method."
        },
        {
          "name": "line_of_therapy",
          "type": "VARCHAR",
          "description": "Specifies the line of therapy (e.g., first-line, second-line, etc.) for a given drug combination and indication as described in the combination_indication_specifications table."
        },
        {
          "name": "disease_stage",
          "type": "VARCHAR",
          "description": "Specifies the stage of the disease relevant to the combination indication.  This field allows for free-text descriptions of the disease stage (e.g., \"Stage I\", \"Early Stage\", \"Advanced\", \"Metastatic\")."
        },
        {
          "name": "prior_therapy_requirements",
          "type": "TEXT",
          "description": "Textual description of specific prior therapy requirements a patient must meet to be eligible for the combination therapy indicated in this record. This could include specific drugs, classes of drugs, or treatment durations."
        },
        {
          "name": "combination_rationale",
          "type": "TEXT",
          "description": "This `TEXT` column, `combination_rationale`, within the `combination_indication_specifications` table, describes the clinical or scientific justification for using a specific combination of drugs/treatments for a given indication.  It may include details on synergistic effects, improved efficacy, reduced toxicity, or addressing resistance mechanisms."
        },
        {
          "name": "synergy_evidence",
          "type": "TEXT",
          "description": "`synergy_evidence`:  (TEXT)  Supporting evidence for synergistic effects of the drug combination for the specified indication.  This may include references to preclinical or clinical studies, or a brief summary of the observed synergy."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time of the most recent modification to the combination indication specification."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing structured information related to the combination indication specification. This field allows for flexible storage of various attributes and their values pertaining to the specification."
        },
        {
          "name": "source_type",
          "type": "VARCHAR",
          "description": "Specifies the source of the combination indication, e.g., 'FDA', 'EMA', 'Clinical Trial', 'Literature'."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source document (e.g., clinical trial, research paper) that supports the specific combination indication specification."
        }
      ]
    },
    {
      "table_name": "entity_relationships",
      "description": "The `entity_relationships` table stores relationships between different entities.  It identifies the source and target entities by their type and ID, defines the type of relationship, and includes a confidence score. Additional relationship data can be stored in a JSON field.  The table also tracks the last update date, the source of the relationship information (source_type and primary_source_id), along with redundant columns for source and target entity details (likely for performance optimization or denormalization).",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id`:  A unique, automatically incrementing integer that serves as the primary key for the `entity_relationships` table."
        },
        {
          "name": "source_entity_type",
          "type": "VARCHAR",
          "description": "Specifies the type of entity acting as the source in the relationship.  Examples could include 'customer', 'product', 'order', etc."
        },
        {
          "name": "source_entity_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the source entity involved in the relationship."
        },
        {
          "name": "relationship_type",
          "type": "VARCHAR",
          "description": "Defines the type of relationship between two entities.  Examples could include \"parent\", \"child\", \"spouse\", \"employee\", \"employer\", \"friend\", etc."
        },
        {
          "name": "target_entity_type",
          "type": "VARCHAR",
          "description": "Specifies the type of the target entity in the relationship.  This could represent categories like 'user', 'group', 'organization', 'document', etc."
        },
        {
          "name": "target_entity_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the target entity in this relationship.  Stored as an integer."
        },
        {
          "name": "confidence",
          "type": "FLOAT",
          "description": "`confidence` (FLOAT):  A numerical representation of the certainty or confidence level associated with the identified relationship between two entities in this table.  Values typically range from 0.0 to 1.0, where 1.0 represents the highest confidence."
        },
        {
          "name": "relationship_data",
          "type": "JSONB",
          "description": "Stores a flexible JSON document representing the details of the relationship between two entities. This could include relationship type, properties, timestamps, or other relevant information. Using JSONB allows for efficient querying and indexing of the data within the JSON structure."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the most recent date and time when the relationship between two entities was modified or updated."
        },
        {
          "name": "source_type",
          "type": "VARCHAR",
          "description": "`source_type`:  (VARCHAR)  Indicates the origin or type of the source entity involved in the relationship.  Examples could include 'database', 'API', 'user_upload', etc."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the primary identifier (ID) of the primary source involved in the relationship.  This column identifies which source entity is considered the primary actor or initiator in the documented relationship."
        },
        {
          "name": "source_entity_id",
          "type": "TYPE_UNKNOWN",
          "description": "Foreign key referencing the ID of the source entity involved in the relationship. The specific entity type is unknown and may vary depending on the relationship."
        },
        {
          "name": "relationship_type",
          "type": "TYPE_UNKNOWN",
          "description": "The `relationship_type` column in the `entity_relationships` table, of type `TYPE_UNKNOWN`, specifies the nature of the relationship between two entities.  This column is currently used when the specific type of relationship is undetermined or requires further categorization."
        },
        {
          "name": "target_entity_type",
          "type": "TYPE_UNKNOWN",
          "description": "Specifies the type of the target entity in the relationship.  Currently represented by a placeholder 'TYPE_UNKNOWN' indicating the specific type is not yet determined or implemented."
        },
        {
          "name": "target_entity_id)",
          "type": "TYPE_UNKNOWN",
          "description": "`target_entity_id (TYPE_UNKNOWN)`:  Identifier of the related entity in the `entity_relationships` table. The specific type of this ID is currently unknown and requires further investigation.  This column likely represents the foreign key referencing another entity."
        }
      ]
    },
    {
      "table_name": "relationship_type_reference",
      "description": "The `relationship_type_reference` table stores a controlled vocabulary of relationship types between entities.  It defines each relationship's category, specific type, description, applicable entity types, and whether it's currently active.  The `id` column serves as a primary key, while `relationship_type` provides a unique name for each relationship.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each relationship type in the `relationship_type_reference` table.  Automatically increments on insertion.  Serves as the primary key."
        },
        {
          "name": "relationship_category",
          "type": "VARCHAR",
          "description": "Categorizes the type of relationship, such as \"Family\", \"Friend\", \"Colleague\", \"Business\", etc.  Stored as a string in the `relationship_type_reference` table."
        },
        {
          "name": "relationship_type",
          "type": "VARCHAR",
          "description": "Stores the name or label of a specific type of relationship (e.g., \"Parent\", \"Child\", \"Spouse\", \"Sibling\", \"Friend\", \"Colleague\").  This column acts as a descriptive identifier within the `relationship_type_reference` table."
        },
        {
          "name": "description",
          "type": "TEXT",
          "description": "Holds a textual description of the relationship type defined in the `relationship_type_reference` table. This provides further context or clarification about the nature of the relationship."
        },
        {
          "name": "applicable_entity_types",
          "type": "JSONB",
          "description": "Stores a JSON array of strings representing the entity types to which this relationship type can apply.  For example, `[\"user\", \"group\", \"organization\"]`."
        },
        {
          "name": "is_active",
          "type": "BOOLEAN",
          "description": "Indicates whether the relationship type is currently active (true) or inactive (false)."
        },
        {
          "name": "relationship_type)",
          "type": "TYPE_UNKNOWN",
          "description": "The `relationship_type` column in the `relationship_type_reference` table stores the type of relationship.  The specific format of this data is currently unknown (TYPE_UNKNOWN) and requires further investigation. This table likely serves as a lookup or reference for valid relationship types used elsewhere in the database."
        }
      ]
    },
    {
      "table_name": "drug_trial_details",
      "description": "The `drug_trial_details` table stores detailed information about specific arms or cohorts within clinical trials.  It links to a parent trial via `relationship_id`, recording specifics like `dosage`, `treatment_duration`, `treatment_schedule`, and more detailed `arm_details`.  `outcome_summary` provides a high-level overview of the arm's results, while `biomarker_data` may contain more granular measurements. `data` allows for storage of additional, trial-specific information, and `primary_source_id` identifies the original data source. `last_update_date` tracks when the record was last modified.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  A unique, auto-incrementing integer serving as the primary key for the `drug_trial_details` table.  This column automatically assigns a new, unique identifier to each new drug trial detail record."
        },
        {
          "name": "relationship_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'relationships' table.  Identifies the relationship between the subject and the person reporting the drug trial details."
        },
        {
          "name": "dosage",
          "type": "VARCHAR",
          "description": "The `dosage` column in the `drug_trial_details` table stores the administered dosage of the drug as a string.  This may include units (e.g., \"10mg\", \"2 tablets\", \"10mL\")."
        },
        {
          "name": "treatment_duration",
          "type": "VARCHAR",
          "description": "`treatment_duration` (VARCHAR):  Represents the length of time subjects were exposed to the treatment in a drug trial.  This may be expressed in various formats (e.g., \"6 months\", \"2 years\", \"12 weeks\")."
        },
        {
          "name": "treatment_schedule",
          "type": "TEXT",
          "description": "`treatment_schedule` (TEXT):  Describes the planned timing and dosage of the treatment administered during the drug trial. This may include frequency (e.g., daily, weekly), dosage amounts, and the overall duration of treatment administration."
        },
        {
          "name": "arm_details",
          "type": "JSONB",
          "description": "`arm_details` (JSONB):  Stores structured information about each arm (e.g., treatment group, placebo group) within a drug trial. This may include details like arm name, treatment description, dosage, administration route, and other arm-specific parameters."
        },
        {
          "name": "outcome_summary",
          "type": "TEXT",
          "description": "`outcome_summary`:  A text field in the `drug_trial_details` table providing a concise summary of the overall outcome of the drug trial. This may include key findings, significant adverse events, and a general statement regarding the effectiveness of the drug."
        },
        {
          "name": "biomarker_data",
          "type": "JSONB",
          "description": "`biomarker_data` (JSONB): Stores biomarker measurements and related information for the drug trial, allowing flexible storage of various biomarker types and their associated values.  This field can include nested structures to represent complex data."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time of the most recent modification to the drug trial details in this row."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing miscellaneous data related to the drug trial. This allows for flexible storage of key-value pairs and complex data structures that don't fit neatly into traditional columns.  Examples might include patient demographics, dosage information, or side effects observed during the trial."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column in the 'sources' table.  Indicates the primary source of information for this drug trial record."
        }
      ]
    },
    {
      "table_name": "research_programs",
      "description": "The `research_programs` table stores information about research programs undertaken by various companies. Each program is uniquely identified by `id` and associated with a `company_id`.  Key details include the `program_name`, `therapeutic_area`, `primary_modality_id`, and current development `stage`.  `disclosed_date` tracks the public announcement, while `last_update_date` reflects the most recent modification to the record.  `data` holds additional program-specific information.  `source_type` and `primary_source_id` specify the origin of the information. If terminated, `termination_id` categorizes the reason and `termination_date` records the date.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id`: Unique serial identifier for each research program.  Serves as the primary key for the `research_programs` table.  Automatically increments with each new entry."
        },
        {
          "name": "company_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `companies` table. Identifies the company sponsoring or conducting the research program."
        },
        {
          "name": "program_name",
          "type": "VARCHAR",
          "description": "`program_name` (VARCHAR):  The name of the research program."
        },
        {
          "name": "therapeutic_area",
          "type": "VARCHAR",
          "description": "Therapeutic area of focus for the research program (e.g., Oncology, Cardiology, Neurology)."
        },
        {
          "name": "primary_modality_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'modalities' table.  Indicates the primary modality (e.g., MRI, PET, EEG) used in the research program."
        },
        {
          "name": "stage",
          "type": "VARCHAR",
          "description": "Current stage of the research program (e.g., \"Proposal,\" \"In Progress,\" \"Completed,\" \"Suspended\")."
        },
        {
          "name": "disclosed_date",
          "type": "DATE",
          "description": "The `disclosed_date` column in the `research_programs` table stores the date on which a specific research program was publicly disclosed.  It is of type `DATE` and therefore holds only date information (year, month, day) without time components."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time of the most recent modification to the research program's information."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value data related to the research program. This allows for storing various attributes and metadata in a structured format without needing to define separate columns for each."
        },
        {
          "name": "source_type",
          "type": "VARCHAR",
          "description": "`source_type`:  (VARCHAR) Classifies the funding source for the research program (e.g., 'Government', 'Private', 'University', 'Internal')."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column of the 'sources' table.  Identifies the primary information source for the research program."
        },
        {
          "name": "termination_id",
          "type": "INTEGER",
          "description": "Unique identifier for the termination record associated with a research program.  References the `terminations` table (if applicable).  NULL indicates the program is currently active."
        },
        {
          "name": "termination_date",
          "type": "DATE",
          "description": "`termination_date` (DATE):  The date a research program officially ended.  NULL indicates the program is still ongoing."
        }
      ]
    },
    {
      "table_name": "research_program_indications",
      "description": "The `research_program_indications` table stores information about the diseases targeted by specific research programs. It links programs to diseases, specifying the type of indication (e.g., primary, secondary), inclusion date, current status, rationale, biomarker criteria, priority level, associated data, primary data source, and last update date.  It also includes a unique identifier for each program-disease association.  Note: disease_id and indication_type appear to be duplicated column names.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique serial identifier for each research program indication record.  Automatically increments upon insertion.  Serves as the primary key for the table."
        },
        {
          "name": "program_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `program` table.  Identifies the research program associated with a specific indication."
        },
        {
          "name": "disease_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'diseases' table.  Uniquely identifies the disease targeted by a research program indication."
        },
        {
          "name": "indication_type",
          "type": "VARCHAR",
          "description": "The `indication_type` column in the `research_program_indications` table is a VARCHAR field that specifies the category or classification of the medical indication associated with a research program.  This could represent values like \"Primary\", \"Secondary\", \"Exploratory\", etc."
        },
        {
          "name": "inclusion_date",
          "type": "DATE",
          "description": "The `inclusion_date` column of type `DATE` in the `research_program_indications` table stores the date when a specific indication (e.g., disease or condition) was added to a research program.  This date signifies the start of the research program's focus on that particular indication."
        },
        {
          "name": "status",
          "type": "VARCHAR",
          "description": "Indicates the current status of the research program's indication, such as \"Active,\" \"Inactive,\" \"Completed,\" \"Planned,\" or \"Suspended.\""
        },
        {
          "name": "indication_rationale",
          "type": "TEXT",
          "description": "Provides the rationale behind selecting a specific indication for the research program. This field allows for free-text descriptions explaining the scientific, medical, or strategic reasoning for pursuing the indicated therapeutic area."
        },
        {
          "name": "biomarker_criteria",
          "type": "JSONB",
          "description": "JSONB object containing the criteria for a specific biomarker within a research program indication.  This may include the biomarker name, cutoff values, units, assessment method, and other relevant details for determining eligibility or stratification based on the biomarker."
        },
        {
          "name": "priority_level",
          "type": "INTEGER",
          "description": "Indicates the priority level assigned to a research program indication. Higher integer values represent higher priority."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value data related to the research program's indications.  This allows for storing complex or varying attributes about the indications without requiring schema changes."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `primary_sources` table.  Identifies the primary source document for the research program indication."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time of the most recent modification to the research program indication record."
        },
        {
          "name": "disease_id",
          "type": "TYPE_UNKNOWN",
          "description": "`disease_id` (TYPE_UNKNOWN):  Identifier for a disease relevant to the research program.  The specific format of this identifier is currently undefined and requires further documentation.  This column links to the disease being investigated within the research program indicated in the `research_program_indications` table."
        },
        {
          "name": "indication_type)",
          "type": "TYPE_UNKNOWN",
          "description": "The `indication_type` column in the `research_program_indications` table, currently of `TYPE_UNKNOWN`, stores the type of medical indication associated with a research program.  Further investigation is needed to determine the intended data type and possible values for this column."
        }
      ]
    },
    {
      "table_name": "research_program_modalities",
      "description": "The `research_program_modalities` table defines the relationship between research programs and the modalities (e.g., imaging techniques, assays, interventions) they utilize.  It tracks whether a modality is primary for a given program, if it's a platform focus, and allows for additional notes.  `program_id` and `modality_id` link to respective tables. `is_primary` and `is_platform_focus` flags indicate key modalities.  `last_update_date` records the last modification timestamp, and `primary_source_id` identifies the source of the information.  **(Note: modality_id appears twice in the provided description - this is likely an error and one instance should be removed.)**",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each research program modality.  Automatically increments. Serves as the primary key."
        },
        {
          "name": "program_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `research_programs` table.  Identifies the research program associated with a specific modality."
        },
        {
          "name": "modality_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'modalities' table.  Identifies the specific modality (e.g., MRI, PET, EEG) associated with a research program."
        },
        {
          "name": "is_primary",
          "type": "BOOLEAN",
          "description": "Indicates whether a modality is primary for a given research program.  A value of 'true' signifies it is a primary modality, while 'false' indicates it is not."
        },
        {
          "name": "is_platform_focus",
          "type": "BOOLEAN",
          "description": "Indicates whether the research program's modality is specifically focused on a platform (e.g., a specific technology or infrastructure) rather than a specific disease or intervention.  True if platform-focused, False otherwise."
        },
        {
          "name": "notes",
          "type": "TEXT",
          "description": "Additional notes or comments related to the research program modalities.  This field allows for free-form text entry."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time of the most recent modification to a research program modality record."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `primary_sources` table.  Identifies the primary source of information or data for a specific research program modality."
        },
        {
          "name": "modality_id)",
          "type": "TYPE_UNKNOWN",
          "description": "Foreign key referencing the 'modalities' table.  Specifies the type of modality (e.g., MRI, PET, EEG) associated with a research program.  Data type is currently unknown and requires further investigation."
        }
      ]
    },
    {
      "table_name": "drug_targets",
      "description": "The `drug_targets` table stores information about the relationships between drugs (and drug combinations) and their biological targets. It records the type of interaction, binding affinity details, evidence of target engagement, clinical relevance, confidence in the data, the primary source of the information, and the last update timestamp.  Each entry links a drug or drug combination to a specific target, allowing for analysis of drug mechanisms of action and potential therapeutic effects.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique, automatically incrementing integer serving as the primary key for the `drug_targets` table.  Identifies each drug target record."
        },
        {
          "name": "drug_id",
          "type": "INTEGER",
          "description": "Unique identifier for a drug.  Foreign key referencing the 'drugs' table."
        },
        {
          "name": "combination_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific combination of drugs targeting a particular set of biological targets.  Foreign key referencing the 'drug_combinations' table."
        },
        {
          "name": "target_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column in the 'targets' table.  Represents the target (e.g., protein, gene) affected by a drug."
        },
        {
          "name": "relationship_type",
          "type": "VARCHAR",
          "description": "Defines the type of relationship between a drug and its target (e.g., inhibitor, agonist, antagonist, binder)."
        },
        {
          "name": "binding_affinity",
          "type": "VARCHAR",
          "description": "Binding affinity (VARCHAR): Represents the strength of interaction between a drug and its target, typically expressed as a Kd, Ki, or IC50 value (including units, e.g., nM, \u00b5M)."
        },
        {
          "name": "affinity_value",
          "type": "NUMERIC",
          "description": "`affinity_value` (NUMERIC):  A numerical representation of the binding affinity between a drug and its target. Lower values typically indicate stronger binding."
        },
        {
          "name": "affinity_unit",
          "type": "VARCHAR",
          "description": "The `affinity_unit` column in the `drug_targets` table stores the unit of measurement for the binding affinity between a drug and its target (e.g., nM, pM, Kd).  It is a string value (VARCHAR)."
        },
        {
          "name": "affinity_type",
          "type": "VARCHAR",
          "description": "The `affinity_type` column in the `drug_targets` table stores a string value indicating the type of binding affinity measurement between a drug and its target.  This could include values like \"Kd\", \"Ki\", \"IC50\", or \"EC50\", specifying the dissociation constant, inhibition constant, half maximal inhibitory concentration, or half maximal effective concentration, respectively."
        },
        {
          "name": "is_primary",
          "type": "BOOLEAN",
          "description": "Indicates whether the target is the primary target of the drug (TRUE) or a secondary target (FALSE)."
        },
        {
          "name": "target_engagement_evidence",
          "type": "TEXT",
          "description": "`target_engagement_evidence`:  A text field containing supporting evidence for target engagement, such as experimental results, literature references, or assay data, demonstrating that the drug interacts with the specified target."
        },
        {
          "name": "clinical_relevance",
          "type": "TEXT",
          "description": "Clinical relevance of targeting this drug target. This field may contain free-text descriptions of known or predicted effects of modulating the target's activity in a clinical setting, including disease indications, potential side effects, and patient populations."
        },
        {
          "name": "confidence_level",
          "type": "VARCHAR",
          "description": "`confidence_level` (VARCHAR):  Indicates the confidence in the association between a drug and its target.  This could represent different levels of evidence, e.g., 'High', 'Medium', 'Low', or specific validation methods."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing additional, flexible data related to the drug target. This may include properties like mechanism of action, target pathways, related diseases, or experimental data, allowing for complex and evolving information to be associated with each target."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the primary data source (e.g., ChEMBL, DrugBank) for the drug-target interaction.  Stores the unique identifier from the source database."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the most recent date and time when information for this drug target was modified in the `drug_targets` table."
        }
      ]
    },
    {
      "table_name": "drug_modalities",
      "description": "The `drug_modalities` table stores information about the different modalities (e.g., treatment, prevention, diagnosis) associated with specific drugs or drug combinations.  It links drugs (`drug_id`) and drug combinations (`combination_id`) to modalities (`modality_id`), indicating whether a modality is the primary use (`is_primary`). Additional information can be stored in `notes` and `data` fields. `last_update_date` tracks the last modification, and `primary_source_id` references the original source of the information.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique serial identifier for each drug modality record. Automatically increments upon insertion.  Serves as the primary key for the `drug_modalities` table."
        },
        {
          "name": "drug_id",
          "type": "INTEGER",
          "description": "Unique identifier for a drug modality.  Foreign key referencing the 'drugs' table."
        },
        {
          "name": "combination_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific combination of drug modalities used in a treatment.  References a record in the `combinations` table."
        },
        {
          "name": "modality_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column of the 'modalities' table.  Represents the modality (e.g., oral, intravenous, topical) associated with a particular drug."
        },
        {
          "name": "is_primary",
          "type": "BOOLEAN",
          "description": "Indicates whether the drug modality is the primary method of treatment (true) or a secondary/adjunctive therapy (false)."
        },
        {
          "name": "notes",
          "type": "TEXT",
          "description": "Additional notes or information regarding the drug modality, such as specific administration instructions, observed side effects, or relevant research findings."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time of the most recent modification to the drug modality information in this row."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`: A JSONB column storing additional, flexible data related to the drug modality. This can include various properties and attributes specific to the modality, allowing for schema-less storage and efficient querying of complex information."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column of the 'sources' table.  Identifies the primary source of information for the drug modality record."
        }
      ]
    },
    {
      "table_name": "drug_development_roles",
      "description": "The `drug_development_roles` table tracks the roles played by different companies in the development of drugs, drug combinations, and treatment regimens. It records the development phase, geographical region, time period of involvement, cost-sharing arrangements, associated deals, and other relevant data for each role.  The table links to drug, combination, regimen, company, and geography tables via their respective IDs, and maintains a history of updates with `last_update_date`.  `is_current` flags active development roles.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique sequential identifier for each drug development role record. Automatically generated by the database."
        },
        {
          "name": "drug_id",
          "type": "INTEGER",
          "description": "Unique identifier for a drug.  Foreign key referencing the `drug` table."
        },
        {
          "name": "combination_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific combination of drugs being researched/developed.  Foreign key referencing the `drug_combinations` table."
        },
        {
          "name": "regimen_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'regimens' table.  Identifies the specific drug regimen associated with a role in drug development."
        },
        {
          "name": "company_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `companies` table.  Identifies the company associated with a particular drug development role."
        },
        {
          "name": "development_role",
          "type": "VARCHAR",
          "description": "The `development_role` column in the `drug_development_roles` table is a string (VARCHAR) representing a specific role involved in the drug development process.  This could include roles such as \"Discovery Researcher\", \"Clinical Trial Manager\", \"Regulatory Affairs Specialist\", etc."
        },
        {
          "name": "development_phase",
          "type": "VARCHAR",
          "description": "Indicates the current phase of drug development for which the role is defined.  Possible values include (but are not limited to) \"Pre-clinical\", \"Phase 1\", \"Phase 2\", \"Phase 3\", \"Phase 4\", and \"Post-market Surveillance\"."
        },
        {
          "name": "geography_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a geographical location (e.g., country, region) relevant to the drug development role."
        },
        {
          "name": "start_date",
          "type": "DATE",
          "description": "The `start_date` column in the `drug_development_roles` table stores the date (YYYY-MM-DD) when an individual started a specific role in a drug development project."
        },
        {
          "name": "end_date",
          "type": "DATE",
          "description": "`end_date` (DATE): The date on which a person's role in a drug development project ended.  NULL indicates an ongoing role."
        },
        {
          "name": "is_current",
          "type": "BOOLEAN",
          "description": "Indicates whether the drug development role is currently active (true) or inactive (false)."
        },
        {
          "name": "cost_sharing_arrangement",
          "type": "TEXT",
          "description": "Describes the financial agreement for sharing the costs of drug development between involved parties (e.g., pharmaceutical companies, research institutions, government agencies). This field provides a textual summary of the arrangement."
        },
        {
          "name": "deal_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific deal (e.g., licensing, collaboration, acquisition) related to the drug development role."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`: A JSONB column storing miscellaneous data related to a drug development role.  This field allows for flexible storage of additional information not captured by other columns, such as specific responsibilities, required skills, or project assignments."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column in the 'sources' table.  Identifies the primary source of information for the drug development role."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the timestamp of the most recent modification to a drug development role entry."
        }
      ]
    },
    {
      "table_name": "drug_combinations",
      "description": "The `drug_combinations` table stores information about combinations of drugs, including their names, type, brand association, development status, rationale behind the combination, current status, associated data, primary source, and last update time.  Each combination is uniquely identified by an `id`.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique sequential integer identifier automatically generated for each drug combination record in the `drug_combinations` table.  Serves as the primary key."
        },
        {
          "name": "combination_name",
          "type": "VARCHAR",
          "description": "The `combination_name` column (VARCHAR) in the `drug_combinations` table stores the name assigned to a specific combination of drugs.  This could be a generic name, a brand name, or a descriptive name indicating the constituent drugs."
        },
        {
          "name": "canonical_name",
          "type": "VARCHAR",
          "description": "The `canonical_name` column in the `drug_combinations` table stores a standardized, case-insensitive name for a drug combination. This VARCHAR field provides a consistent identifier for each combination regardless of variations in spelling, capitalization, or ordering of individual drug names."
        },
        {
          "name": "combination_type",
          "type": "VARCHAR",
          "description": "Specifies the type of drug combination, e.g., synergistic, additive, antagonistic, or no interaction."
        },
        {
          "name": "primary_brand_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column of the 'brands' table.  Indicates the primary brand associated with this drug combination."
        },
        {
          "name": "development_stage",
          "type": "VARCHAR",
          "description": "The `development_stage` column in the `drug_combinations` table is a VARCHAR field that stores the current stage of development for a given drug combination. This could include values like \"pre-clinical\", \"phase 1\", \"phase 2\", \"phase 3\", \"approved\", or \"discontinued\"."
        },
        {
          "name": "rationale",
          "type": "TEXT",
          "description": "Rationale:  A text field providing the clinical justification or reasoning behind the inclusion of a specific drug combination in the `drug_combinations` table.  This may include supporting evidence, clinical guidelines, or specific patient factors."
        },
        {
          "name": "combination_status",
          "type": "VARCHAR",
          "description": "Stores the status of a drug combination, such as \"Approved\", \"Under Review\", \"Rejected\", or \"Experimental\"."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "Stores a JSON document containing additional information about the drug combination.  This could include details like dosage, administration instructions, or study-specific metadata."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source documenting the drug combination.  This allows tracing back the information about the combination to its original source."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time of the most recent modification to the drug combination entry in the `drug_combinations` table."
        }
      ]
    },
    {
      "table_name": "drug_combination_components",
      "description": "The `drug_combination_components` table details the individual drug components of specific drug combinations.  Each record represents a single drug within a combination, linking to the combination itself (`combination_id`) and the specific drug (`drug_id`).  The table also stores the drug's `role_in_combination`, its `ratio_or_dose` within the combination, any relevant `data` associated with this component, and the `primary_source_id` for the information.  The `id` field serves as a unique primary key for each component record. Note: the table definition includes `drug_id` twice, which is likely an error and one should probably be removed.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  A unique, auto-incrementing integer that serves as the primary key for the `drug_combination_components` table.  It identifies each individual record representing a component within a drug combination."
        },
        {
          "name": "combination_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a unique drug combination in a related table (likely 'drug_combinations').  Stores the integer ID of the specific drug combination to which the components in this row belong."
        },
        {
          "name": "drug_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'drug' table, uniquely identifying a specific drug included in the combination."
        },
        {
          "name": "role_in_combination",
          "type": "VARCHAR",
          "description": "Defines the role of a specific drug within a drug combination (e.g., \"primary agent\", \"adjuvant\", \"synergist\", etc.)."
        },
        {
          "name": "ratio_or_dose",
          "type": "VARCHAR",
          "description": "Ratio or dose of the component drug within the combination.  Stored as a string to accommodate varied formats (e.g., \"1:2\", \"50 mg\", \"100 mcg/kg\")."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing additional, flexible data related to the drug combination component. This might include properties like dosage, administration route, or other component-specific information not captured in dedicated columns."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column in the `sources` table.  Identifies the primary literature source supporting the inclusion of this drug component in the combination."
        },
        {
          "name": "drug_id)",
          "type": "TYPE_UNKNOWN",
          "description": "`drug_id` (TYPE_UNKNOWN):  Identifier for a drug within a drug combination. The specific type of identifier is currently unknown and requires further investigation. This column links to a drug entry, potentially in another table."
        }
      ]
    },
    {
      "table_name": "clinical_trials",
      "description": "The `clinical_trials` table stores information about clinical trials, including their unique identifier (`id`), official trial identifier (`nct_id`), title, current status, trial phase, start and completion dates, planned and actual enrollment numbers, sponsor and registry information, last update date, trial data, source type, primary source identifier, termination details (id, date), and redundant 'Phase' columns that should be removed.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique, auto-incrementing integer identifier for each clinical trial record in the `clinical_trials` table. Serves as the primary key."
        },
        {
          "name": "nct_id",
          "type": "VARCHAR",
          "description": "`nct_id` (VARCHAR):  Unique identifier for a clinical trial assigned by ClinicalTrials.gov."
        },
        {
          "name": "title",
          "type": "TEXT",
          "description": "The `title` column in the `clinical_trials` table stores the official title of the clinical trial as a text string.  This field provides a concise summary of the study's purpose."
        },
        {
          "name": "status",
          "type": "VARCHAR",
          "description": "The `status` column in the `clinical_trials` table is a VARCHAR field indicating the current operational state of the clinical trial.  This could include values like \"Not yet recruiting\", \"Recruiting\", \"Active, not recruiting\", \"Completed\", \"Suspended\", \"Terminated\", etc."
        },
        {
          "name": "phase",
          "type": "VARCHAR",
          "description": "Indicates the current stage of the clinical trial, such as \"Phase 1,\" \"Phase 2,\" \"Phase 3,\" \"Phase 4,\" or \"N/A\"."
        },
        {
          "name": "start_date",
          "type": "DATE",
          "description": "The `start_date` column in the `clinical_trials` table stores the date on which a clinical trial officially began.  Data type is DATE, representing the date only (year, month, day)."
        },
        {
          "name": "completion_date",
          "type": "DATE",
          "description": "The `completion_date` column in the `clinical_trials` table stores the date (YYYY-MM-DD) on which a clinical trial was completed.  A NULL value indicates that the trial is ongoing or its completion date is unknown."
        },
        {
          "name": "planned_enrollment",
          "type": "INTEGER",
          "description": "Planned enrollment: The target number of participants intended to be enrolled in the clinical trial.  Stored as an integer."
        },
        {
          "name": "actual_enrollment",
          "type": "INTEGER",
          "description": "The `actual_enrollment` column in the `clinical_trials` table is an INTEGER representing the actual number of participants enrolled in a given clinical trial."
        },
        {
          "name": "primary_sponsor_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column in the 'sponsors' table.  Identifies the primary sponsor of the clinical trial."
        },
        {
          "name": "primary_registry_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the primary registry's unique identifier.  Links the clinical trial to its primary registration record (e.g., ClinicalTrials.gov identifier)."
        },
        {
          "name": "primary_registry_identifier",
          "type": "VARCHAR",
          "description": "The `primary_registry_identifier` column in the `clinical_trials` table stores a string representing the unique identifier assigned to the trial by the primary clinical trial registry where it was first registered (e.g., NCT number for ClinicalTrials.gov, EudraCT number for the EU Clinical Trials Register).  This allows for unambiguous identification and linking to the trial's record on the registry."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time when information for this clinical trial was last modified in the system."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible, unstructured data related to the clinical trial.  This may include details not captured in other structured columns, allowing for extensibility and storage of complex information."
        },
        {
          "name": "source_type",
          "type": "VARCHAR",
          "description": "`source_type` (VARCHAR):  Indicates the source of the clinical trial information, e.g., \"registry\", \"publication\", \"company website\"."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column of the 'sources' table.  Indicates the primary source of information for this clinical trial."
        },
        {
          "name": "termination_id",
          "type": "INTEGER",
          "description": "Unique identifier for the termination record of a clinical trial.  Relates to a record detailing why and when a trial was terminated (if applicable)."
        },
        {
          "name": "termination_date",
          "type": "DATE",
          "description": "The `termination_date` column of type `DATE` in the `clinical_trials` table records the date a clinical trial was officially terminated, regardless of the reason (e.g., completion, early stopping).  A NULL value indicates the trial has not been terminated."
        },
        {
          "name": "'Phase",
          "type": "1",
          "description": "Indicates the clinical trial phase (e.g., Phase 1, Phase 2, Phase 3).  Type '1' likely refers to a coded value (e.g., 1=Phase 1, 2=Phase 2, etc.) rather than a descriptive string.  See related data dictionary or lookup table for decoding specific values."
        },
        {
          "name": "'Phase",
          "type": "2",
          "description": "Indicates the clinical trial phase (e.g., Phase 1, Phase 2, Phase 3, Phase 4) using a coded value (Type '2' suggests a lookup or coded value system).  This field tracks the stage of research for a given clinical trial in the `clinical_trials` table."
        },
        {
          "name": "'Phase",
          "type": "2",
          "description": "Indicates the current phase of the clinical trial.  Type '2' likely corresponds to a specific coding scheme for trial phases (e.g., 0=Not Applicable, 1=Phase 1, 2=Phase 2, etc.), and its meaning should be documented elsewhere.  This column tracks the progression of the trial through different stages of research."
        },
        {
          "name": "'Phase",
          "type": "3",
          "description": "Indicates the current phase of the clinical trial.  Type '3' likely refers to an enumerated type or a coded value representing a specific phase (e.g., Phase 0, Phase 1, Phase 2, Phase 3, Phase 4).  Refer to the data dictionary or codebook for the specific meaning of each value."
        },
        {
          "name": "'Phase",
          "type": "4",
          "description": "Indicates the current phase of the clinical trial.  Type '4' likely corresponds to a coded value representing a specific phase (e.g., 0=Not Applicable, 1=Phase 1, 2=Phase 2, etc.).  See related documentation for decoding type '4' values."
        },
        {
          "name": "'N/A'))",
          "type": "TYPE_UNKNOWN",
          "description": "This column, `N/A'))` with type `TYPE_UNKNOWN` in the table `clinical_trials`, likely represents a placeholder or data of an undetermined format.  The unusual name suggests a potential data import or parsing issue where a value meant to signify \"Not Applicable\" was misinterpreted as a column header.  Further investigation is needed to determine the actual content and purpose of this column."
        }
      ]
    },
    {
      "table_name": "clinical_trial_registries",
      "description": "The `clinical_trial_registries` table stores information about different clinical trial registries globally.  Each record includes the registry's name, unique code, managing authority, country of origin, website URL, API availability status, API documentation link (if applicable), data update frequency, available data fields, the last date the registry information was verified, and any relevant notes.  The `id` column serves as a primary key for unique identification of each registry.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique, automatically incrementing integer used as the primary key for identifying individual clinical trial registry records."
        },
        {
          "name": "registry_name",
          "type": "VARCHAR",
          "description": "The `registry_name` column in the `clinical_trial_registries` table stores the name of the clinical trial registry as a string (VARCHAR).  This identifies the specific registry where the trial is registered, such as \"ClinicalTrials.gov\" or \"EU Clinical Trials Register\"."
        },
        {
          "name": "registry_code",
          "type": "VARCHAR",
          "description": "The `registry_code` column (VARCHAR) in the `clinical_trial_registries` table stores the unique alphanumeric code assigned to a clinical trial registry, used for identification and referencing within the system.  This code allows for efficient lookups and linking to external registry databases."
        },
        {
          "name": "managing_authority",
          "type": "VARCHAR",
          "description": "`managing_authority` (VARCHAR):  Identifies the organization or entity responsible for administering and overseeing the clinical trial registry."
        },
        {
          "name": "country_of_origin",
          "type": "VARCHAR",
          "description": "The `country_of_origin` column in the `clinical_trial_registries` table stores the two-letter ISO country code indicating where the clinical trial was initially registered.  This field is of type `VARCHAR` to accommodate varying country code lengths."
        },
        {
          "name": "website_url",
          "type": "VARCHAR",
          "description": "The `website_url` column in the `clinical_trial_registries` table stores the URL (as a string) of the website for a given clinical trial registry.  This allows users to directly access the registry's website for more detailed information."
        },
        {
          "name": "api_available",
          "type": "BOOLEAN",
          "description": "Indicates whether the clinical trial registry provides an API (Application Programming Interface) for programmatic access to its data.  TRUE if an API is available, FALSE otherwise."
        },
        {
          "name": "api_documentation_url",
          "type": "VARCHAR",
          "description": "URL pointing to the API documentation for the clinical trial registry. This allows programmatic access to the registry's data."
        },
        {
          "name": "data_update_frequency",
          "type": "VARCHAR",
          "description": "`data_update_frequency`: (VARCHAR) Describes how often the registry's data is updated (e.g., 'daily', 'weekly', 'monthly', 'quarterly', 'annually', 'irregular')."
        },
        {
          "name": "data_fields_available",
          "type": "JSONB",
          "description": "`data_fields_available` (JSONB):  Stores a JSON object representing the data fields available for a given clinical trial registry. This allows flexible storage of varying data field structures across different registries.  The JSON object may contain information about field names, data types, and descriptions."
        },
        {
          "name": "last_verified_date",
          "type": "DATE",
          "description": "The `last_verified_date` column in the `clinical_trial_registries` table stores the date (YYYY-MM-DD) when the information for a specific clinical trial registry was last verified or updated.  This helps track the freshness of the registry data."
        },
        {
          "name": "notes",
          "type": "TEXT",
          "description": "Free-text field for miscellaneous notes related to the clinical trial registry entry.  This may include information not captured in other structured fields, such as specific contact details, data anomalies, or internal tracking information."
        }
      ]
    },
    {
      "table_name": "formulation_details",
      "description": "The `formulation_details` table stores specific information about different drug formulations.  Each record represents a unique formulation identified by `id` and linked to a specific drug (`drug_id`) and potentially a combination product (`combination_id`).  The table captures details such as the pharmaceutical form (`form`), strength, route of administration, dosing instructions, excipients used, storage requirements, shelf life,  last update date, additional data, and the primary source of the information (`primary_source_id`).",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`formulation_details.id`: A unique auto-incrementing integer serving as the primary key for the `formulation_details` table.  It identifies each formulation detail record."
        },
        {
          "name": "drug_id",
          "type": "INTEGER",
          "description": "`drug_id` (INTEGER):  A foreign key referencing the unique identifier of a drug in the 'drugs' table.  This column identifies the specific drug present in the formulation detailed in this record."
        },
        {
          "name": "combination_id",
          "type": "INTEGER",
          "description": "`combination_id` (INTEGER):  A unique identifier referencing a specific drug combination stored in the `combinations` table. This links a formulation detail record to its corresponding drug combination."
        },
        {
          "name": "form",
          "type": "VARCHAR",
          "description": "Stores the physical form of the formulation, such as \"tablet\", \"capsule\", \"liquid\", \"powder\", etc."
        },
        {
          "name": "strength",
          "type": "VARCHAR",
          "description": "Strength of the formulation, expressed as a string.  This could include units (e.g., \"50mg\", \"100mg/mL\", \"2%\")."
        },
        {
          "name": "route_of_administration",
          "type": "VARCHAR",
          "description": "Specifies the method by which the formulation is administered (e.g., oral, intravenous, topical, intramuscular)."
        },
        {
          "name": "dosing_instructions",
          "type": "TEXT",
          "description": "`dosing_instructions` (TEXT):  Contains detailed instructions on how to administer the formulation, including frequency, dosage, route of administration, and any special considerations."
        },
        {
          "name": "excipients",
          "type": "JSONB",
          "description": "Stores a JSONB object representing the excipients (inactive ingredients) in a specific formulation.  This allows for flexible storage of complex excipient information, including names, quantities, and properties."
        },
        {
          "name": "storage_requirements",
          "type": "VARCHAR",
          "description": "Stores the storage requirements for the formulation, such as temperature range, humidity levels, and special container needs.  This is a text-based description."
        },
        {
          "name": "shelf_life",
          "type": "VARCHAR",
          "description": "`shelf_life` (VARCHAR): Represents the shelf life of the formulation.  This field stores the duration for which the formulation remains stable and usable, typically expressed as a human-readable string (e.g., \"2 years\", \"6 months\", \"24 hours\")."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the timestamp of the most recent update to the formulation details in this row."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`: A JSONB column in the `formulation_details` table storing flexible key-value pairs related to the formulation. This allows for storing varying attributes and properties of the formulation without requiring schema changes."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the primary source (likely a table like 'sources') that provides the details for this particular formulation.  Stores the unique integer ID of the source."
        }
      ]
    },
    {
      "table_name": "trial_registry_tracking",
      "description": "The `trial_registry_tracking` table stores information about the registration and tracking of clinical trials across different registries.  It links trials (`trial_id`) to specific registries (`registry_id`) and tracks key details such as registration and update dates, registry-specific identifiers (`registry_specific_id`), current status and phase, results availability and due dates, compliance status, and extracted data.  The table also includes a link to the primary data source (`primary_source_id`) and stores both raw and processed registry data (`raw_registry_data`, `data`).",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique, auto-incrementing integer used as the primary key for identifying individual trial registry tracking records within the `trial_registry_tracking` table."
        },
        {
          "name": "trial_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific clinical trial being tracked in the `trial_registry_tracking` table.  This integer links to a more detailed trial record (likely in a separate table)."
        },
        {
          "name": "registry_id",
          "type": "INTEGER",
          "description": "Unique identifier for a trial registry entry.  Foreign key referencing the `id` column of the `registries` table."
        },
        {
          "name": "registry_specific_id",
          "type": "VARCHAR",
          "description": "`registry_specific_id` (VARCHAR): The unique identifier assigned to a clinical trial by a specific trial registry (e.g., NCT number for ClinicalTrials.gov, ISRCTN number for ISRCTN registry). This allows for tracking the same trial across different registries."
        },
        {
          "name": "registration_date",
          "type": "DATE",
          "description": "The `registration_date` column in the `trial_registry_tracking` table stores the date on which a clinical trial was registered with a specific registry.  It is of `DATE` type and thus holds only the date (year, month, and day) without time components."
        },
        {
          "name": "last_updated_date",
          "type": "DATE",
          "description": "The `last_updated_date` column in the `trial_registry_tracking` table stores the date (YYYY-MM-DD) when the trial registry information was last modified or updated."
        },
        {
          "name": "registry_status",
          "type": "VARCHAR",
          "description": "`registry_status`: (VARCHAR)  Indicates the current status of the trial's registration, e.g., 'Pending', 'Submitted', 'Registered', 'Rejected', 'Withdrawn'."
        },
        {
          "name": "registry_phase",
          "type": "VARCHAR",
          "description": "Indicates the current phase of trial registration (e.g., 'Not Started', 'In Progress', 'Completed', 'Rejected')."
        },
        {
          "name": "results_due_date",
          "type": "DATE",
          "description": "The `results_due_date` column in the `trial_registry_tracking` table stores the date by which trial results are expected to be submitted to the registry.  This column is of type `DATE` and stores only the date (year, month, and day)."
        },
        {
          "name": "results_posted_date",
          "type": "DATE",
          "description": "`results_posted_date`:  The date (YYYY-MM-DD) when the trial results were publicly posted to the trial registry.  This field is used to track the timely reporting of trial outcomes."
        },
        {
          "name": "has_results",
          "type": "BOOLEAN",
          "description": "Indicates whether the associated clinical trial (tracked in the `trial_registry_tracking` table) has reported any results.  `TRUE` if results are available, `FALSE` otherwise."
        },
        {
          "name": "has_protocol",
          "type": "BOOLEAN",
          "description": "Indicates whether a protocol (e.g., study protocol document) is available or associated with the trial registry entry.  `TRUE` if a protocol exists, `FALSE` otherwise."
        },
        {
          "name": "compliance_status",
          "type": "VARCHAR",
          "description": "Stores the compliance status of a clinical trial's registration information with the applicable registry (e.g., \"compliant\", \"non-compliant\", \"pending review\", \"submitted\")."
        },
        {
          "name": "data_extraction_date",
          "type": "DATE",
          "description": "The `data_extraction_date` column in the `trial_registry_tracking` table stores the date (YYYY-MM-DD) on which trial data was extracted from the registry. This allows tracking of when the latest information was retrieved for each trial."
        },
        {
          "name": "raw_registry_data",
          "type": "JSONB",
          "description": "Stores the unprocessed, raw JSON data retrieved from a trial registry (e.g., ClinicalTrials.gov) for a specific trial. This preserves the original data structure and allows for flexible querying and analysis."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data` (JSONB): Stores arbitrary JSON data related to the tracking of a trial registry entry. This might include details like API responses, timestamps of interactions, or specific flags related to the tracking process."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source record in the `sources` table.  This identifies the original source from which the trial registry information was retrieved."
        },
        {
          "name": "registry_id)",
          "type": "TYPE_UNKNOWN",
          "description": "`registry_id (TYPE_UNKNOWN)` in the `trial_registry_tracking` table stores the identifier for a specific trial registry.  The exact format of this identifier is currently unknown and requires further investigation.  This field likely links to a registry record outside of this database."
        }
      ]
    },
    {
      "table_name": "trial_registry_cross_references",
      "description": "The `trial_registry_cross_references` table stores links between clinical trial records identified in different registries. Each record represents a cross-reference, mapping a trial entry in a source registry to a corresponding entry in a target registry.  It includes information about the source and target registry IDs, the trial IDs within those registries, the date the cross-reference was established, verification status, method of verification, and any relevant notes.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique sequential integer identifier automatically generated for each cross-reference entry in the `trial_registry_cross_references` table.  Serves as the primary key."
        },
        {
          "name": "source_registry_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the source trial registry in the `registries` table.  Represents the registry from which the cross-reference originates."
        },
        {
          "name": "source_trial_id",
          "type": "VARCHAR",
          "description": "`source_trial_id`:  (VARCHAR) The trial identifier assigned by the source registry where this trial was originally registered.  Used to link entries in this cross-reference table back to the original source record."
        },
        {
          "name": "target_registry_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of a target registry (e.g., ClinicalTrials.gov, ISRCTN) in a registry table.  Links a trial in the `trial_registry_cross_references` table to its entry in a specific registry."
        },
        {
          "name": "target_trial_id",
          "type": "VARCHAR",
          "description": "Foreign key referencing the `trial_id` column in the `trials` table.  Identifies the trial being targeted by a cross-reference entry."
        },
        {
          "name": "cross_reference_date",
          "type": "DATE",
          "description": "The `cross_reference_date` column in the `trial_registry_cross_references` table stores the date on which a cross-reference between trial registries was established or last verified.  This field is of type `DATE` and therefore only stores the date portion (YYYY-MM-DD) without time."
        },
        {
          "name": "is_verified",
          "type": "BOOLEAN",
          "description": "Indicates whether the cross-reference in the `trial_registry_cross_references` table has been verified (true) or not (false)."
        },
        {
          "name": "verification_method",
          "type": "VARCHAR",
          "description": "The `verification_method` column in the `trial_registry_cross_references` table stores a string describing the method used to verify the relationship between the cross-referenced trial registries.  This might include values like \"automatic\", \"manual\", \"API\", or \"website comparison\"."
        },
        {
          "name": "notes",
          "type": "TEXT",
          "description": "Free-text field for storing miscellaneous notes or comments related to the cross-reference entry in the trial registry."
        },
        {
          "name": "source_trial_id",
          "type": "TYPE_UNKNOWN",
          "description": "`source_trial_id` (TYPE_UNKNOWN):  The trial identifier from the original source registry. The specific format is dependent on the source and is not explicitly defined in this database.  This column links entries in this `trial_registry_cross_references` table to the original source record."
        },
        {
          "name": "target_registry_id",
          "type": "TYPE_UNKNOWN",
          "description": "`target_registry_id` (TYPE_UNKNOWN):  The identifier of a trial registry entry in a target registry system. The specific format and meaning of this identifier are unknown and may vary depending on the target registry.  This column links entries in the `trial_registry_cross_references` table to their corresponding records in external trial registries."
        },
        {
          "name": "target_trial_id)",
          "type": "TYPE_UNKNOWN",
          "description": "`target_trial_id (TYPE_UNKNOWN)` in the `trial_registry_cross_references` table stores the identifier of a related trial in a target trial registry.  The specific format and meaning of this identifier are unknown and depend on the target registry.  This column is used to link trials registered in different systems."
        }
      ]
    },
    {
      "table_name": "trial_identifiers",
      "description": "The `trial_identifiers` table stores various identifiers associated with clinical trials.  Each record links a trial (`trial_id`) with a specific identifier (`identifier_value`) of a given type (`identifier_type`, e.g., NCT number, ISRCTN).  It also indicates whether an identifier is the primary one for the trial (`is_primary`) and specifies the registry providing the identifier (`registry_id`) and whether that registry is the primary source (`is_primary_registry`).  The `source_type` and `primary_source_id` columns track the origin of the identifier information.  The `id` column serves as a unique primary key for each record. Note: The columns `identifier_type` and `identifier_value` appear twice in the provided schema, which is likely an error and should be reviewed.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique, auto-incrementing integer serving as the primary key for the `trial_identifiers` table.  Automatically generates a new value for each new record."
        },
        {
          "name": "trial_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific trial.  Foreign key referencing the `id` column of the `trials` table."
        },
        {
          "name": "identifier_type",
          "type": "VARCHAR",
          "description": "Specifies the type of identifier used for a trial, such as 'NCT Number', 'DOI', or 'Sponsor ID'."
        },
        {
          "name": "identifier_value",
          "type": "VARCHAR",
          "description": "The `identifier_value` column in the `trial_identifiers` table stores the actual value of a specific identifier associated with a clinical trial.  This value is stored as a string (VARCHAR) and could represent various types of identifiers, such as NCT numbers, sponsor IDs, or internal study codes."
        },
        {
          "name": "is_primary",
          "type": "BOOLEAN",
          "description": "Indicates whether the identifier is the primary identifier for the trial record.  A value of TRUE signifies it is the primary identifier, while FALSE indicates it is a secondary or alternative identifier."
        },
        {
          "name": "registry_id",
          "type": "INTEGER",
          "description": "Unique integer identifier for a trial's registry entry (e.g., ClinicalTrials.gov identifier).  Foreign key referencing a registry entry in the 'registries' table."
        },
        {
          "name": "is_primary_registry",
          "type": "BOOLEAN",
          "description": "Indicates whether the identifier registered for this trial is the primary registry ID.  TRUE if primary, FALSE otherwise."
        },
        {
          "name": "source_type",
          "type": "VARCHAR",
          "description": "The `source_type` column in the `trial_identifiers` table is a VARCHAR field that specifies the origin or type of the identifier associated with a clinical trial.  This could represent sources like a registry (e.g., \"ClinicalTrials.gov\"), a sponsor internal ID, a journal publication ID, etc."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column in the 'sources' table.  Identifies the primary source of information for this clinical trial."
        },
        {
          "name": "identifier_type",
          "type": "TYPE_UNKNOWN",
          "description": "Specifies the type of identifier used in the `trial_identifiers` table.  Currently the specific types are unknown and represented by `TYPE_UNKNOWN`.  Further categorization is needed."
        },
        {
          "name": "identifier_value)",
          "type": "TYPE_UNKNOWN",
          "description": "The `identifier_value` column in the `trial_identifiers` table stores the actual value of a trial identifier.  The specific data type of the value is unknown (TYPE_UNKNOWN) and may vary depending on the type of identifier being stored.  This likely indicates a need for further investigation and potentially a more structured approach to storing identifier values."
        }
      ]
    },
    {
      "table_name": "clinical_trial_design",
      "description": "The `clinical_trial_design` table stores the core design parameters for clinical trials. It links to a specific trial via `trial_id` and describes its design features like `design_type`, `blinding`, `randomization_ratio`, and `control_type`.  Objectives, both primary and secondary, are recorded, along with participant `inclusion_criteria` and `exclusion_criteria`.  `arms_description` details the different treatment groups.  `last_update_date` tracks modifications, and `primary_source_id` identifies the source of the design information.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique identifier for each clinical trial design.  Automatically generated sequential integer."
        },
        {
          "name": "trial_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific clinical trial design within the `clinical_trial_design` table.  This integer serves as a foreign key linking to other tables containing trial-specific data."
        },
        {
          "name": "design_type",
          "type": "VARCHAR",
          "description": "Classifies the design of the clinical trial (e.g., \"parallel\", \"crossover\", \"factorial\", \"observational\")."
        },
        {
          "name": "blinding",
          "type": "VARCHAR",
          "description": "Indicates the blinding method used in the clinical trial, such as \"single-blind\", \"double-blind\", \"triple-blind\", or \"open-label\" (no blinding)."
        },
        {
          "name": "randomization_ratio",
          "type": "VARCHAR",
          "description": "Ratio or percentage defining the allocation of participants to different treatment arms (e.g., '1:1', '2:1', '60:40').  Represents the randomization scheme used in the clinical trial."
        },
        {
          "name": "control_type",
          "type": "VARCHAR",
          "description": "Specifies the type of control used in the clinical trial, such as placebo, active comparator, or no intervention."
        },
        {
          "name": "primary_objective",
          "type": "TEXT",
          "description": "The `primary_objective` column in the `clinical_trial_design` table stores a text description of the main goal or aim of the clinical trial. This describes the primary outcome measure that the trial is designed to assess, such as determining the efficacy or safety of a new treatment."
        },
        {
          "name": "secondary_objectives",
          "type": "TEXT",
          "description": "A text field containing a description of any secondary objectives for the clinical trial,  in addition to the primary objective.  This may include exploratory endpoints, safety assessments, or other measurements collected during the trial that are not the primary focus."
        },
        {
          "name": "inclusion_criteria",
          "type": "TEXT",
          "description": "Textual description of the criteria that must be met for a participant to be eligible for inclusion in the clinical trial."
        },
        {
          "name": "exclusion_criteria",
          "type": "TEXT",
          "description": "Textual description of the criteria used to exclude participants from the clinical trial. This may include specific medical conditions, demographics, prior treatments, or other factors that would disqualify a potential participant."
        },
        {
          "name": "arms_description",
          "type": "JSONB",
          "description": "`arms_description` (JSONB):  Contains a structured description of the different arms or treatment groups within the clinical trial.  This may include details such as treatment regimens, dosages, control interventions, and eligibility criteria specific to each arm."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP): Records the date and time of the most recent modification to the clinical trial design information in this row."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source document (e.g., publication, registry entry) describing the clinical trial design."
        }
      ]
    },
    {
      "table_name": "clinical_trial_arms",
      "description": "The `clinical_trial_arms` table stores information about the different arms (treatment groups) within a clinical trial.  Each record represents a single arm and includes details such as the arm's name, type, description, treatment regimen, planned and actual patient counts, randomization ratio (if applicable), whether it's a control arm, and associated trial.  The `data` column allows for storing additional arm-specific information, and `primary_source_id` links back to the original data source.  `last_update_date` tracks when the record was last modified. Note: the table definition includes a duplicate column named `arm_name`. This redundancy should be removed.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique identifier for each clinical trial arm.  Automatically generated sequential integer."
        },
        {
          "name": "trial_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific arm within a clinical trial.  Foreign key referencing the 'id' column in the 'clinical_trials' table."
        },
        {
          "name": "arm_name",
          "type": "VARCHAR",
          "description": "The `arm_name` column (VARCHAR) in the `clinical_trial_arms` table stores the descriptive name of a specific arm or group within a clinical trial (e.g., \"Placebo\", \"Drug A 10mg\", \"Drug A 20mg + Drug B\")."
        },
        {
          "name": "arm_type",
          "type": "VARCHAR",
          "description": "Specifies the type of arm in a clinical trial (e.g., experimental, placebo, active comparator, sham comparator)."
        },
        {
          "name": "arm_description",
          "type": "TEXT",
          "description": "Detailed description of the treatment arm within a clinical trial, including specific interventions (e.g., drug dosage, procedure details), control type (if applicable), and other relevant arm-specific information."
        },
        {
          "name": "randomization_ratio",
          "type": "VARCHAR",
          "description": "Ratio used for randomization of subjects into this arm of the clinical trial.  Expressed as a string (e.g., \"2:1\", \"1:1:1\") to accommodate complex randomization schemes."
        },
        {
          "name": "is_control",
          "type": "BOOLEAN",
          "description": "Indicates whether the arm represents a control group (true) or a treatment/intervention group (false) within the clinical trial."
        },
        {
          "name": "regimen_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `regimens` table.  Identifies the specific treatment regimen assigned to this arm of the clinical trial."
        },
        {
          "name": "planned_patients",
          "type": "INTEGER",
          "description": "Number of patients planned to be enrolled in this arm of the clinical trial."
        },
        {
          "name": "actual_patients",
          "type": "INTEGER",
          "description": "Number of patients actually enrolled in this arm of the clinical trial."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time of the most recent modification to information for this clinical trial arm."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column containing flexible key-value pairs representing additional, unstructured data related to a specific clinical trial arm. This may include information not captured in other structured columns, allowing for extensibility and storage of diverse data points."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary data source for this clinical trial arm.  This links the arm to the source where its information originated (e.g., a publication, registry entry)."
        },
        {
          "name": "arm_name)",
          "type": "TYPE_UNKNOWN",
          "description": "`arm_name (TYPE_UNKNOWN)`: The name or brief description of the treatment arm within the clinical trial.  The specific data type is currently unknown and requires further investigation."
        }
      ]
    },
    {
      "table_name": "clinical_trial_sites",
      "description": "The `clinical_trial_sites` table stores information about the physical locations (sites) where clinical trials are conducted.  Each record represents a single site and includes details such as the associated trial, site name and identifier, contact information for the principal investigator, address, geographic location, site capabilities and status, activation and closure dates, miscellaneous data, primary data source, and a unique site identifier.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique identifier for each clinical trial site. Automatically generated incremental integer."
        },
        {
          "name": "trial_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific clinical trial.  This foreign key links to the 'trials' table."
        },
        {
          "name": "site_name",
          "type": "VARCHAR",
          "description": "The `site_name` column in the `clinical_trial_sites` table stores the name of the location (e.g., hospital, clinic, university) where the clinical trial is being conducted.  It is a string value (VARCHAR)."
        },
        {
          "name": "institution_name",
          "type": "VARCHAR",
          "description": "The `institution_name` column in the `clinical_trial_sites` table stores the name of the institution (e.g., hospital, university, research center) participating as a site in a clinical trial.  It is a variable-length string (`VARCHAR`)."
        },
        {
          "name": "site_identifier",
          "type": "VARCHAR",
          "description": "Unique identifier for a clinical trial site, represented as a string.  This could be an internal code, an external ID provided by a partner, or a combination thereof."
        },
        {
          "name": "principal_investigator",
          "type": "VARCHAR",
          "description": "Name of the principal investigator responsible for the clinical trial at this specific site."
        },
        {
          "name": "pi_contact_info",
          "type": "JSONB",
          "description": "`pi_contact_info` (JSONB): Stores contact information for the Principal Investigator (PI) at the clinical trial site. This field allows for flexible storage of various contact details like email, phone numbers, and addresses in a structured JSON format."
        },
        {
          "name": "address_line1",
          "type": "VARCHAR",
          "description": "The `address_line1` column in the `clinical_trial_sites` table stores the first line of the street address for a clinical trial site.  It is a `VARCHAR` field, allowing for textual representation of the address."
        },
        {
          "name": "address_line2",
          "type": "VARCHAR",
          "description": "`address_line2` (VARCHAR):  Supplemental address information for the clinical trial site.  This field is optional and may contain details such as suite numbers, building names, or floor numbers."
        },
        {
          "name": "city",
          "type": "VARCHAR",
          "description": "The `city` column in the `clinical_trial_sites` table stores the name of the city where the clinical trial site is located.  Data type is VARCHAR, allowing for text-based city names."
        },
        {
          "name": "state_province",
          "type": "VARCHAR",
          "description": "The `state_province` column in the `clinical_trial_sites` table stores the state or province (sub-national administrative unit) where the clinical trial site is located.  It is a string value (`VARCHAR`)."
        },
        {
          "name": "postal_code",
          "type": "VARCHAR",
          "description": "The `postal_code` column in the `clinical_trial_sites` table stores the postal code (e.g., zip code, postcode) of the clinical trial site as a string.  This allows for variations in postal code formats across different countries."
        },
        {
          "name": "country",
          "type": "VARCHAR",
          "description": "The `country` column in the `clinical_trial_sites` table stores the two-letter ISO country code (VARCHAR) indicating the country where the clinical trial site is located."
        },
        {
          "name": "geography_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a geographical location (e.g., city, region, country) in a related 'geography' table.  Identifies the geographic location of the clinical trial site."
        },
        {
          "name": "latitude",
          "type": "NUMERIC",
          "description": "Latitude of the clinical trial site, stored as a numeric value representing decimal degrees."
        },
        {
          "name": "longitude",
          "type": "NUMERIC",
          "description": "Geographic longitude of the clinical trial site, stored as a numeric value representing decimal degrees.  Negative values indicate West and positive values indicate East."
        },
        {
          "name": "site_type",
          "type": "VARCHAR",
          "description": "Classifies the type of location where the clinical trial is conducted (e.g., Hospital, Clinic, University, Private Practice)."
        },
        {
          "name": "site_capabilities",
          "type": "JSONB",
          "description": "`site_capabilities` (JSONB):  Stores a JSON object representing the various capabilities and resources available at a clinical trial site. This might include equipment, specialized staff, patient demographics served, or other relevant information."
        },
        {
          "name": "site_status",
          "type": "VARCHAR",
          "description": "`site_status`:  A string indicating the current operational status of a clinical trial site.  Possible values may include (but are not limited to) 'Recruiting', 'Not yet recruiting', 'Active, not recruiting', 'Completed', 'Suspended', 'Terminated', etc."
        },
        {
          "name": "activation_date",
          "type": "DATE",
          "description": "The `activation_date` column of type `DATE` in the `clinical_trial_sites` table stores the date on which a specific clinical trial site became active and eligible to participate in the trial.  This date signifies the official start of the site's involvement."
        },
        {
          "name": "closure_date",
          "type": "DATE",
          "description": "The `closure_date` column of type `DATE` in the `clinical_trial_sites` table stores the date a specific clinical trial site ceased operations or participation in a given trial.  A `NULL` value indicates the site is currently active or the closure date is unknown."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing miscellaneous site-specific data for the clinical trial, such as contact information, address details, special equipment availability, or other relevant attributes not captured in dedicated columns.  This flexible format allows for storing and querying a variety of data structures."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column of the 'sources' table.  Indicates the primary information source for the clinical trial site data."
        },
        {
          "name": "site_identifier)",
          "type": "TYPE_UNKNOWN",
          "description": "A unique identifier for a clinical trial site. The specific format of this identifier is currently unknown (TYPE_UNKNOWN) and requires further investigation."
        }
      ]
    },
    {
      "table_name": "clinical_trial_indications",
      "description": "The `clinical_trial_indications` table stores information about the diseases or conditions a clinical trial is investigating.  It links trials (`trial_id`) to specific diseases (`disease_id`) and further specifies the indication using `indication_specification_id`.  `is_primary` flags the main condition being studied.  `population_segment` and `phase_specific` provide additional context about the targeted population and trial phase. `data` holds any miscellaneous related information.  `primary_source_id` identifies the source of the information, and `last_update_date` tracks the most recent modification.  The `id` column serves as a unique primary key.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique, auto-incrementing identifier for each clinical trial indication record. Serves as the primary key for the `clinical_trial_indications` table."
        },
        {
          "name": "trial_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific clinical trial.  Foreign key referencing the `trials` table."
        },
        {
          "name": "disease_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific disease or medical condition related to the clinical trial indication.  Foreign key referencing the 'diseases' table."
        },
        {
          "name": "indication_specification_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `indication_specifications` table.  Identifies the specific indication specification associated with this clinical trial indication."
        },
        {
          "name": "is_primary",
          "type": "BOOLEAN",
          "description": "Indicates whether the given indication is the primary focus of the clinical trial (TRUE) or a secondary/exploratory outcome (FALSE)."
        },
        {
          "name": "population_segment",
          "type": "VARCHAR",
          "description": "The `population_segment` column (VARCHAR) in the `clinical_trial_indications` table specifies the targeted subgroup of the population for a given clinical trial indication. This could include criteria such as age group (e.g., pediatric, adult, geriatric), gender, specific disease subtypes, or other relevant demographic or clinical characteristics."
        },
        {
          "name": "phase_specific",
          "type": "VARCHAR",
          "description": "Indicates whether the clinical trial indication is specific to a particular phase of the trial (e.g., Phase 1, Phase 2) or applies across all phases.  Values could include \"Phase 1\", \"Phase 2\", \"Phase 3\", \"Phase 4\", or \"All Phases\"."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing structured data related to the indication of a clinical trial. This might include details like disease specifics, diagnostic criteria, or other relevant information not easily captured in traditional columns."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column in the 'sources' table.  Identifies the primary source of information for the clinical trial indication."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time when the information regarding a clinical trial's indications was last modified."
        }
      ]
    },
    {
      "table_name": "clinical_trial_drugs",
      "description": "The `clinical_trial_drugs` table stores information about the drugs used in clinical trials. It links drugs to specific trials and describes their roles within those trials. Key information includes the drug's role (e.g., experimental, placebo), whether it's the primary drug being investigated, any trial-specific aliases for the drug, additional data, and the primary source of the information.  The table uses `id` as a primary key, `trial_id` and `drug_id` to link to respective trial and drug tables, and `primary_source_id` to track the information's origin. Note: the table definition lists `drug_id` and `role_in_trial` twice, this is likely an error and one instance of each should be removed.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each drug entry in the `clinical_trial_drugs` table.  Automatically increments for each new record."
        },
        {
          "name": "trial_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific clinical trial.  Foreign key referencing the `trials` table."
        },
        {
          "name": "drug_id",
          "type": "INTEGER",
          "description": "`drug_id` (INTEGER):  A unique identifier for a specific drug used in a clinical trial.  This foreign key references the 'drugs' table."
        },
        {
          "name": "role_in_trial",
          "type": "VARCHAR",
          "description": "Role of the drug in the clinical trial (e.g., experimental, control, placebo)."
        },
        {
          "name": "is_lead_drug",
          "type": "BOOLEAN",
          "description": "Indicates whether the drug is the primary treatment being investigated in the clinical trial (true) or a secondary/control treatment (false)."
        },
        {
          "name": "trial_aliases",
          "type": "VARCHAR",
          "description": "`trial_aliases`:  A VARCHAR column storing alternative names or identifiers (e.g., acronyms, short names, codes) for the clinical trial associated with the drug record.  This allows for flexible searching and matching of trials even when the official name is not known or used consistently."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing additional, flexible data related to the drug used in the clinical trial. This might include details like drug formulation, dosage information, administration method, or other relevant properties not captured in dedicated columns."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column in the 'sources' table. Identifies the primary source of information for the drug's inclusion in the clinical trial."
        },
        {
          "name": "drug_id",
          "type": "TYPE_UNKNOWN",
          "description": "`drug_id` (TYPE_UNKNOWN):  A unique identifier for a drug used in a clinical trial.  The specific format of this identifier is currently unknown and requires further investigation.  This column links to the 'drugs' table (or equivalent) once the data type is determined."
        },
        {
          "name": "role_in_trial)",
          "type": "TYPE_UNKNOWN",
          "description": "`role_in_trial` (TYPE_UNKNOWN):  The role of the drug in the clinical trial.  Further investigation is needed to determine the specific data type and allowed values for this column."
        }
      ]
    },
    {
      "table_name": "clinical_trial_geographies",
      "description": "The `clinical_trial_geographies` table stores information about the geographical regions involved in a clinical trial. It links trials (`trial_id`) to specific geographies (`geography_id`) and their associated regulatory authorities (`regulatory_authority_id`).  The table tracks key dates like submission, approval, site activation, and patient enrollment, as well as region-specific data such as protocol variations, budget, planned/actual enrollment, contact information, and overall status.  Data provenance is tracked via `primary_source_id`. Note: the table appears to have a redundant `geography_id` column.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique identifier for each geographic location associated with a clinical trial. Automatically increments upon insertion."
        },
        {
          "name": "trial_id",
          "type": "INTEGER",
          "description": "Unique identifier for a clinical trial, linking this record to the 'clinical_trials' table."
        },
        {
          "name": "geography_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a unique geographical identifier (e.g., country, region, state) in a lookup table.  Used to link clinical trials to their geographical locations."
        },
        {
          "name": "regulatory_authority_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `regulatory_authorities` table.  Identifies the regulatory authority (e.g., FDA, EMA) overseeing the clinical trial in a given geographic location."
        },
        {
          "name": "submission_date",
          "type": "DATE",
          "description": "The `submission_date` column in the `clinical_trial_geographies` table stores the date on which the geographical information for a specific clinical trial was submitted.  It is of type `DATE` and therefore stores only the date (year, month, and day) with no time component."
        },
        {
          "name": "approval_date",
          "type": "DATE",
          "description": "The `approval_date` column in the `clinical_trial_geographies` table stores the date (YYYY-MM-DD) on which the clinical trial received regulatory approval for a specific geographic location.  This field is of type `DATE` and may be null if approval has not yet been granted."
        },
        {
          "name": "geography_status",
          "type": "VARCHAR",
          "description": "Indicates the geographical recruitment status of the clinical trial, such as 'Recruiting', 'Not yet recruiting', 'Completed', 'Suspended', 'Terminated', etc."
        },
        {
          "name": "geography_specific_protocol",
          "type": "BOOLEAN",
          "description": "Indicates whether a specific protocol (set of procedures or guidelines) applies to this geographic region for the clinical trial.  `TRUE` if a geography-specific protocol exists, `FALSE` otherwise."
        },
        {
          "name": "protocol_differences",
          "type": "TEXT",
          "description": "`protocol_differences`:  A text field describing any deviations or variations in the clinical trial protocol's implementation across different geographical regions included in this study.  This may include differences in recruitment strategies, dosage regimens, data collection methods, or other protocol aspects."
        },
        {
          "name": "geography_specific_budget",
          "type": "NUMERIC",
          "description": "The `geography_specific_budget` column in the `clinical_trial_geographies` table stores the allocated budget (as a numeric value) specifically designated for the clinical trial activities within a particular geographic region.  This allows for tracking and managing expenses at a regional level."
        },
        {
          "name": "geography_currency",
          "type": "VARCHAR",
          "description": "Three-letter ISO 4217 currency code representing the currency used in the specified geography for the clinical trial.  For example, 'USD' for United States Dollar."
        },
        {
          "name": "planned_sites",
          "type": "INTEGER",
          "description": "Number of sites planned for the clinical trial within the specified geographic region."
        },
        {
          "name": "active_sites",
          "type": "INTEGER",
          "description": "Number of active clinical trial sites within the geographic area."
        },
        {
          "name": "planned_enrollment",
          "type": "INTEGER",
          "description": "The `planned_enrollment` column in the `clinical_trial_geographies` table is an integer representing the target number of participants planned to be enrolled in the clinical trial at a specific geographic location."
        },
        {
          "name": "actual_enrollment",
          "type": "INTEGER",
          "description": "The `actual_enrollment` column in the `clinical_trial_geographies` table is an integer representing the actual number of participants enrolled in the clinical trial at a specific geographic location."
        },
        {
          "name": "first_site_activation_date",
          "type": "DATE",
          "description": "The `first_site_activation_date` column in the `clinical_trial_geographies` table stores the date (YYYY-MM-DD) when the first clinical trial site became active within a specific geographic region.  This marks the official start of trial activities in that area."
        },
        {
          "name": "last_site_activation_date",
          "type": "DATE",
          "description": "The `last_site_activation_date` column in the `clinical_trial_geographies` table stores the date (YYYY-MM-DD) when the last clinical trial site within a specific geographic region was activated.  This indicates the most recent date a site in this region became operational for the trial."
        },
        {
          "name": "first_patient_enrolled_date",
          "type": "DATE",
          "description": "The `first_patient_enrolled_date` column in the `clinical_trial_geographies` table stores the date (YYYY-MM-DD) when the first patient was enrolled in the clinical trial for a specific geographic region.  This field helps track the start of patient participation within each region."
        },
        {
          "name": "last_patient_enrolled_date",
          "type": "DATE",
          "description": "The `last_patient_enrolled_date` column of type `DATE` in the `clinical_trial_geographies` table stores the date of the most recent patient enrollment for a clinical trial within a specific geographic region.  It indicates the last known date a patient joined the trial in that area."
        },
        {
          "name": "enrollment_completed_date",
          "type": "DATE",
          "description": "The `enrollment_completed_date` column in the `clinical_trial_geographies` table stores the date (YYYY-MM-DD) when enrollment for a clinical trial was completed in a specific geographic region.  A NULL value indicates that enrollment is still ongoing."
        },
        {
          "name": "geography_specific_contact",
          "type": "VARCHAR",
          "description": "Stores contact information specific to the geographic location of the clinical trial, such as a local coordinator or research center.  This field allows free-form text entry."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing geographical information related to the clinical trial, such as recruitment locations, countries of operation, or site addresses.  This flexible format allows for storing various structured geographical data."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column of the 'primary_sources' table.  Identifies the primary source of information for the geographic data associated with this clinical trial."
        },
        {
          "name": "geography_id)",
          "type": "TYPE_UNKNOWN",
          "description": "`geography_id (TYPE_UNKNOWN)`:  A unique identifier for a geographical region relevant to the clinical trial.  The specific meaning and format of this identifier are currently unknown and require further investigation. This column resides in the `clinical_trial_geographies` table and likely links to a table containing detailed geographical information."
        }
      ]
    },
    {
      "table_name": "trial_geography_regulatory_status",
      "description": "The `trial_geography_regulatory_status` table tracks the regulatory status of a clinical trial within a specific geographic location.  It stores key information such as the status type (e.g., submitted, approved, rejected), relevant dates (status date, response due date, submission date), reviewer comments, geography-specific requirements, associated data, and the primary source of the status information.  It links to the `trial_geography` table via `trial_geography_id`. Note: `status_date` and `status_type` appear to be duplicated column names and one should likely be removed.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id`:  A unique, auto-incrementing integer that serves as the primary key for the `trial_geography_regulatory_status` table.  This column automatically assigns a new, unique identifier to each record inserted into the table."
        },
        {
          "name": "trial_geography_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `geography` table.  Identifies the geographic location (e.g., country, region) relevant to the regulatory status of a clinical trial."
        },
        {
          "name": "status_date",
          "type": "DATE",
          "description": "`status_date`:  The date on which the regulatory status for a specific trial geography became effective.  (DATE)"
        },
        {
          "name": "status_type",
          "type": "VARCHAR",
          "description": "The `status_type` column in the `trial_geography_regulatory_status` table is a VARCHAR field that defines the type of regulatory status associated with a trial's geography.  This could represent values like \"Approved\", \"Pending\", \"Rejected\", \"Suspended\", etc., indicating the current regulatory standing within a specific geographical location."
        },
        {
          "name": "status_details",
          "type": "TEXT",
          "description": "`status_details`:  A text field providing supplementary information or context regarding the regulatory status of a trial within a specific geographic location. This may include details about approvals, restrictions, specific regulations, or other relevant notes."
        },
        {
          "name": "response_due_date",
          "type": "DATE",
          "description": "The `response_due_date` column in the `trial_geography_regulatory_status` table stores the date by which a response is due regarding the regulatory status of a clinical trial in a specific geographical location.  This date is stored in `DATE` format (YYYY-MM-DD)."
        },
        {
          "name": "response_submission_date",
          "type": "DATE",
          "description": "The `response_submission_date` column of type DATE in the `trial_geography_regulatory_status` table stores the date when a response regarding the regulatory status of a clinical trial in a specific geographic location was submitted.  This does not necessarily indicate approval or rejection, but rather the submission of required information or documentation."
        },
        {
          "name": "reviewer_comments",
          "type": "TEXT",
          "description": "Reviewer comments on the regulatory status of the trial in the specified geographical location. This field allows for free-form text input."
        },
        {
          "name": "geography_specific_requirements",
          "type": "TEXT",
          "description": "This column, `geography_specific_requirements` (TEXT), stores any specific regulatory requirements or guidelines applicable to the trial within the given geography, as recorded in the `trial_geography_regulatory_status` table. This may include details on local ethics approvals, specific documentation needs, or other region-specific regulations."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value pairs related to the regulatory status of a trial within a specific geographic location.  This allows for storing varying attributes without requiring schema changes."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column of the 'primary_sources' table.  Identifies the primary source document that supports the regulatory status information for a specific trial and geographic location."
        },
        {
          "name": "status_date",
          "type": "TYPE_UNKNOWN",
          "description": "`status_date` (TYPE_UNKNOWN):  The date associated with the regulatory status for a trial's geographical location.  The specific format and meaning of this date are currently unknown and require further investigation."
        },
        {
          "name": "status_type)",
          "type": "TYPE_UNKNOWN",
          "description": "`status_type` (TYPE_UNKNOWN):  The type of regulatory status for the trial geography.  The specific meaning of the values stored is currently unknown and requires further investigation."
        }
      ]
    },
    {
      "table_name": "trial_enrollment_tracking",
      "description": "The `trial_enrollment_tracking` table stores the enrollment progress of clinical trials.  It tracks key metrics like cumulative enrollment, enrollment percentage, and the status of enrollment over time.  The table also captures information about planned and active sites, anticipated and revised completion dates, and allows for executive comments and general notes.  Each record is linked to a specific trial (`trial_id`) and a primary source document (`primary_source_id`) and reflects the state of enrollment as of a particular `report_date` associated with a specific `disclosure_event_type`.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique auto-incrementing integer serving as the primary key for identifying individual trial enrollment records within the `trial_enrollment_tracking` table."
        },
        {
          "name": "trial_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific clinical trial.  Foreign key referencing the `trials` table."
        },
        {
          "name": "report_date",
          "type": "DATE",
          "description": "The `report_date` column in the `trial_enrollment_tracking` table stores the date (YYYY-MM-DD) on which a particular enrollment report was generated or submitted.  This allows for tracking enrollment progress over time."
        },
        {
          "name": "disclosure_event_type",
          "type": "VARCHAR",
          "description": "Classifies the type of disclosure event related to trial enrollment.  This could include events like initial contact, consent obtained, withdrawal, etc."
        },
        {
          "name": "cumulative_enrollment",
          "type": "INTEGER",
          "description": "The `cumulative_enrollment` column in the `trial_enrollment_tracking` table is an INTEGER representing the total number of participants enrolled in a trial up to a specific point in time."
        },
        {
          "name": "enrollment_percentage",
          "type": "NUMERIC",
          "description": "The `enrollment_percentage` column in the `trial_enrollment_tracking` table stores the percentage of enrolled participants in a given trial, represented as a numeric value.  This value reflects the proportion of the target enrollment that has been achieved."
        },
        {
          "name": "enrollment_status",
          "type": "VARCHAR",
          "description": "The `enrollment_status` column in the `trial_enrollment_tracking` table is a VARCHAR field that stores the current enrollment status of a participant in a clinical trial.  Possible values may include (but are not limited to) \"Enrolled\", \"Screened\", \"Withdrawn\", \"Completed\", etc."
        },
        {
          "name": "original_completion_date",
          "type": "DATE",
          "description": "The `original_completion_date` column of type `DATE` in the `trial_enrollment_tracking` table stores the initially planned or projected completion date for a trial enrollment activity. This date may differ from the actual completion date if delays or changes occurred."
        },
        {
          "name": "updated_completion_date",
          "type": "DATE",
          "description": "The `updated_completion_date` column in the `trial_enrollment_tracking` table stores the most recent date on which a trial enrollment's completion date was modified.  It is of type `DATE` and represents the date only (without time). This allows tracking changes to the projected or actual completion date of a trial enrollment."
        },
        {
          "name": "timeline_status",
          "type": "VARCHAR",
          "description": "Stores the current status of the patient's timeline within the clinical trial.  Possible values may include 'SCREENING', 'ENROLLED', 'WITHDRAWN', 'COMPLETED', etc."
        },
        {
          "name": "active_sites",
          "type": "INTEGER",
          "description": "Number of active sites currently enrolling participants in the clinical trial."
        },
        {
          "name": "planned_sites",
          "type": "INTEGER",
          "description": "Number of sites planned for participation in the clinical trial."
        },
        {
          "name": "site_status",
          "type": "VARCHAR",
          "description": "Indicates the current operational status of the trial site.  Possible values may include (but are not limited to) 'Active', 'Inactive', 'Suspended', 'Completed'."
        },
        {
          "name": "executive_comments",
          "type": "TEXT",
          "description": "Executive comments regarding the trial enrollment process, including notes on progress, challenges, and strategic decisions."
        },
        {
          "name": "notes",
          "type": "TEXT",
          "description": "Miscellaneous notes regarding the trial enrollment process for a particular participant. Can include information about contact attempts, reasons for ineligibility, or other relevant details."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column of the 'sources' table.  Identifies the primary source from which a trial participant was recruited."
        },
        {
          "name": "report_date",
          "type": "TYPE_UNKNOWN",
          "description": "`report_date` (TYPE_UNKNOWN) - The date a report was generated or submitted related to trial enrollment tracking.  The specific format and meaning of this date are currently unknown and require further investigation."
        },
        {
          "name": "disclosure_event_type)",
          "type": "TYPE_UNKNOWN",
          "description": "Type of disclosure event related to trial enrollment tracking.  The specific meaning of this field is currently unknown and requires further investigation."
        }
      ]
    },
    {
      "table_name": "site_enrollment_tracking",
      "description": "The `site_enrollment_tracking` table stores enrollment progress data for clinical trials at different research sites. Each record represents a snapshot of enrollment metrics for a specific site on a given reporting date.  It tracks planned vs. current enrollment, screening failures, completed and discontinued subjects (with reasons), calculated enrollment rate and percentage, along with any additional data and the primary source of the information.  A unique identifier (`id`) distinguishes each record.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique auto-incrementing integer serving as the primary key for identifying individual site enrollment tracking records."
        },
        {
          "name": "site_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `site` table.  Uniquely identifies the site associated with this enrollment record."
        },
        {
          "name": "report_date",
          "type": "DATE",
          "description": "The `report_date` column in the `site_enrollment_tracking` table stores the date on which the enrollment report was generated or the enrollment data is relevant.  It is of type `DATE`, storing only the date (year, month, and day) with no time component."
        },
        {
          "name": "planned_enrollment",
          "type": "INTEGER",
          "description": "Planned enrollment count for a given site.  This represents the target number of participants expected to be enrolled."
        },
        {
          "name": "current_enrollment",
          "type": "INTEGER",
          "description": "Number of students currently enrolled at the site.  This value is updated regularly."
        },
        {
          "name": "screening_failures",
          "type": "INTEGER",
          "description": "Number of screening failures at this site during the enrollment period."
        },
        {
          "name": "completed_subjects",
          "type": "INTEGER",
          "description": "Number of subjects completed by a participant enrolled at a site.  Stored as an integer."
        },
        {
          "name": "discontinued_subjects",
          "type": "INTEGER",
          "description": "`discontinued_subjects`:  (INTEGER) Number of subjects who discontinued participation in the study at this site."
        },
        {
          "name": "discontinued_reasons",
          "type": "JSONB",
          "description": "`discontinued_reasons` (JSONB): Stores an array of reasons why a site's enrollment was discontinued.  This allows for multiple reasons to be tracked and queried efficiently.  Example: `[\"Low patient volume\", \"Staffing shortages\", \"Study terminated\"]`"
        },
        {
          "name": "enrollment_rate",
          "type": "NUMERIC",
          "description": "The `enrollment_rate` column in the `site_enrollment_tracking` table stores the enrollment rate as a numeric value. This likely represents the percentage of eligible participants enrolled at a given site."
        },
        {
          "name": "enrollment_percentage",
          "type": "NUMERIC",
          "description": "The `enrollment_percentage` column in the `site_enrollment_tracking` table stores the percentage of expected enrollment achieved at a specific site.  This value is represented as a numeric value (e.g., 95.2 for 95.2%)."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "Stores flexible, unstructured data related to site enrollment tracking in JSONB format. This allows for storing complex information, such as custom fields or tracking details, that don't fit neatly into traditional relational database columns."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `primary_sources` table.  Identifies the primary source through which a site was enrolled in the tracking program."
        },
        {
          "name": "report_date)",
          "type": "TYPE_UNKNOWN",
          "description": "`report_date (TYPE_UNKNOWN)` in the `site_enrollment_tracking` table stores the date related to the enrollment report.  The specific format or meaning of this date requires further investigation as the data type is currently unknown."
        }
      ]
    },
    {
      "table_name": "site_performance_metrics",
      "description": "The `site_performance_metrics` table stores key performance indicators (KPIs) for clinical trial sites. Each record represents a performance evaluation for a specific site (`site_id`) during a defined period (`evaluation_period_start` to `evaluation_period_end`). Metrics tracked include data quality, protocol deviations, serious adverse events, query resolution time, patient retention, monitoring findings, a performance ranking, key performance issues, and any additional data relevant to the evaluation.  The `id` column serves as a unique identifier for each record.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each site performance metric record.  Automatically increments on insertion. Serves as the primary key for the table `site_performance_metrics`."
        },
        {
          "name": "site_id",
          "type": "INTEGER",
          "description": "`site_id` (INTEGER):  A unique identifier for the website being tracked in the `site_performance_metrics` table.  This foreign key references the `sites` table."
        },
        {
          "name": "evaluation_period_start",
          "type": "DATE",
          "description": "The `evaluation_period_start` column in the `site_performance_metrics` table stores the starting date (DATE) of the period for which the site performance metrics are being evaluated."
        },
        {
          "name": "evaluation_period_end",
          "type": "DATE",
          "description": "`evaluation_period_end` (DATE):  The date marking the end of the evaluation period for the site performance metrics recorded in this row."
        },
        {
          "name": "data_quality_score",
          "type": "NUMERIC",
          "description": "`data_quality_score` (NUMERIC):  A numerical score representing the overall quality of the data collected for a given site. Higher scores indicate better data quality.  This score is used in the `site_performance_metrics` table."
        },
        {
          "name": "protocol_deviation_count",
          "type": "INTEGER",
          "description": "Number of protocol deviations recorded at the site.  This is an integer representing the total count of deviations observed."
        },
        {
          "name": "serious_adverse_event_count",
          "type": "INTEGER",
          "description": "Number of serious adverse events recorded at this site."
        },
        {
          "name": "query_resolution_time",
          "type": "NUMERIC",
          "description": "`query_resolution_time` (NUMERIC):  The time taken, in milliseconds, to resolve a database query.  This metric is tracked in the `site_performance_metrics` table and is used to monitor database performance."
        },
        {
          "name": "retention_rate",
          "type": "NUMERIC",
          "description": "`retention_rate` (NUMERIC):  The percentage of users who return to the site within a defined period (e.g., monthly, annually).  Stored as a decimal value between 0 and 1 (inclusive)."
        },
        {
          "name": "site_monitoring_findings",
          "type": "TEXT",
          "description": "Stores textual findings and observations from site monitoring activities, such as uptime checks, performance tests, and security scans. This field may contain detailed descriptions of issues encountered, suggested remedies, or other relevant information."
        },
        {
          "name": "site_ranking",
          "type": "INTEGER",
          "description": "`site_ranking`: An integer representing the overall ranking of a website, likely based on a combination of performance metrics.  Lower values indicate a better ranking (e.g., 1 is the best)."
        },
        {
          "name": "key_performance_issues",
          "type": "TEXT",
          "description": "This column, `key_performance_issues`, stores a text description of the major performance problems identified for a given site, as part of the `site_performance_metrics` table. This may include details on slow loading times, high bounce rates, specific errors, or other factors impacting performance."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing various performance metrics for the site.  This allows for flexible storage of different metric types and structures."
        },
        {
          "name": "evaluation_period_start",
          "type": "TYPE_UNKNOWN",
          "description": "`evaluation_period_start` (TYPE_UNKNOWN) in the `site_performance_metrics` table indicates the beginning of the period for which the site performance metrics are being evaluated.  The specific data type is currently unknown and requires further investigation."
        },
        {
          "name": "evaluation_period_end)",
          "type": "TYPE_UNKNOWN",
          "description": "`evaluation_period_end` (TYPE_UNKNOWN) in the `site_performance_metrics` table represents the end date/time of the period for which the site performance metrics were collected.  The specific data type is currently unknown and requires further investigation."
        }
      ]
    },
    {
      "table_name": "trial_vendors",
      "description": "The `trial_vendors` table stores information about vendors involved in specific clinical trials.  It links vendors (`vendor_company_id`) to trials (`trial_id`) and geographies (`geography_id`), specifying their role (`vendor_type`), responsibilities (`scope_of_work`), contract duration (`contract_start_date`, `contract_end_date`), current status (`vendor_status`), contact person (`vendor_contact`), performance rating (`performance_rating`), and any other relevant data (`data`).  The `id` column serves as a unique identifier for each vendor-trial relationship.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each trial vendor record.  Automatically increments upon insertion.  Serves as the primary key for the `trial_vendors` table."
        },
        {
          "name": "trial_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific trial within the `trial_vendors` table.  This integer links to the `trials` table."
        },
        {
          "name": "vendor_company_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `company_id` column in the `vendors` table.  Identifies the company associated with a vendor participating in a trial."
        },
        {
          "name": "geography_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a geographical location (e.g., city, region, or country) in a related 'geography' table.  Identifies the geographic area associated with the trial vendor."
        },
        {
          "name": "vendor_type",
          "type": "VARCHAR",
          "description": "`vendor_type` (VARCHAR):  Categorizes the type of vendor participating in the trial (e.g., 'pharmaceutical', 'CRO', 'laboratory', 'technology provider')."
        },
        {
          "name": "scope_of_work",
          "type": "TEXT",
          "description": "`scope_of_work` (TEXT):  Describes the specific tasks, deliverables, and responsibilities assigned to a vendor for a given trial. This field may include details about services provided, timelines, and expected outcomes."
        },
        {
          "name": "contract_start_date",
          "type": "DATE",
          "description": "The `contract_start_date` column in the `trial_vendors` table stores the date on which a contract with a trial vendor begins.  It is of type `DATE` and therefore holds only date information (year, month, day) without time components."
        },
        {
          "name": "contract_end_date",
          "type": "DATE",
          "description": "`contract_end_date` (DATE):  The date on which the trial contract with the vendor expires.  This field should be `NULL` if the trial has no end date or has transitioned to a full contract."
        },
        {
          "name": "vendor_status",
          "type": "VARCHAR",
          "description": "`vendor_status`: (VARCHAR) Indicates the current status of a vendor in the trial program (e.g., \"active\", \"inactive\", \"pending review\", \"completed\")."
        },
        {
          "name": "vendor_contact",
          "type": "VARCHAR",
          "description": "`vendor_contact` (VARCHAR): Stores the contact information for the vendor participating in the trial. This could be a single point of contact person's name, email address, phone number, or a combination thereof."
        },
        {
          "name": "performance_rating",
          "type": "INTEGER",
          "description": "`performance_rating` (INTEGER):  A numerical rating representing the performance of a trial vendor.  Higher values typically indicate better performance."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`: A JSONB column storing flexible, schema-less vendor-specific data for trial periods. This allows for storing various attributes and configurations related to a vendor during a trial, without needing to define a rigid schema."
        }
      ]
    },
    {
      "table_name": "clinical_data_points",
      "description": "The `clinical_data_points` table stores individual data points from clinical trials.  Each record represents a specific endpoint measurement for a given drug and indication within a trial.  It includes information such as the endpoint type, name, and category, the measured value, statistical significance (if applicable), p-value, confidence interval, raw data, and source information.  The table is linked to trials, drugs, and indications via their respective IDs. Data is tracked with a last update date.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique, automatically incrementing integer serving as the primary key for each clinical data point record in the `clinical_data_points` table."
        },
        {
          "name": "trial_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific clinical trial.  Foreign key referencing the 'trials' table."
        },
        {
          "name": "drug_id",
          "type": "INTEGER",
          "description": "Unique identifier for a drug.  Foreign key referencing the 'drugs' table."
        },
        {
          "name": "indication_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'indications' table.  Identifies the medical indication (e.g., disease or condition) associated with the clinical data point."
        },
        {
          "name": "endpoint_type",
          "type": "VARCHAR",
          "description": "Specifies the type of endpoint collected for the clinical data point.  Examples might include \"lab result\", \"vital sign\", \"patient reported outcome\", or \"imaging study\"."
        },
        {
          "name": "endpoint_name",
          "type": "VARCHAR",
          "description": "`endpoint_name` (VARCHAR):  The name of the specific clinical data point being measured or recorded (e.g., \"heart rate\", \"blood pressure\", \"temperature\")."
        },
        {
          "name": "endpoint_category",
          "type": "VARCHAR",
          "description": "Categorization of the clinical data point's endpoint, e.g., primary, secondary, exploratory.  Stored as a string."
        },
        {
          "name": "value",
          "type": "VARCHAR",
          "description": "The `value` column in the `clinical_data_points` table stores the textual representation of a clinical data point.  This could include things like a patient's blood type (e.g., \"A+\"), a medication name (e.g., \"Aspirin\"), or a subjective finding (e.g., \"Patient reports mild headache\").  The data type is `VARCHAR`, allowing for variable-length strings."
        },
        {
          "name": "statistical_significance",
          "type": "BOOLEAN",
          "description": "Indicates whether the observed clinical data point reached statistical significance (TRUE) or not (FALSE)."
        },
        {
          "name": "p_value",
          "type": "FLOAT",
          "description": "The `p_value` column in the `clinical_data_points` table stores the probability value (p-value) as a floating-point number.  This value typically represents the statistical significance of an observed result, indicating the probability of obtaining that result (or a more extreme result) if there is no real effect."
        },
        {
          "name": "confidence_interval",
          "type": "VARCHAR",
          "description": "Stores the calculated confidence interval (e.g., \"95% CI: 1.2-2.5\") for the associated clinical data point.  This field is stored as text to accommodate various formats."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value pairs representing various clinical data points for a given record. This allows for storing complex and evolving data structures related to clinical observations, measurements, or other relevant information."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time of the most recent update to the corresponding clinical data point in the `clinical_data_points` table."
        },
        {
          "name": "source_type",
          "type": "VARCHAR",
          "description": "`source_type` (VARCHAR):  Indicates the origin or type of source for the clinical data point.  Examples include 'Electronic Health Record', 'Lab Result', 'Patient Reported Outcome', 'Claims Data', etc."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column of the 'primary_sources' table.  Identifies the primary source for the clinical data point."
        }
      ]
    },
    {
      "table_name": "regulatory_authorities",
      "description": "The `regulatory_authorities` table stores information about regulatory bodies. Each entry includes a unique identifier (`id`), the authority's full name (`name`), a short code (`shortcode`), a foreign key linking to a geographical region (`geography_id`), the authority's website URL (`website`), and additional data (`data`) which may be a JSON object containing further details.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique sequential identifier for each regulatory authority. Automatically generated by the database."
        },
        {
          "name": "name",
          "type": "VARCHAR",
          "description": "The `name` column in the `regulatory_authorities` table stores the name of a regulatory authority as a string."
        },
        {
          "name": "shortcode",
          "type": "VARCHAR",
          "description": "Short-hand code or abbreviation used to identify the regulatory authority."
        },
        {
          "name": "geography_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a geographical area (e.g., country, region, state) in a related 'geography' table.  Identifies the geographic jurisdiction of the regulatory authority."
        },
        {
          "name": "website",
          "type": "VARCHAR",
          "description": "The `website` column in the `regulatory_authorities` table stores the official website address (URL) of a regulatory authority as a string."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column containing flexible key-value pairs of additional information related to the regulatory authority. This allows storing unstructured or semi-structured data associated with the authority, such as contact details, specific regulations, or other relevant attributes."
        }
      ]
    },
    {
      "table_name": "regulatory_application_types",
      "description": "The `regulatory_application_types` table stores information about different types of regulatory applications.  Each record represents a unique application type, identified by its `id`.  The table includes the application's `application_code`,  `application_name`, a descriptive `application_description`, the `applicable_product_types` it pertains to, and any additional `data` relevant to the application type.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id`:  A unique, automatically incrementing integer that serves as the primary key for the `regulatory_application_types` table.  It identifies each distinct type of regulatory application."
        },
        {
          "name": "application_code",
          "type": "VARCHAR",
          "description": "A code uniquely identifying a specific type of regulatory application, such as \"NDA\" (New Drug Application) or \"BLA\" (Biologics License Application)."
        },
        {
          "name": "application_name",
          "type": "VARCHAR",
          "description": "The `application_name` column in the `regulatory_application_types` table stores the name of a specific type of regulatory application as a string.  This value should be unique within the table."
        },
        {
          "name": "application_description",
          "type": "TEXT",
          "description": "A textual description of the regulatory application type. This field provides further details about the application's purpose and scope."
        },
        {
          "name": "applicable_product_types",
          "type": "VARCHAR",
          "description": "A comma-separated list of product types to which this regulatory application type applies.  For example, \"drug,device,biologic\"."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value data related to the regulatory application type.  This allows for storing various attributes and configurations specific to each type without requiring schema changes."
        }
      ]
    },
    {
      "table_name": "regulatory_review_pathways",
      "description": "The `regulatory_review_pathways` table stores information about different regulatory review processes. Each record represents a distinct pathway with a unique identifier (`id`), a coded abbreviation (`pathway_code`), a descriptive name (`pathway_name`), a detailed explanation (`pathway_description`), a broader categorization (`global_pathway_category`), the typical reduction in review timeline (`typical_timeline_reduction`), the criteria for eligibility (`qualifying_criteria`), and any associated miscellaneous data (`data`).  This table helps track and compare various regulatory pathways available for products or submissions.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id`:  A unique, auto-incrementing integer that serves as the primary key for the `regulatory_review_pathways` table.  This column automatically assigns a new sequential value for each new pathway record."
        },
        {
          "name": "pathway_code",
          "type": "VARCHAR",
          "description": "`pathway_code` (VARCHAR): A unique code identifying a specific regulatory review pathway.  This code is used for efficient referencing and querying of pathways within the `regulatory_review_pathways` table."
        },
        {
          "name": "pathway_name",
          "type": "VARCHAR",
          "description": "The `pathway_name` column (VARCHAR) in the `regulatory_review_pathways` table stores the name of a specific regulatory review pathway."
        },
        {
          "name": "pathway_description",
          "type": "TEXT",
          "description": "A textual description of the regulatory review pathway. This field provides details about the specific steps, requirements, and processes involved in the pathway."
        },
        {
          "name": "global_pathway_category",
          "type": "VARCHAR",
          "description": "Categorizes the regulatory review pathway followed for a given submission according to a global classification system.  This field stores a string value representing the category."
        },
        {
          "name": "typical_timeline_reduction",
          "type": "VARCHAR",
          "description": "`typical_timeline_reduction`:  Describes the typical reduction in regulatory review timeline (e.g., \"2 months\", \"15%\", \"variable\") offered by this specific regulatory pathway compared to the standard process.  Values are stored as strings."
        },
        {
          "name": "qualifying_criteria",
          "type": "TEXT",
          "description": "Textual description of the criteria a product must meet to be eligible for a specific regulatory review pathway."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column containing flexible key-value pairs related to the regulatory review pathway. This allows for storing varying attributes and details specific to each pathway without requiring schema changes."
        }
      ]
    },
    {
      "table_name": "authority_application_types",
      "description": "The `authority_application_types` table stores information about the specific application types accepted by different regulatory authorities.  It links application types to authorities and includes authority-specific details such as codes, names, requirements, processing timelines, fees, submission portals, and guidance documents.  The `is_active` flag indicates whether the application type is currently accepted.  The `data` column allows for storing additional structured data relevant to the application type.  Note there appears to be a redundant `application_type_id` column.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique identifier for each authority application type.  Automatically increments upon insertion."
        },
        {
          "name": "regulatory_authority_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `regulatory_authority` table.  Identifies the regulatory authority associated with a specific application type."
        },
        {
          "name": "application_type_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `application_types` table.  Identifies the type of application associated with this authority."
        },
        {
          "name": "authority_specific_code",
          "type": "VARCHAR",
          "description": "A code specific to the authority that defines the application type. This value may be used for internal processing or reporting by the authority."
        },
        {
          "name": "local_name",
          "type": "VARCHAR",
          "description": "The `local_name` column in the `authority_application_types` table is a VARCHAR field storing the name of the application type specific to the local authority or jurisdiction.  This allows for variations in terminology or categorization between different authorities."
        },
        {
          "name": "is_active",
          "type": "BOOLEAN",
          "description": "Indicates whether the authority application type is currently active (true) or inactive (false)."
        },
        {
          "name": "requirements",
          "type": "TEXT",
          "description": "Requirements for this type of authority application, which can include multiple items or longer descriptions."
        },
        {
          "name": "typical_timeline_days",
          "type": "INTEGER",
          "description": "Typical processing time in days for this application type."
        },
        {
          "name": "fee_amount",
          "type": "NUMERIC",
          "description": "The `fee_amount` column in the `authority_application_types` table stores the numeric value representing the fee associated with a specific application type."
        },
        {
          "name": "fee_currency",
          "type": "VARCHAR(3)",
          "description": "Three-letter ISO 4217 currency code for the application fee associated with this authority application type."
        },
        {
          "name": "fee_year",
          "type": "INTEGER",
          "description": "The `fee_year` column in the `authority_application_types` table stores the four-digit year (e.g., 2024) for which the associated application fee is applicable.  This allows for tracking fee changes over time."
        },
        {
          "name": "electronic_submission_portal",
          "type": "VARCHAR",
          "description": "Indicates the specific electronic portal (if any) used for submitting this type of application to the authority.  May contain a URL or a short descriptive name."
        },
        {
          "name": "guidance_document_url",
          "type": "VARCHAR",
          "description": "URL to the guidance document associated with this application type.  This provides further information for applicants."
        },
        {
          "name": "special_notes",
          "type": "TEXT",
          "description": "Special notes or comments regarding the authority application type. This field allows for free-form text entry to capture any additional information not covered by other fields."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data` (JSONB): Stores flexible, schema-less application-specific data for different authority application types.  This allows for custom fields and configurations without altering the table structure."
        },
        {
          "name": "application_type_id)",
          "type": "TYPE_UNKNOWN",
          "description": "Foreign key referencing the `application_type` table (presumably).  Identifies the type of application associated with an authority.  The specific meaning of 'application type' is unknown without further context."
        }
      ]
    },
    {
      "table_name": "authority_review_pathways",
      "description": "The `authority_review_pathways` table defines the different review pathways available for each regulatory authority. It maps authorities to specific review processes, including authority-specific codes, local names, implementation details (date, timelines, fees), special requirements, success rates, and any other relevant data.  This table helps track and compare various review options offered by different authorities.  Note: the table definition appears to have a duplicate `review_pathway_id` column which should likely be removed.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique sequential identifier for each authority review pathway record. Automatically generated by the database."
        },
        {
          "name": "regulatory_authority_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `regulatory_authorities` table.  Identifies the regulatory authority associated with a specific review pathway."
        },
        {
          "name": "review_pathway_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column in the `review_pathways` table.  Identifies the specific review pathway associated with an authority."
        },
        {
          "name": "authority_specific_code",
          "type": "VARCHAR",
          "description": "A code specific to the reviewing authority, used in the authority review pathways table. This code may represent internal classifications, process identifiers, or other authority-specific values."
        },
        {
          "name": "local_name",
          "type": "VARCHAR",
          "description": "`local_name` (VARCHAR):  The locally recognized or preferred name for the review pathway, which may differ from the official or standardized name.  This allows for variations in terminology used by different authorities."
        },
        {
          "name": "is_active",
          "type": "BOOLEAN",
          "description": "Indicates whether the authority review pathway is currently active (true) or inactive (false)."
        },
        {
          "name": "implementation_date",
          "type": "DATE",
          "description": "The `implementation_date` column of type `DATE` in the `authority_review_pathways` table stores the date on which a specific review pathway was implemented by the relevant authority.  This date signifies the start of the pathway's active use."
        },
        {
          "name": "statutory_timeline_days",
          "type": "INTEGER",
          "description": "Number of days legally mandated for the review process for a given authority pathway."
        },
        {
          "name": "actual_average_timeline_days",
          "type": "INTEGER",
          "description": "The `actual_average_timeline_days` column in the `authority_review_pathways` table stores the average number of days, as a whole number, it actually takes to complete a specific review pathway."
        },
        {
          "name": "fee_implications",
          "type": "VARCHAR",
          "description": "Describes any fee implications (e.g., additional fees, waivers, exemptions) associated with the specific authority review pathway."
        },
        {
          "name": "special_requirements",
          "type": "TEXT",
          "description": "Special requirements or conditions needed for this specific authority review pathway, such as specific documentation, prerequisites, or other non-standard procedures.  Can contain free-form text."
        },
        {
          "name": "success_rate",
          "type": "NUMERIC",
          "description": "`success_rate` (NUMERIC):  Represents the percentage of successful completions for a given authority review pathway. Stored as a decimal value between 0 and 1 (inclusive), where 0 represents a 0% success rate and 1 represents a 100% success rate."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible, structured data related to the authority review pathway. This may include details about specific requirements, steps in the process, assigned personnel, or other relevant information.  The JSONB format allows for efficient querying and manipulation of this data."
        },
        {
          "name": "review_pathway_id)",
          "type": "TYPE_UNKNOWN",
          "description": "Foreign key referencing a review pathway (likely in a separate 'review_pathways' table).  The specific data type is unknown, requiring further investigation to determine the correct type for proper database management.  This column likely identifies the specific review process or workflow associated with an authority record in the 'authority_review_pathways' table."
        }
      ]
    },
    {
      "table_name": "regulatory_submission_requirements",
      "description": "The `regulatory_submission_requirements` table stores the specific requirements for regulatory submissions, linking them to the relevant regulatory authority, application type, and review pathway.  It details each requirement's category, name, description, mandatory status, potential waiver conditions, format specifications, and associated templates or guidance.  The table also tracks the effective date range of each requirement and allows for additional data storage. Uniqueness is ensured through the primary key 'id', while relationships to other tables are managed via foreign keys like `regulatory_authority_id`, `application_type_id`, and `review_pathway_id`.  Redundant columns like the second instance of `application_type_id`, `review_pathway_id`, and `requirement_name` should be removed to optimize the database design.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique auto-incrementing integer serving as the primary key for each regulatory submission requirement record in the `regulatory_submission_requirements` table."
        },
        {
          "name": "regulatory_authority_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `regulatory_authorities` table.  Identifies the regulatory authority that defines the specific submission requirement."
        },
        {
          "name": "application_type_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the application type (e.g., New Drug Application, Abbreviated New Drug Application) required for this regulatory submission."
        },
        {
          "name": "review_pathway_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the review pathway (e.g., standard, expedited, etc.) for the regulatory submission requirement."
        },
        {
          "name": "requirement_category",
          "type": "VARCHAR",
          "description": "Categorizes the type of requirement for a regulatory submission.  Examples could include \"Documentation,\" \"Testing,\" \"Labeling,\" or \"Manufacturing.\""
        },
        {
          "name": "requirement_name",
          "type": "VARCHAR",
          "description": "The `requirement_name` column (VARCHAR) in the `regulatory_submission_requirements` table stores the name of a specific requirement for a regulatory submission."
        },
        {
          "name": "requirement_description",
          "type": "TEXT",
          "description": "`requirement_description`:  A text field providing a detailed description of a specific regulatory submission requirement. This may include details on the required format, content, supporting documentation, and any relevant guidelines or regulations."
        },
        {
          "name": "is_mandatory",
          "type": "BOOLEAN",
          "description": "Indicates whether the associated requirement for a regulatory submission is mandatory (`TRUE`) or optional (`FALSE`)."
        },
        {
          "name": "waiver_conditions",
          "type": "TEXT",
          "description": "Stores specific conditions or stipulations associated with a waiver granted for a regulatory submission requirement. This field allows for detailed text descriptions of the waiver's limitations, restrictions, or any other relevant contextual information."
        },
        {
          "name": "format_requirements",
          "type": "VARCHAR",
          "description": "Specifies the required format for the regulatory submission, such as document type (e.g., PDF, Word), file naming conventions, or specific formatting guidelines."
        },
        {
          "name": "template_url",
          "type": "VARCHAR",
          "description": "URL pointing to a template document that fulfills the specific regulatory submission requirement."
        },
        {
          "name": "guidance_reference",
          "type": "VARCHAR",
          "description": "`guidance_reference` (VARCHAR):  A string containing a reference identifier or link to relevant regulatory guidance documents, standards, or specifications pertaining to the submission requirement.  This may include document numbers, URLs, or other specific identifiers."
        },
        {
          "name": "notes",
          "type": "TEXT",
          "description": "`notes`:  (TEXT)  Free-form text field for recording any miscellaneous notes or comments related to the specific regulatory submission requirement."
        },
        {
          "name": "effective_from",
          "type": "DATE",
          "description": "The `effective_from` column of type `DATE` in the `regulatory_submission_requirements` table specifies the date on which a particular regulatory submission requirement becomes active or enforceable."
        },
        {
          "name": "effective_to",
          "type": "DATE",
          "description": "The `effective_to` column of type `DATE` in the `regulatory_submission_requirements` table specifies the end date of the applicability period for a given regulatory submission requirement.  After this date, the requirement is no longer considered active.  A NULL value indicates the requirement is currently active and has no defined end date."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value data related to specific regulatory submission requirements.  This allows for storage of varying attributes and structures without requiring schema changes."
        },
        {
          "name": "application_type_id",
          "type": "TYPE_UNKNOWN",
          "description": "Foreign key referencing a lookup table (likely 'application_types') that defines the type of regulatory application (e.g., New Drug Application, Abbreviated New Drug Application, etc.) for a given submission requirement.  The specific type 'TYPE_UNKNOWN' suggests a placeholder or default value for cases where the application type is not yet determined or specified."
        },
        {
          "name": "review_pathway_id",
          "type": "TYPE_UNKNOWN",
          "description": "`review_pathway_id` (TYPE_UNKNOWN):  Identifies the specific review pathway associated with a regulatory submission requirement.  Further investigation is needed to determine the data type and valid values for this column."
        },
        {
          "name": "requirement_name)",
          "type": "TYPE_UNKNOWN",
          "description": "`requirement_name (TYPE_UNKNOWN)`:  The name of a regulatory submission requirement.  Further investigation is needed to determine the specific data type of this column.  It likely stores text-based names for the requirements associated with a regulatory submission."
        }
      ]
    },
    {
      "table_name": "regulatory_designation_types",
      "description": "The `regulatory_designation_types` table stores information about different types of regulatory designations (e.g., Orphan Drug, Breakthrough Therapy).  Each record represents a unique designation type, identified by `id`.  Key attributes include the `designation_code`, `designation_name`, the granting `regulatory_authority_id`, `designation_category`, `typical_benefits`, `qualifying_criteria`, `exclusivity_period`, `first_introduced_date`,  current active status (`is_active`), and any additional associated `data`.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique, automatically incrementing integer serving as the primary key for the `regulatory_designation_types` table.  Identifies each type of regulatory designation."
        },
        {
          "name": "designation_code",
          "type": "VARCHAR",
          "description": "A code (VARCHAR) representing a specific regulatory designation type. This code is used to identify and categorize different types of regulatory designations within the `regulatory_designation_types` table."
        },
        {
          "name": "designation_name",
          "type": "VARCHAR",
          "description": "The `designation_name` column in the `regulatory_designation_types` table stores the name of a regulatory designation as a string (VARCHAR).  This represents the descriptive title of a specific designation type."
        },
        {
          "name": "regulatory_authority_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `regulatory_authorities` table.  Identifies the regulatory authority associated with the designation type."
        },
        {
          "name": "designation_category",
          "type": "VARCHAR",
          "description": "Categorizes the type of regulatory designation.  This field provides a broader classification for different designation types."
        },
        {
          "name": "typical_benefits",
          "type": "TEXT",
          "description": "Typical benefits associated with this regulatory designation type.  This field allows for a longer description and may include multiple benefits separated by commas or listed in a bullet point format."
        },
        {
          "name": "qualifying_criteria",
          "type": "TEXT",
          "description": "The `qualifying_criteria` column in the `regulatory_designation_types` table stores a text description of the criteria that an entity must meet to qualify for a particular regulatory designation. This could include specific requirements, thresholds, or conditions."
        },
        {
          "name": "exclusivity_period",
          "type": "VARCHAR",
          "description": "The `exclusivity_period` column in the `regulatory_designation_types` table stores a string representation of the exclusivity period granted for a specific regulatory designation.  This could include durations (e.g., \"5 years\", \"6 months\") or other descriptive terms (e.g., \"market exclusivity\", \"orphan drug exclusivity\")."
        },
        {
          "name": "first_introduced_date",
          "type": "DATE",
          "description": "The `first_introduced_date` column of type `DATE` in the `regulatory_designation_types` table stores the date when a specific regulatory designation type was first established or introduced.  This date indicates the initial implementation or effective date of the designation."
        },
        {
          "name": "is_active",
          "type": "BOOLEAN",
          "description": "Indicates whether the regulatory designation type is currently active (true) or inactive (false)."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data` (JSONB): Stores additional, flexible data related to the regulatory designation type. This can include various attributes specific to different types of designations, allowing for extensibility without schema changes."
        }
      ]
    },
    {
      "table_name": "regulatory_submissions",
      "description": "The `regulatory_submissions` table tracks regulatory submissions for drugs across different geographies and regulatory authorities. It stores information about the submission type, pathway, dates (submission, receipt confirmation, target action, actual decision), decision outcome, and related data.  Each submission is linked to a specific drug, indication, geography, regulatory authority, application type, and review pathway.  The `data` column allows for storage of additional submission-specific information.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id`:  A unique, auto-incrementing integer that serves as the primary key for the `regulatory_submissions` table."
        },
        {
          "name": "drug_id",
          "type": "INTEGER",
          "description": "Unique identifier for a drug.  Foreign key referencing the 'drugs' table."
        },
        {
          "name": "indication_specification_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `indication_specifications` table.  Identifies the specific indication (e.g., disease or condition) for which this regulatory submission applies."
        },
        {
          "name": "geography_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a geographical location (e.g., country, region) in a related 'geography' table.  Used to identify the geographic area associated with a regulatory submission."
        },
        {
          "name": "regulatory_authority_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `regulatory_authorities` table.  Identifies the regulatory authority (e.g., FDA, EMA) associated with a specific submission."
        },
        {
          "name": "application_type_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the application type.  Identifies the type of regulatory submission (e.g., new drug application, abbreviated new drug application, etc.)."
        },
        {
          "name": "review_pathway_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the review pathway (e.g., standard, expedited, etc.) used for the regulatory submission."
        },
        {
          "name": "submission_date",
          "type": "DATE",
          "description": "The `submission_date` column in the `regulatory_submissions` table stores the date on which a regulatory submission was made.  It is of type `DATE` and therefore only stores the date (year, month, and day) without time components."
        },
        {
          "name": "submission_type",
          "type": "VARCHAR",
          "description": "Classifies the type of regulatory submission (e.g., initial application, amendment, annual report, etc.)."
        },
        {
          "name": "submission_pathway",
          "type": "VARCHAR",
          "description": "`submission_pathway` (VARCHAR):  Indicates the specific regulatory pathway or process used for the submission (e.g., \"standard\", \"fast-track\", \"emergency use authorization\")."
        },
        {
          "name": "receipt_confirmation_date",
          "type": "DATE",
          "description": "The `receipt_confirmation_date` column of type DATE in the `regulatory_submissions` table stores the date when official confirmation of receipt for a regulatory submission was received.  This date signifies acknowledgement of the submission by the regulatory authority."
        },
        {
          "name": "status",
          "type": "VARCHAR",
          "description": "The `status` column in the `regulatory_submissions` table is a VARCHAR field that indicates the current stage of a regulatory submission.  This could include values like \"Draft,\" \"Submitted,\" \"Approved,\" \"Rejected,\" or \"Withdrawn.\""
        },
        {
          "name": "target_action_date",
          "type": "DATE",
          "description": "The `target_action_date` column in the `regulatory_submissions` table stores the planned or anticipated date (YYYY-MM-DD) for a specific action related to a regulatory submission.  This could be the target date for submission, approval, review, or other key milestones."
        },
        {
          "name": "actual_decision_date",
          "type": "DATE",
          "description": "The `actual_decision_date` column in the `regulatory_submissions` table stores the date on which a decision was actually made regarding the regulatory submission.  This is a `DATE` type, representing the calendar date (year, month, and day) of the decision."
        },
        {
          "name": "decision_outcome",
          "type": "VARCHAR",
          "description": "`decision_outcome`: (VARCHAR) Stores the final decision reached on the regulatory submission.  Possible values may include \"Approved\", \"Rejected\", \"Withdrawn\", \"Pending\", etc."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source document (e.g., a study report) associated with this regulatory submission."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing structured data related to a regulatory submission. This allows for flexible storage of varying attributes and values associated with the submission."
        },
        {
          "name": "indication_specification_id",
          "type": "TYPE_UNKNOWN",
          "description": "A foreign key referencing a currently undefined entity related to the indication specification for the regulatory submission.  The specific nature of this relationship and the target table are yet to be determined."
        },
        {
          "name": "geography_id",
          "type": "TYPE_UNKNOWN",
          "description": "`geography_id` (TYPE_UNKNOWN):  A unique identifier related to a geographic location relevant to the regulatory submission. The specific meaning and format of this identifier are currently unknown and require further investigation.  This field is used in the `regulatory_submissions` table."
        },
        {
          "name": "submission_date",
          "type": "TYPE_UNKNOWN",
          "description": "`submission_date` (TYPE_UNKNOWN) - The date a regulatory submission was made.  Further investigation is needed to determine the precise data type stored in this column.  It is likely to represent a date or timestamp."
        },
        {
          "name": "submission_type)",
          "type": "TYPE_UNKNOWN",
          "description": "`submission_type (TYPE_UNKNOWN)`:  The type of regulatory submission.  The specific format or meaning of this field is currently unknown and requires further investigation."
        }
      ]
    },
    {
      "table_name": "regulatory_approvals",
      "description": "The `regulatory_approvals` table stores information about regulatory approvals for drug formulations in specific geographic regions.  It tracks details such as the approval date, type, pathway, designations, post-marketing requirements, and any subsequent withdrawals.  The table links to other tables (drugs, formulations, indications, geographies, regulatory authorities, and primary sources) using foreign keys for comprehensive tracking of the approval lifecycle.  Duplicate formulation, indication, and geography IDs suggest a data modeling issue that should be addressed.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique, automatically incrementing integer identifier for each regulatory approval record in the `regulatory_approvals` table.  Serves as the primary key."
        },
        {
          "name": "drug_id",
          "type": "INTEGER",
          "description": "Unique integer identifier for a drug within the regulatory approvals table.  References the 'drugs' table."
        },
        {
          "name": "formulation_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific product formulation.  Foreign key referencing the `formulations` table."
        },
        {
          "name": "indication_specification_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `indication_specifications` table.  Identifies the specific indication (e.g., disease or condition) for which this regulatory approval applies."
        },
        {
          "name": "geography_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a geographical area (e.g., country, region, state) in a related table.  Used to associate regulatory approvals with specific geographies."
        },
        {
          "name": "regulatory_authority_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the regulatory authority (e.g., FDA, EMA) that granted or is responsible for the approval."
        },
        {
          "name": "approval_date",
          "type": "DATE",
          "description": "The `approval_date` column in the `regulatory_approvals` table stores the date on which a regulatory approval was granted.  It is of type `DATE` and therefore holds only the date portion (year, month, day) without time or timezone information."
        },
        {
          "name": "approval_type",
          "type": "VARCHAR",
          "description": "`approval_type` (VARCHAR):  Indicates the type of regulatory approval granted (e.g., \"Emergency Use Authorization\", \"Full Approval\", \"Conditional Approval\")."
        },
        {
          "name": "approval_pathway",
          "type": "VARCHAR",
          "description": "`approval_pathway` (VARCHAR):  Indicates the specific regulatory pathway followed for the approval, e.g., \"Fast Track\", \"Breakthrough Therapy\", \"Standard Review\", \"Accelerated Approval\"."
        },
        {
          "name": "approval_designations",
          "type": "JSONB",
          "description": "`approval_designations` (JSONB): Stores a JSON object containing various designations or classifications associated with a regulatory approval. This might include information like specific approval types, sub-categories, or internal codes relevant to the approval process."
        },
        {
          "name": "post_marketing_requirements",
          "type": "JSONB",
          "description": "Stores post-marketing requirements for a regulatory approval as a JSON document.  This allows for flexible storage of varied requirements such as additional studies, periodic safety reports, and other obligations."
        },
        {
          "name": "conversion_to_full_approval_date",
          "type": "DATE",
          "description": "The `conversion_to_full_approval_date` column in the `regulatory_approvals` table stores the date (YYYY-MM-DD) when a regulatory approval transitioned from a conditional or provisional status to full approval.  A NULL value indicates the approval is not yet fully approved or was granted full approval initially."
        },
        {
          "name": "withdrawal_date",
          "type": "DATE",
          "description": "The `withdrawal_date` column of type `DATE` in the `regulatory_approvals` table stores the date on which a regulatory approval was withdrawn or rescinded.  A `NULL` value indicates the approval is still active."
        },
        {
          "name": "withdrawal_reason",
          "type": "VARCHAR",
          "description": "Reason for withdrawal of a regulatory approval application.  Stored as a string."
        },
        {
          "name": "brand_name",
          "type": "VARCHAR",
          "description": "The `brand_name` column (VARCHAR) in the `regulatory_approvals` table stores the commercial or trade name under which a regulated product is marketed.  This is distinct from the generic or scientific name."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "Stores regulatory approval information as a JSONB object. This allows for flexible storage of various approval attributes and their values."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source document (e.g., clinical trial, research paper) that supports this regulatory approval."
        },
        {
          "name": "formulation_id",
          "type": "TYPE_UNKNOWN",
          "description": "A unique identifier (of unknown type) for a specific product formulation within the `regulatory_approvals` table.  This links the approval to a particular version or variant of the product."
        },
        {
          "name": "indication_specification_id",
          "type": "TYPE_UNKNOWN",
          "description": "A foreign key referencing a specification for the indication (therapeutic use) of the regulated product. The specific type of this ID is currently unknown and requires further investigation.  This column resides in the `regulatory_approvals` table."
        },
        {
          "name": "geography_id)",
          "type": "TYPE_UNKNOWN",
          "description": "`geography_id (TYPE_UNKNOWN)` in the `regulatory_approvals` table likely identifies the geographic area (e.g., country, region, state) relevant to the regulatory approval. The specific meaning of the value stored depends on the unknown data type, which requires further investigation. It could be an integer referencing a lookup table, a string code, or another representation."
        }
      ]
    },
    {
      "table_name": "regulatory_designations",
      "description": "The `regulatory_designations` table stores information about regulatory designations granted to drugs for specific indications by different regulatory authorities across various geographies.  It tracks the designation type, status, key dates (designation, expiration, renewal), associated benefits, qualifying criteria, and the primary source of the information.  Each designation is uniquely identified by `id` and linked to a specific drug (`drug_id`), indication (`indication_specification_id`), regulatory authority (`regulatory_authority_id`), and geographic region (`geography_id`).  The `data` column allows for storing additional designation-specific information.  `last_update_date` tracks when the record was last modified.  Note: `indication_specification_id`, `regulatory_authority_id`, `geography_id`, and `designation_type` appear to be duplicated column names and should likely be reviewed.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique, automatically incrementing integer serving as the primary key for the `regulatory_designations` table."
        },
        {
          "name": "drug_id",
          "type": "INTEGER",
          "description": "Unique integer identifier for a drug within the regulatory designations table.  This links to the 'drugs' table."
        },
        {
          "name": "indication_specification_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `indication_specifications` table.  Identifies the specific indication (e.g., disease or condition) for which the regulatory designation in this record applies."
        },
        {
          "name": "regulatory_authority_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `regulatory_authorities` table.  Identifies the regulatory authority responsible for a given designation in the `regulatory_designations` table."
        },
        {
          "name": "geography_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a geographical area (e.g., country, region, state) record.  Relates a regulatory designation to its applicable geographic scope."
        },
        {
          "name": "designation_type",
          "type": "VARCHAR",
          "description": "Type of regulatory designation (e.g., endangered, threatened, species of concern)."
        },
        {
          "name": "status",
          "type": "VARCHAR",
          "description": "The `status` column in the `regulatory_designations` table is a VARCHAR field indicating the current state of a regulatory designation. This could represent values like \"Active\", \"Inactive\", \"Pending Review\", \"Rejected\", etc."
        },
        {
          "name": "designation_date",
          "type": "DATE",
          "description": "The `designation_date` column in the `regulatory_designations` table stores the date (YYYY-MM-DD) on which a specific regulatory designation was applied."
        },
        {
          "name": "expiration_date",
          "type": "DATE",
          "description": "The `expiration_date` column of type `DATE` in the `regulatory_designations` table stores the date on which a specific regulatory designation expires.  This date indicates the last day the designation is valid."
        },
        {
          "name": "renewal_date",
          "type": "DATE",
          "description": "`renewal_date` (DATE):  The date on which a regulatory designation needs to be renewed.  A null value indicates the designation does not expire or require renewal."
        },
        {
          "name": "designation_benefits",
          "type": "TEXT",
          "description": "`designation_benefits`:  A text field describing the benefits associated with a specific regulatory designation recorded in the `regulatory_designations` table.  This may include financial incentives, streamlined approvals, or other advantages."
        },
        {
          "name": "qualifying_criteria",
          "type": "TEXT",
          "description": "The `qualifying_criteria` column in the `regulatory_designations` table stores a text description of the specific requirements or conditions that an entity must meet to qualify for the associated regulatory designation. This may include legal thresholds, performance standards, or other relevant criteria."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source document (e.g., legislation, regulation) that establishes the regulatory designation."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time when the regulatory designation information in this row was last modified."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value data related to a specific regulatory designation. This allows for storing varying attributes and their values associated with the designation without needing to define a rigid schema."
        },
        {
          "name": "indication_specification_id",
          "type": "TYPE_UNKNOWN",
          "description": "A foreign key referencing a specification record (likely in a separate table) that details the specific indication (therapeutic use) for the regulatory designation. The exact nature of the referenced specification is currently unknown (TYPE_UNKNOWN) and requires further investigation.  This column links regulatory designations in the `regulatory_designations` table to more specific details about their intended use."
        },
        {
          "name": "regulatory_authority_id",
          "type": "TYPE_UNKNOWN",
          "description": "Foreign key referencing a regulatory authority (details of TYPE_UNKNOWN need to be determined).  Identifies the regulatory authority associated with a specific designation in the `regulatory_designations` table."
        },
        {
          "name": "geography_id",
          "type": "TYPE_UNKNOWN",
          "description": "A foreign key referencing a geographical entity (the specific type is currently unknown) used to associate regulatory designations with a location."
        },
        {
          "name": "designation_type)",
          "type": "TYPE_UNKNOWN",
          "description": "The `designation_type` column in the `regulatory_designations` table specifies the type of regulatory designation.  The specific meaning of the values in this column is currently unknown (TYPE_UNKNOWN) and requires further investigation."
        }
      ]
    },
    {
      "table_name": "regulatory_communications",
      "description": "The `regulatory_communications` table stores details of communications between pharmaceutical companies and regulatory authorities regarding specific drug indications.  It tracks the date, type, and purpose of the communication, key outcomes and next steps, the impact on the drug's development timeline, and a link to the primary source document.  It also identifies the drug, indication, regulatory authority, and geographic region involved.  `data` allows for storage of additional unstructured information related to the communication.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique, auto-incrementing integer serving as the primary key for each regulatory communication record in the `regulatory_communications` table."
        },
        {
          "name": "drug_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific drug mentioned in the regulatory communication.  This ID links to the 'drugs' table."
        },
        {
          "name": "indication_specification_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `indication_specifications` table.  Identifies the specific indication (e.g., disease or condition) to which this regulatory communication pertains."
        },
        {
          "name": "regulatory_authority_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column of the 'regulatory_authorities' table.  Identifies the regulatory authority associated with a particular communication."
        },
        {
          "name": "geography_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a geographical area (e.g., country, region, state) in a related 'geography' table.  Used to associate regulatory communications with specific locations."
        },
        {
          "name": "communication_date",
          "type": "DATE",
          "description": "The `communication_date` column in the `regulatory_communications` table stores the date on which a specific communication with a regulatory body occurred.  It is of type `DATE` and therefore only stores the date (year, month, and day) without any time component."
        },
        {
          "name": "communication_type",
          "type": "VARCHAR",
          "description": "Stores the method of communication used for regulatory purposes (e.g., email, phone, letter, in-person meeting)."
        },
        {
          "name": "communication_purpose",
          "type": "VARCHAR",
          "description": "`communication_purpose`:  (VARCHAR)  Describes the reason for the regulatory communication, such as \"Initial Disclosure,\" \"Annual Report,\" \"Incident Report,\" or \"Customer Complaint Response.\""
        },
        {
          "name": "key_outcomes",
          "type": "TEXT",
          "description": "Key outcomes or results of the regulatory communication (e.g., fines levied, warnings issued, approvals granted, changes implemented).  Can contain multiple outcomes separated by commas or stored as a list."
        },
        {
          "name": "next_steps",
          "type": "TEXT",
          "description": "`next_steps` (TEXT):  Describes the actions required following a regulatory communication, such as responding to an inquiry, submitting additional documentation, or scheduling a follow-up meeting."
        },
        {
          "name": "impact_on_timeline",
          "type": "VARCHAR",
          "description": "Describes the anticipated impact of the regulatory communication on the project timeline (e.g., \"No impact\", \"Minor delay\", \"Significant delay\", \"Acceleration\")."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source document (e.g., legislation, guidance) related to this regulatory communication."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time when the regulatory communication was last modified."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value data related to the regulatory communication. This allows for storing varying attributes and details associated with each communication without requiring schema changes."
        }
      ]
    },
    {
      "table_name": "regulatory_exclusivity",
      "description": "The `regulatory_exclusivity` table stores information about periods of market exclusivity granted to drugs for specific indications, geographical regions, and by specific regulatory authorities.  Each record represents a single exclusivity period, tracked by its type, start and end dates, current status, and associated drug, indication, geography, and regulatory authority. Additional data relevant to the exclusivity may be stored in a JSON field.  The `primary_source_id` identifies the source of the exclusivity information.  Note: `indication_specification_id`, `geography_id`, and `exclusivity_type` appear to be duplicated column names and should likely be reviewed and corrected.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id`:  A unique, automatically incrementing integer serving as the primary key for the `regulatory_exclusivity` table."
        },
        {
          "name": "drug_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific drug.  Foreign key referencing the 'drugs' table."
        },
        {
          "name": "indication_specification_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `indication_specification` table.  Identifies the specific indication (therapeutic use) for which the regulatory exclusivity applies."
        },
        {
          "name": "geography_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a geographical location (e.g., country, region) relevant to the regulatory exclusivity record."
        },
        {
          "name": "regulatory_authority_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the regulatory authority granting the exclusivity.  This links the exclusivity record to a specific regulatory body."
        },
        {
          "name": "exclusivity_type",
          "type": "VARCHAR",
          "description": "Type of regulatory exclusivity granted for the product.  Examples include: Orphan Drug Exclusivity, New Chemical Entity Exclusivity, Pediatric Exclusivity."
        },
        {
          "name": "start_date",
          "type": "DATE",
          "description": "The `start_date` column in the `regulatory_exclusivity` table stores the date (YYYY-MM-DD) on which a period of regulatory exclusivity begins for a given product."
        },
        {
          "name": "end_date",
          "type": "DATE",
          "description": "The `end_date` column of type `DATE` in the `regulatory_exclusivity` table stores the date on which a specific regulatory exclusivity period ends for a given product.  This date signifies the expiration of the exclusivity protection."
        },
        {
          "name": "status",
          "type": "VARCHAR",
          "description": "The `status` column in the `regulatory_exclusivity` table is a VARCHAR field that indicates the current state of the regulatory exclusivity, such as \"Active\", \"Pending\", \"Expired\", or \"Withdrawn\"."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time of the most recent update to the regulatory exclusivity information."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column containing additional, flexible data related to the regulatory exclusivity record. This field allows for storing structured information that doesn't fit into predefined columns, such as specific exclusivity criteria, associated dates, or other relevant details."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source document granting the regulatory exclusivity."
        },
        {
          "name": "indication_specification_id",
          "type": "TYPE_UNKNOWN",
          "description": "A foreign key referencing a currently undefined entity related to indication specifications. This ID links a regulatory exclusivity record to a specific indication specification, the details of which are not yet modeled in the database."
        },
        {
          "name": "geography_id",
          "type": "TYPE_UNKNOWN",
          "description": "`geography_id` (TYPE_UNKNOWN):  A foreign key referencing a geographical entity.  The specific type and meaning of this ID are currently unknown and require further investigation.  It likely links to a table defining countries, regions, or other geographic areas relevant to regulatory exclusivity."
        },
        {
          "name": "exclusivity_type)",
          "type": "TYPE_UNKNOWN",
          "description": "`exclusivity_type` (TYPE_UNKNOWN):  The type of regulatory exclusivity granted.  Further investigation is needed to determine the specific values and meaning of this column."
        }
      ]
    },
    {
      "table_name": "regulatory_review_milestones",
      "description": "The `regulatory_review_milestones` table tracks key milestones in the regulatory review process for drug indications within specific geographic regions.  It links each milestone to the drug, indication, geography, regulatory authority, and related submission.  The table captures the milestone type, date, outcome, advisory committee vote counts (if applicable), review division, comments, and update information.  Additional data and source details are also stored.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each regulatory review milestone record.  Automatically increments with each new entry."
        },
        {
          "name": "drug_id",
          "type": "INTEGER",
          "description": "Unique integer identifier for a specific drug referenced in the regulatory review milestone.  This links the milestone to a record in a separate drug information table."
        },
        {
          "name": "indication_specification_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `indication_specifications` table. Identifies the specific indication (e.g., disease or condition) for which this regulatory review milestone is associated."
        },
        {
          "name": "geography_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a geographical area (e.g., country, region, state) within a lookup table.  Used to associate regulatory review milestones with a specific geographic location."
        },
        {
          "name": "regulatory_authority_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the regulatory authority (e.g., FDA, EMA) responsible for the review milestone recorded in this table."
        },
        {
          "name": "submission_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific submission related to a regulatory review milestone.  This integer links the milestone to a particular submission record."
        },
        {
          "name": "milestone_type",
          "type": "VARCHAR",
          "description": "Classifies the type of regulatory milestone, e.g., 'Submission', 'Approval', 'Meeting', 'Inspection'."
        },
        {
          "name": "milestone_date",
          "type": "DATE",
          "description": "The `milestone_date` column in the `regulatory_review_milestones` table stores the date on which a specific regulatory review milestone was achieved.  This date is stored as a DATE value, representing the year, month, and day."
        },
        {
          "name": "milestone_outcome",
          "type": "VARCHAR",
          "description": "`milestone_outcome`:  (VARCHAR) Stores the result or outcome of the regulatory review milestone. This could be values like \"Approved\", \"Rejected\", \"Pending\", \"Withdrawn\", \"Needs Revision\", etc."
        },
        {
          "name": "adcom_vote_count",
          "type": "VARCHAR",
          "description": "Number of votes received from the advisory committee (adcom). Stored as a string to accommodate potential non-numeric values like \"N/A\" or \"Pending\"."
        },
        {
          "name": "review_division",
          "type": "VARCHAR",
          "description": "`review_division`:  (VARCHAR) Indicates the specific division or department within the regulatory agency responsible for conducting the review of the milestone.  For example, \"Cardiology Devices\", \"Oncology Drugs\", etc."
        },
        {
          "name": "review_comments",
          "type": "TEXT",
          "description": "`review_comments` (TEXT): Stores free-form text comments related to the regulatory review milestone. This can include notes, explanations, or any other textual information relevant to the milestone's progress or status."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time when the information for this regulatory review milestone was last modified."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value pairs related to the regulatory review milestone.  This allows for storing various attributes and details specific to each milestone without needing to define rigid schema changes."
        },
        {
          "name": "source_type",
          "type": "VARCHAR",
          "description": "Indicates the source of the regulatory review milestone.  This could be internal (e.g., company projection), external (e.g., regulatory agency communication), or derived (e.g., calculated from other data)."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source document (e.g., legislation, guidance) related to this regulatory review milestone."
        }
      ]
    },
    {
      "table_name": "standard_review_milestones",
      "description": "The `standard_review_milestones` table stores predefined milestones used in standard reviews. Each record represents a specific milestone, identified by a unique `id`, with a short `milestone_code`, descriptive `milestone_name`, and detailed `milestone_description`.  The `global_milestone_category` classifies milestones into broader categories. `is_decision_point` flags key milestones requiring a decision. `relative_day` indicates the milestone's expected timing within the review process, and the `data` column allows for storing additional milestone-specific information.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each standard review milestone. Automatically increments upon insertion. Serves as the primary key for the table `standard_review_milestones`."
        },
        {
          "name": "milestone_code",
          "type": "VARCHAR",
          "description": "A code (VARCHAR) uniquely identifying a specific milestone within a standard review process.  This code is used in the `standard_review_milestones` table."
        },
        {
          "name": "milestone_name",
          "type": "VARCHAR",
          "description": "The `milestone_name` column in the `standard_review_milestones` table stores the name of a standard review milestone as a string.  This represents a specific stage or checkpoint within the standard review process."
        },
        {
          "name": "milestone_description",
          "type": "TEXT",
          "description": "`milestone_description`: A text field in the `standard_review_milestones` table providing a detailed description of the specific milestone in a standard review process. This might include details about the purpose of the milestone, the expected deliverables, and the criteria for successful completion."
        },
        {
          "name": "global_milestone_category",
          "type": "VARCHAR",
          "description": "Categorizes the standard review milestone globally.  This field specifies the general category or type of milestone (e.g., 'Submission', 'Review', 'Approval', 'Publication')."
        },
        {
          "name": "is_decision_point",
          "type": "BOOLEAN",
          "description": "Indicates whether the milestone represents a decision point in the standard review process (true) or not (false)."
        },
        {
          "name": "relative_day",
          "type": "INT",
          "description": "`relative_day` (INT):  Represents the number of days relative to a specific event (e.g., project start, phase completion) when a standard review milestone is scheduled.  A positive value indicates days after the event, while a negative value indicates days before."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data` (JSONB): Stores flexible, structured data related to a standard review milestone. This column can hold various attributes and values specific to the milestone, allowing for extensibility without schema modifications."
        }
      ]
    },
    {
      "table_name": "authority_review_process_milestones",
      "description": "The `authority_review_process_milestones` table tracks milestones within the review process of different regulatory authorities.  It links each milestone to a specific authority, application type, and review pathway. Key information tracked includes the milestone's authority-specific name, its relative day within the process, whether it's publicly disclosed, if it has a statutory deadline, its internal significance, and any relevant notes or data.  It uses IDs to reference related data in other tables, including `regulatory_authority`, `application_type`, and `milestone`.  Note: `application_type_id`, `review_pathway_id`, and `milestone_id` are listed twice in the provided column list and should likely be deduplicated.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique sequential integer identifier automatically generated for each milestone in the authority review process. Serves as the primary key for the `authority_review_process_milestones` table."
        },
        {
          "name": "regulatory_authority_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `regulatory_authority` table.  Identifies the regulatory authority associated with the milestone in the authority review process."
        },
        {
          "name": "application_type_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'application_type' table.  Identifies the type of application (e.g., permit, license, registration) this milestone belongs to within the authority review process."
        },
        {
          "name": "review_pathway_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `review_pathway` table.  Identifies the specific review pathway associated with this milestone in the authority review process."
        },
        {
          "name": "milestone_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `milestones` table.  Identifies the specific milestone reached in the authority review process."
        },
        {
          "name": "authority_specific_name",
          "type": "VARCHAR",
          "description": "A human-readable name specific to the reviewing authority for this milestone in the authority review process.  This allows for customized milestone names based on the authority's internal terminology."
        },
        {
          "name": "relative_day",
          "type": "INTEGER",
          "description": "`relative_day` (INTEGER):  The number of days relative to a defined starting point (e.g., submission date, approval date) for this milestone in the authority review process.  Positive values indicate days after the starting point, negative values indicate days before."
        },
        {
          "name": "is_publicly_disclosed",
          "type": "BOOLEAN",
          "description": "Indicates whether the milestone in the authority review process has been publicly disclosed (true) or not (false)."
        },
        {
          "name": "has_statutory_deadline",
          "type": "BOOLEAN",
          "description": "Indicates whether the milestone in the authority review process has a statutory deadline (true) or not (false)."
        },
        {
          "name": "internal_significance",
          "type": "VARCHAR",
          "description": "Internal classification of the milestone's significance within the authority review process.  This can be used for filtering and reporting.  Example values could include 'High', 'Medium', 'Low'."
        },
        {
          "name": "notes",
          "type": "TEXT",
          "description": "`notes`:  (TEXT)  Free-form text field for recording any relevant notes or comments regarding the specific milestone in the authority review process."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value data related to the milestone in the authority review process. This allows for storing various milestone-specific attributes without requiring schema alterations."
        },
        {
          "name": "application_type_id",
          "type": "TYPE_UNKNOWN",
          "description": "Foreign key referencing an application type.  The specific type referenced is currently unknown and requires further investigation.  This ID determines the type of application associated with a milestone in the authority review process."
        },
        {
          "name": "review_pathway_id",
          "type": "TYPE_UNKNOWN",
          "description": "Foreign key referencing a review pathway (the specific process or set of steps for review) associated with a milestone in the authority review process.  The exact type of this ID is currently unknown and requires further investigation."
        },
        {
          "name": "milestone_id)",
          "type": "TYPE_UNKNOWN",
          "description": "`milestone_id (TYPE_UNKNOWN)`:  The identifier for a specific milestone within an authority review process.  The exact data type is currently unknown and requires further investigation. This column likely relates to the `authority_review_process_milestones` table's primary key or a foreign key referencing a milestone definition table."
        }
      ]
    },
    {
      "table_name": "patents",
      "description": "The `patents` table stores information about patents, including identification details, legal status, key dates, applicant and assignee information, a snippet of the first claim, and metadata about the data source. Each patent record is uniquely identified by an `id` and includes the patent number, title, filing, issue, and expiration dates, patent type, jurisdiction, applicant and assignee names, the first claim text, current status, the last update date, the raw patent data, the type of source the data originated from, and an ID linking to the primary source record.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique, automatically incrementing integer serving as the primary key for each patent record in the `patents` table."
        },
        {
          "name": "patent_number",
          "type": "VARCHAR",
          "description": "The `patent_number` column in the `patents` table stores the unique alphanumeric identifier assigned to a patent as a string (VARCHAR)."
        },
        {
          "name": "title",
          "type": "TEXT",
          "description": "`title` (TEXT):  The title of the patent."
        },
        {
          "name": "filing_date",
          "type": "DATE",
          "description": "The `filing_date` column in the `patents` table stores the date a patent application was filed.  It is of type `DATE` and holds only the date portion (year, month, day), not time."
        },
        {
          "name": "issue_date",
          "type": "DATE",
          "description": "The `issue_date` column in the `patents` table stores the date a patent was officially issued.  Data type is DATE."
        },
        {
          "name": "expiration_date",
          "type": "DATE",
          "description": "The `expiration_date` column in the `patents` table stores the date on which a patent expires.  This is a `DATE` type field and therefore only stores the date (year, month, and day) with no time component."
        },
        {
          "name": "patent_type",
          "type": "VARCHAR",
          "description": "Classifies the type of patent (e.g., utility, design, plant)."
        },
        {
          "name": "jurisdiction",
          "type": "VARCHAR",
          "description": "The `jurisdiction` column in the `patents` table is a VARCHAR field that specifies the legal or geographical region where the patent is valid or has been granted.  This could be a country code (e.g., US, JP, EP), a regional patent office (e.g., EPO, ARIPO), or potentially a more granular jurisdiction within a country."
        },
        {
          "name": "applicant",
          "type": "VARCHAR",
          "description": "The `applicant` column in the `patents` table stores the name or identifier (VARCHAR) of the entity applying for the patent."
        },
        {
          "name": "assignee",
          "type": "VARCHAR",
          "description": "The `assignee` column in the `patents` table stores the name or identifier (VARCHAR) of the entity to whom the patent has been assigned. This could be an individual, a company, or another organization."
        },
        {
          "name": "first_claim",
          "type": "TEXT",
          "description": "`first_claim` (TEXT):  The text of the first claim in the patent. This claim typically defines the broadest scope of the invention being protected."
        },
        {
          "name": "status",
          "type": "VARCHAR",
          "description": "The `status` column in the `patents` table is a VARCHAR field indicating the current legal or administrative state of a patent, such as \"Pending,\" \"Granted,\" \"Rejected,\" \"Expired,\" or \"Abandoned.\""
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the most recent date and time when information for this patent was modified in the `patents` table."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible, unstructured patent data. This field allows for storing various patent attributes and related information in a schemaless format."
        },
        {
          "name": "source_type",
          "type": "VARCHAR",
          "description": "Classifies the origin or type of the patent source.  Examples could include \"granted patent\", \"patent application\", \"design patent\", \"plant patent\", etc."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source document (e.g., a publication, legal filing) associated with this patent."
        }
      ]
    },
    {
      "table_name": "patent_litigation",
      "description": "The `patent_litigation` table stores information about legal disputes related to patents. Each record represents a single litigation case and includes details such as the patent involved (`patent_id`), case details (`case_number`, `court`, `filing_date`), parties involved (`plaintiff`, `defendant`), current status (`status`), the final decision (`decision`, `decision_date`), settlement details (`settlement_terms`), data update information (`last_update_date`), additional data (`data`), and source information (`source_type`, `primary_source_id`). The `id` column serves as a unique identifier for each litigation record.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id`:  A unique, automatically incrementing integer that serves as the primary key for the `patent_litigation` table.  It identifies each individual record of patent litigation."
        },
        {
          "name": "patent_id",
          "type": "INTEGER",
          "description": "`patent_id` (INTEGER):  A unique identifier referencing a specific patent involved in the litigation recorded in the `patent_litigation` table.  This likely links to a separate `patents` table."
        },
        {
          "name": "case_number",
          "type": "VARCHAR",
          "description": "Unique identifier assigned to each patent litigation case.  Stored as a string to accommodate various formatting conventions."
        },
        {
          "name": "court",
          "type": "VARCHAR",
          "description": "`court`:  (VARCHAR)  Indicates the name or jurisdiction of the court where the patent litigation is being or was conducted (e.g., \"District Court for the Eastern District of Texas\", \"Supreme Court\")."
        },
        {
          "name": "filing_date",
          "type": "DATE",
          "description": "`filing_date` (DATE): The date a patent litigation case was filed in court."
        },
        {
          "name": "plaintiff",
          "type": "VARCHAR",
          "description": "The `plaintiff` column in the `patent_litigation` table stores the name of the party initiating the legal action (the plaintiff) as a string of variable length."
        },
        {
          "name": "defendant",
          "type": "VARCHAR",
          "description": "The `defendant` column in the `patent_litigation` table stores the name of the defendant (party being sued) in the patent litigation case as a string of variable length."
        },
        {
          "name": "status",
          "type": "VARCHAR",
          "description": "The `status` column in the `patent_litigation` table is a VARCHAR field indicating the current state of the litigation, such as \"Filed,\" \"Active,\" \"Settled,\" \"Dismissed,\" or \"Appealed.\""
        },
        {
          "name": "decision",
          "type": "VARCHAR",
          "description": "The `decision` column in the `patent_litigation` table stores a string representing the outcome of the litigation, such as \"Plaintiff wins,\" \"Defendant wins,\" \"Settlement,\" or \"Dismissed.\""
        },
        {
          "name": "decision_date",
          "type": "DATE",
          "description": "The `decision_date` column in the `patent_litigation` table stores the date on which a legal decision was reached in a patent litigation case.  It is of type `DATE` and thus records the year, month, and day of the decision."
        },
        {
          "name": "settlement_terms",
          "type": "JSONB",
          "description": "`settlement_terms` (JSONB): Stores details of the settlement agreement reached in a patent litigation case. This may include information like monetary compensation, licensing agreements, injunctions, and other relevant terms, stored as a flexible JSON object.  A null value indicates no settlement was reached."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the timestamp of the most recent update to the patent litigation information in this row."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column in the `patent_litigation` table containing flexible, unstructured data related to the litigation. This field can store various details not captured in other structured columns, allowing for extensible storage of information like specific claims, involved parties' roles,  court details, and other relevant metadata."
        },
        {
          "name": "source_type",
          "type": "VARCHAR",
          "description": "`source_type` (VARCHAR): Indicates the source of the patent litigation data, e.g., 'Court Filing', 'RPX', 'Docket Navigator', etc."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column in the `sources` table. Identifies the primary source document for the patent litigation record."
        }
      ]
    },
    {
      "table_name": "regimens",
      "description": "The `regimens` table stores information about medical treatment regimens. Each regimen is uniquely identified by an `id` and has a user-friendly `name` and a standardized `canonical_name`.  The table includes details such as the `primary_indication` for the regimen, its `regimen_type` (e.g., chemotherapy, immunotherapy), the `guideline_reference` and `guideline_category` it adheres to, its `administration_cycle`, `typical_duration`, and the `last_update_date`.  Additional data specific to the regimen is stored in a JSON field called `data`.  The `source_type` and `primary_source_id` indicate the origin of the regimen information.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique, auto-incrementing integer serving as the primary key for identifying individual regimens in the `regimens` table."
        },
        {
          "name": "name",
          "type": "VARCHAR",
          "description": "`name` (VARCHAR):  The name of the regimen (e.g., \"Strength Training\", \"Cardio Blast\", \"Flexibility Flow\")."
        },
        {
          "name": "canonical_name",
          "type": "VARCHAR",
          "description": "The `canonical_name` column in the `regimens` table stores a standardized, lowercase, alphanumeric-only (with underscores allowed) version of the regimen name.  This ensures consistent identification and querying of regimens, regardless of variations in casing or special characters in the original name."
        },
        {
          "name": "primary_indication",
          "type": "VARCHAR",
          "description": "Primary disease or condition that this treatment regimen is designed to address."
        },
        {
          "name": "regimen_type",
          "type": "VARCHAR",
          "description": "`regimen_type` (VARCHAR):  Categorizes the type of regimen, e.g., \"fitness,\" \"diet,\" \"medication,\" \"therapy.\""
        },
        {
          "name": "guideline_reference",
          "type": "VARCHAR",
          "description": "`guideline_reference` (VARCHAR):  Stores a textual reference to external guidelines relevant to the regimen. This could be a URL, a document name, or a specific section within a guideline."
        },
        {
          "name": "guideline_category",
          "type": "VARCHAR",
          "description": "Categorizes the guideline followed by the regimen (e.g., \"National\", \"International\", \"Local\", \"Custom\")."
        },
        {
          "name": "administration_cycle",
          "type": "VARCHAR",
          "description": "The `administration_cycle` column in the `regimens` table is a string (VARCHAR) that defines the repeating time period over which a regimen is administered.  This could represent values like \"daily\", \"weekly\", \"monthly\", \"bi-weekly\", or more complex cycles."
        },
        {
          "name": "typical_duration",
          "type": "VARCHAR",
          "description": "Typical duration of the regimen (e.g., \"2 weeks\", \"3 months\", \"as needed\").  Stored as a string for flexibility in representation."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time when the regimen was last modified."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible, schema-less data related to the regimen. This allows for storing various attributes and settings associated with each regimen without requiring predefined table columns."
        },
        {
          "name": "source_type",
          "type": "VARCHAR",
          "description": "`source_type` (VARCHAR):  Indicates the origin or type of the regimen.  Examples could include 'physician prescribed', 'patient created', 'system generated', etc."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source (e.g., a publication, clinical trial) describing the regimen."
        }
      ]
    },
    {
      "table_name": "regimen_components",
      "description": "The `regimen_components` table details the individual components that constitute a specific treatment regimen. Each record represents a single component, which can be a drug, a drug combination, or another type of element, and links to its parent regimen via `regimen_id`.  The table captures essential information such as the component type, associated drug or combination ID, administration timing, dosing instructions, order within the regimen, optionality, notes, associated data, and the primary source of the information.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique auto-incrementing integer serving as the primary key for identifying individual regimen components within the `regimen_components` table."
        },
        {
          "name": "regimen_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `regimens` table.  Identifies the specific regimen to which the component belongs."
        },
        {
          "name": "component_type",
          "type": "VARCHAR",
          "description": "Classifies the type of component within a regimen (e.g., 'medication', 'lifestyle modification', 'therapy')."
        },
        {
          "name": "drug_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'drugs' table, uniquely identifying the drug included in this component of the treatment regimen."
        },
        {
          "name": "combination_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a unique combination of drugs/treatments within the `combinations` table.  Identifies which specific combination a component belongs to."
        },
        {
          "name": "administration_timing",
          "type": "VARCHAR",
          "description": "`administration_timing` (VARCHAR):  Specifies when a component of a regimen should be administered (e.g., \"before breakfast\", \"at bedtime\", \"twice daily\")."
        },
        {
          "name": "dosing_instructions",
          "type": "TEXT",
          "description": "dosing_instructions (TEXT):  Specific instructions on how to administer the regimen component. This may include frequency, dosage amount, route of administration, and any special considerations."
        },
        {
          "name": "sequence_order",
          "type": "INTEGER",
          "description": "`sequence_order` (INTEGER):  Defines the order in which components within a regimen should be applied or administered."
        },
        {
          "name": "is_optional",
          "type": "BOOLEAN",
          "description": "Indicates whether the associated regimen component is optional (TRUE) or required (FALSE)."
        },
        {
          "name": "notes",
          "type": "TEXT",
          "description": "Additional notes or information regarding the regimen component. Can contain free-form text."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`: A JSONB column storing flexible key-value data related to the regimen component. This allows for storing various attributes and settings specific to each component without requiring schema changes."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the primary source (e.g., publication, clinical trial) that provides evidence for the inclusion of this component in the regimen.  Relates to a table containing source details."
        }
      ]
    },
    {
      "table_name": "regimen_efficacy_comparisons",
      "description": "The `regimen_efficacy_comparisons` table stores comparisons of the efficacy of different treatment regimens for specific diseases.  It records the primary and comparator regimens, the disease, the type of comparison, the efficacy metric being compared (e.g., survival rate, response rate), the efficacy values for each regimen, the difference in efficacy, and the statistical significance of that difference.  Source information, comparison methodology, and update timestamps are also tracked.  The table facilitates analysis of the relative effectiveness of various treatment strategies.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id`:  A unique serial number automatically generated for each regimen efficacy comparison record in the `regimen_efficacy_comparisons` table. Serves as the primary key."
        },
        {
          "name": "primary_regimen_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'regimen' table.  Identifies the primary treatment regimen being compared in the efficacy comparison."
        },
        {
          "name": "comparator_regimen_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `regimen_id` column in the `regimens` table.  Identifies the comparator (control or standard of care) regimen used in the efficacy comparison recorded in this row."
        },
        {
          "name": "disease_id",
          "type": "INTEGER",
          "description": "Unique integer identifier for a specific disease.  Used to link regimen efficacy comparisons to the disease they are evaluating. Foreign key referencing the 'diseases' table."
        },
        {
          "name": "comparison_type",
          "type": "VARCHAR",
          "description": "Specifies the type of comparison being made between regimens, e.g., \"non-inferiority\", \"superiority\", \"equivalence\"."
        },
        {
          "name": "efficacy_metric",
          "type": "VARCHAR",
          "description": "The `efficacy_metric` column (VARCHAR) in the `regimen_efficacy_comparisons` table stores the name of the specific metric used to compare the efficacy of different treatment regimens.  Examples include \"survival rate\", \"progression-free survival\", \"overall response rate\", or \"time to remission\"."
        },
        {
          "name": "primary_value",
          "type": "NUMERIC",
          "description": "The `primary_value` column in the `regimen_efficacy_comparisons` table stores the main numeric result of a comparison between two or more treatment regimens.  This could represent a metric such as percentage difference, fold change, or a p-value, depending on the specific comparison being performed."
        },
        {
          "name": "comparator_value",
          "type": "NUMERIC",
          "description": "The `comparator_value` column in the `regimen_efficacy_comparisons` table stores the numeric value used for comparison against a target regimen's efficacy. This value could represent various metrics, such as percentage reduction in viral load, disease progression rate, or other relevant quantitative measures."
        },
        {
          "name": "difference_value",
          "type": "NUMERIC",
          "description": "`difference_value` (NUMERIC):  The numerical difference in a specific metric (e.g., symptom reduction, blood pressure change) between two compared regimens in a regimen efficacy comparison."
        },
        {
          "name": "statistical_significance",
          "type": "VARCHAR",
          "description": "Indicates the statistical significance of the difference in efficacy between two regimens being compared.  Possible values may include notations like 'p<0.05', 'p<0.01', 'p>0.05', 'NS' (not significant), or other representations of p-values or significance levels."
        },
        {
          "name": "data_source_type",
          "type": "VARCHAR",
          "description": "Identifies the source of the efficacy data used in the regimen comparison.  This could be values like 'Clinical Trial', 'Meta-Analysis', 'Observational Study', etc."
        },
        {
          "name": "source_study_id",
          "type": "VARCHAR",
          "description": "`source_study_id` (VARCHAR):  Identifies the original study from which the regimen efficacy comparison data was sourced.  This allows tracing back to the primary research for verification and context."
        },
        {
          "name": "is_direct_comparison",
          "type": "BOOLEAN",
          "description": "Indicates whether the comparison of regimen efficacy is a direct (head-to-head) comparison (TRUE) or an indirect comparison (e.g., via a common comparator) (FALSE)."
        },
        {
          "name": "comparison_methodology",
          "type": "TEXT",
          "description": "The `comparison_methodology` column (TEXT) in the `regimen_efficacy_comparisons` table describes the methodology used to compare the efficacy of different treatment regimens. This might include details on statistical tests, control groups,  endpoints measured, and other relevant information about the comparison process."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time when the efficacy comparison data in this row of the `regimen_efficacy_comparisons` table was last modified."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value pairs related to the comparison of regimen efficacies. This allows for storing various metrics, statistics, and other relevant data points without needing a fixed schema."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the primary source (e.g., publication, clinical trial ID) used for the efficacy comparison data in this row."
        },
        {
          "name": "comparator_regimen_id",
          "type": "TYPE_UNKNOWN",
          "description": "Foreign key referencing a regimen in a related table (likely 'regimens'). Identifies the comparator regimen used in the efficacy comparison recorded in this row of 'regimen_efficacy_comparisons'.  The specific type is currently unknown but should be resolved to a valid database type (e.g., integer)."
        },
        {
          "name": "disease_id",
          "type": "TYPE_UNKNOWN",
          "description": "`disease_id` (TYPE_UNKNOWN):  Identifier for the disease relevant to the regimen efficacy comparison.  The specific meaning and format of this ID are currently unknown and require further investigation."
        },
        {
          "name": "efficacy_metric)",
          "type": "TYPE_UNKNOWN",
          "description": "`efficacy_metric` (TYPE_UNKNOWN): The specific metric used to compare the efficacy of different regimens.  The type of data stored here is currently unknown and requires further investigation.  This column likely contains values like \"survival rate,\" \"progression-free survival,\" \"tumor response rate,\" etc."
        }
      ]
    },
    {
      "table_name": "regimen_safety_comparisons",
      "description": "The `regimen_safety_comparisons` table stores comparisons of safety profiles between two treatment regimens for a specific disease. It includes incidence rates, relative risk, hazard ratio, statistical significance, and information about the comparison methodology and data source.  Clinical relevance and data details are also captured, allowing for in-depth analysis of safety differences between treatments.  The table is updated regularly to reflect the latest evidence.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each regimen safety comparison record. Automatically increments on insertion. Serves as the primary key for the `regimen_safety_comparisons` table."
        },
        {
          "name": "primary_regimen_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column of the 'regimens' table.  Identifies the primary regimen being compared in a safety analysis."
        },
        {
          "name": "comparator_regimen_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `regimen_id` column in the `regimens` table.  Identifies the regimen being used as the comparator (control) in a safety comparison."
        },
        {
          "name": "disease_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific disease.  This foreign key references the 'diseases' table."
        },
        {
          "name": "safety_parameter",
          "type": "VARCHAR",
          "description": "`safety_parameter`:  (VARCHAR)  Name of the safety parameter being compared between regimens (e.g., \"Neutropenia\", \"Febrile Neutropenia\", \"Cardiotoxicity\")."
        },
        {
          "name": "parameter_category",
          "type": "VARCHAR",
          "description": "Categorization of the parameter used in the safety comparison within a regimen.  (VARCHAR)"
        },
        {
          "name": "severity_grade",
          "type": "VARCHAR",
          "description": "Severity grade of adverse events observed in the compared regimens.  Stored as a string representing the severity level (e.g., \"Mild\", \"Moderate\", \"Severe\")."
        },
        {
          "name": "primary_incidence_percentage",
          "type": "NUMERIC",
          "description": "`primary_incidence_percentage` (NUMERIC):  Represents the percentage of patients experiencing the primary incidence (e.g., a specific adverse event) within a given treatment regimen.  This data is used for safety comparisons between different regimens in the `regimen_safety_comparisons` table."
        },
        {
          "name": "comparator_incidence_percentage",
          "type": "NUMERIC",
          "description": "The `comparator_incidence_percentage` column in the `regimen_safety_comparisons` table stores the percentage of patients in the comparator group who experienced a specific safety event.  This numeric value represents the incidence rate relative to the comparator group size and is used for comparison against the incidence rate of the primary regimen."
        },
        {
          "name": "relative_risk",
          "type": "NUMERIC",
          "description": "`relative_risk` (NUMERIC):  The calculated relative risk comparing the safety outcome of one regimen to another in the `regimen_safety_comparisons` table.  A value of 1 indicates no difference in risk, a value > 1 indicates increased risk for the compared regimen, and a value < 1 indicates decreased risk."
        },
        {
          "name": "hazard_ratio",
          "type": "NUMERIC",
          "description": "The `hazard_ratio` column in the `regimen_safety_comparisons` table stores the calculated hazard ratio as a NUMERIC value. This represents the relative risk of an event (e.g., adverse reaction, disease progression) occurring in one treatment regimen compared to another.  A hazard ratio of 1 indicates no difference in risk between the regimens, a value less than 1 suggests a lower risk for the first regimen, and a value greater than 1 suggests a higher risk."
        },
        {
          "name": "statistical_significance",
          "type": "VARCHAR",
          "description": "Indicates the statistical significance of the difference in safety outcomes between the compared regimens.  Possible values may include notations like 'p<0.05', 'p<0.01', 'p>0.05', 'NS' (not significant), or a specific p-value."
        },
        {
          "name": "is_direct_comparison",
          "type": "BOOLEAN",
          "description": "Indicates whether the safety comparison between two regimens is a direct comparison (TRUE) or an indirect comparison (FALSE)."
        },
        {
          "name": "comparison_methodology",
          "type": "TEXT",
          "description": "This column, `comparison_methodology` (TEXT), in the `regimen_safety_comparisons` table describes the methodology used to compare the safety profiles of different treatment regimens. This may include details on statistical tests employed, specific safety endpoints considered, patient populations compared, and any adjustments made for confounding factors."
        },
        {
          "name": "data_source_type",
          "type": "VARCHAR",
          "description": "Identifies the source type from which the regimen safety comparison data was derived (e.g., 'Clinical Trial', 'Observational Study', 'Meta-Analysis', 'Literature Review')."
        },
        {
          "name": "source_study_id",
          "type": "VARCHAR",
          "description": "`source_study_id` (VARCHAR):  Identifier for the original study from which the regimen safety comparison data is derived.  This allows tracing the comparison back to its source."
        },
        {
          "name": "clinical_relevance_assessment",
          "type": "TEXT",
          "description": "Clinical relevance assessment of the safety comparison between regimens. This field provides a textual description summarizing the clinical implications of observed differences in safety profiles."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the timestamp of the most recent modification to the regimen safety comparison data in this row."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing structured data related to safety comparisons between different regimens. This field allows for flexible storage of various safety metrics and related information."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source document used for the safety comparison data in this regimen comparison record."
        },
        {
          "name": "comparator_regimen_id",
          "type": "TYPE_UNKNOWN",
          "description": "Foreign key referencing a regimen in a related table (exact table unknown due to 'TYPE_UNKNOWN' type).  This ID represents the comparator regimen used in safety comparisons recorded in the `regimen_safety_comparisons` table."
        },
        {
          "name": "disease_id",
          "type": "TYPE_UNKNOWN",
          "description": "`disease_id` (TYPE_UNKNOWN):  Identifier for the disease relevant to the regimen safety comparisons recorded in this table.  The specific format of this identifier is currently unknown and requires further investigation."
        },
        {
          "name": "safety_parameter",
          "type": "TYPE_UNKNOWN",
          "description": "`safety_parameter` (TYPE_UNKNOWN):  The specific safety measurement being compared between regimens. The data type is currently unknown and requires further investigation. This column likely stores different types of safety data, potentially requiring a refactor for improved data management."
        },
        {
          "name": "parameter_category",
          "type": "TYPE_UNKNOWN",
          "description": "Categorization of the parameter used in the regimen safety comparison.  The specific meaning of this category is currently undefined (TYPE_UNKNOWN) and requires further investigation."
        },
        {
          "name": "severity_grade)",
          "type": "TYPE_UNKNOWN",
          "description": "severity_grade (TYPE_UNKNOWN):  Indicates the level of severity for a safety event observed in the regimen comparison.  The specific meaning of the values in this column is currently unknown and requires further investigation."
        }
      ]
    },
    {
      "table_name": "combination_efficacy_comparisons",
      "description": "The `combination_efficacy_comparisons` table stores efficacy comparisons between two drug combinations for a specific disease. It holds data on the compared combinations, the efficacy metric used, their respective values, the calculated difference, statistical significance of the comparison, the source of the data, whether it's a direct comparison, the methodology used for comparison, and the last update date.  Additional data relevant to the comparison can be stored in a JSON field.  Each comparison is uniquely identified by its `id`.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id`:  A unique, auto-incrementing integer serving as the primary key for the `combination_efficacy_comparisons` table.  It uniquely identifies each comparison record."
        },
        {
          "name": "primary_combination_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `combination_id` (INTEGER) primary key in the `drug_combinations` table.  Identifies the primary drug combination being compared in an efficacy analysis recorded in the `combination_efficacy_comparisons` table."
        },
        {
          "name": "comparator_combination_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a unique combination of comparators (e.g., drug A vs. drug B) stored in a separate table.  Used to link comparison results in this table to the specific comparators being evaluated."
        },
        {
          "name": "disease_id",
          "type": "INTEGER",
          "description": "`disease_id` (INTEGER):  A foreign key referencing the unique identifier of a disease in the 'diseases' table.  This column links each combination efficacy comparison record to the specific disease it pertains to."
        },
        {
          "name": "comparison_type",
          "type": "VARCHAR",
          "description": "Specifies the type of comparison being performed between combination therapies, e.g., \"superiority\", \"non-inferiority\", \"equivalence\"."
        },
        {
          "name": "efficacy_metric",
          "type": "VARCHAR",
          "description": "Stores the specific efficacy metric used in the comparison (e.g., \"AUC\", \"IC50\", \"Percent Inhibition\", \"Survival Rate\")."
        },
        {
          "name": "primary_value",
          "type": "NUMERIC",
          "description": "The `primary_value` column in the `combination_efficacy_comparisons` table stores the main numeric result of an efficacy comparison between different combinations (e.g., drug combinations, treatment combinations).  This could represent a measurement like percentage improvement, difference in mean values, or other relevant metric quantifying the comparison's primary outcome."
        },
        {
          "name": "comparator_value",
          "type": "NUMERIC",
          "description": "The `comparator_value` column in the `combination_efficacy_comparisons` table stores the numeric value used as a benchmark or reference point for comparing the efficacy of different combinations. This could represent metrics like control group performance, a pre-defined threshold, or the efficacy of a standard treatment."
        },
        {
          "name": "difference_value",
          "type": "NUMERIC",
          "description": "`difference_value` (NUMERIC):  The numerical difference in efficacy between two compared combinations, as calculated within the `combination_efficacy_comparisons` table. This value can be positive or negative, indicating which combination performed better."
        },
        {
          "name": "statistical_significance",
          "type": "VARCHAR",
          "description": "Indicates the statistical significance of the difference in efficacy between two combinations, typically represented as a p-value range (e.g., 'p<0.05', 'p>0.05', 'p=0.01') or a descriptive term (e.g., 'significant', 'not significant')."
        },
        {
          "name": "data_source_type",
          "type": "VARCHAR",
          "description": "Identifies the source of the efficacy data used in the combination comparison, e.g., 'clinical trial', 'preclinical study', 'literature review'."
        },
        {
          "name": "source_study_id",
          "type": "VARCHAR",
          "description": "`source_study_id` (VARCHAR):  Identifier for the original study from which the combination efficacy comparison data is derived."
        },
        {
          "name": "is_direct_comparison",
          "type": "BOOLEAN",
          "description": "Indicates whether the efficacy comparison between two combinations is a direct comparison (TRUE) based on a head-to-head clinical trial, or an indirect comparison (FALSE) derived from comparisons against a common comparator."
        },
        {
          "name": "comparison_methodology",
          "type": "TEXT",
          "description": "The `comparison_methodology` column (TEXT) in the `combination_efficacy_comparisons` table describes the method used to compare the efficacy of different combinations. This might include statistical tests, head-to-head trials, meta-analyses, or other comparative approaches."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time when the data in this row of the `combination_efficacy_comparisons` table was last modified."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing additional data related to the efficacy comparison between different combinations. This flexible field can hold various information specific to the comparison, such as experimental parameters, statistical results, or other relevant details."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source document (e.g., research paper, clinical trial report) used as the basis for the combination efficacy comparison data stored in this row."
        },
        {
          "name": "comparator_combination_id",
          "type": "TYPE_UNKNOWN",
          "description": "`comparator_combination_id` (TYPE_UNKNOWN):  A unique identifier representing a specific drug combination used as a comparator in efficacy comparisons recorded in the `combination_efficacy_comparisons` table.  The exact nature of this identifier is currently unknown and requires further investigation."
        },
        {
          "name": "disease_id",
          "type": "TYPE_UNKNOWN",
          "description": "`disease_id` (TYPE_UNKNOWN):  Identifier for the disease involved in the combination efficacy comparison.  Further investigation is needed to determine the specific data type and meaning of this ID."
        },
        {
          "name": "efficacy_metric)",
          "type": "TYPE_UNKNOWN",
          "description": "`efficacy_metric` (TYPE_UNKNOWN):  The specific metric used to measure the efficacy of the combinations being compared in this table. The exact nature of this metric is currently undefined.  Further investigation is needed to determine the appropriate data type."
        }
      ]
    },
    {
      "table_name": "combination_safety_comparisons",
      "description": "The `combination_safety_comparisons` table stores safety comparisons between two drug combinations for a specific disease and safety parameter. It includes incidence rates, relative risk, hazard ratio, statistical significance, comparison methodology, data source, and clinical relevance assessment.  The table differentiates between direct and indirect comparisons and tracks data provenance with source study IDs and primary source IDs.  Each comparison is uniquely identified by `id` and linked to the compared combinations (`primary_combination_id`, `comparator_combination_id`), the disease (`disease_id`), and the specific safety parameter being evaluated.  Redundant columns (comparator_combination_id, disease_id, safety_parameter, parameter_category, severity_grade) should be removed.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id`:  A unique serial number automatically generated for each combination safety comparison record in the `combination_safety_comparisons` table. Serves as the primary key."
        },
        {
          "name": "primary_combination_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `combination_id` column in the `combinations` table.  Represents the primary drug combination being evaluated in a safety comparison."
        },
        {
          "name": "comparator_combination_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a unique combination of comparators in the `comparator_combinations` table. Used to link safety comparison results to a specific set of comparators."
        },
        {
          "name": "disease_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific disease.  Foreign key referencing the 'diseases' table."
        },
        {
          "name": "safety_parameter",
          "type": "VARCHAR",
          "description": "`safety_parameter`:  A string representing the specific safety aspect being compared (e.g., \"flammability\", \"toxicity\", \"corrosiveness\") for the combination of materials in this record."
        },
        {
          "name": "parameter_category",
          "type": "VARCHAR",
          "description": "Categorizes the parameter used in the combination safety comparison, e.g., 'efficacy', 'toxicity', 'adverse event'."
        },
        {
          "name": "severity_grade",
          "type": "VARCHAR",
          "description": "Severity grade of the combination safety comparison, categorized as a string.  This might represent levels like \"Mild\", \"Moderate\", \"Severe\", etc."
        },
        {
          "name": "primary_incidence_percentage",
          "type": "NUMERIC",
          "description": "`primary_incidence_percentage` (NUMERIC):  Represents the percentage of patients in a specific combination group who experienced the primary adverse event/incidence of interest. This column, within the `combination_safety_comparisons` table, facilitates comparison of safety profiles between different treatment combinations."
        },
        {
          "name": "comparator_incidence_percentage",
          "type": "NUMERIC",
          "description": "`comparator_incidence_percentage` (NUMERIC):  The percentage of patients in the comparator group who experienced the specific adverse event being compared.  This value is used in combination safety comparisons within the `combination_safety_comparisons` table."
        },
        {
          "name": "relative_risk",
          "type": "NUMERIC",
          "description": "`relative_risk` (NUMERIC):  A numerical value representing the relative risk of an adverse event occurring in one group compared to another, calculated within the context of a specific combination of drugs or treatments being compared in the `combination_safety_comparisons` table.  A value of 1 indicates equal risk, a value greater than 1 indicates increased risk, and a value less than 1 indicates decreased risk."
        },
        {
          "name": "hazard_ratio",
          "type": "NUMERIC",
          "description": "The `hazard_ratio` column in the `combination_safety_comparisons` table stores the calculated hazard ratio as a NUMERIC value. This represents the relative risk of an event occurring in one group compared to another group, typically in the context of comparing the safety profiles of different drug combinations.  A hazard ratio of 1 indicates no difference in risk between the groups, a value less than 1 indicates a reduced risk, and a value greater than 1 indicates an increased risk."
        },
        {
          "name": "statistical_significance",
          "type": "VARCHAR",
          "description": "Indicates the statistical significance of the safety comparison between two drug combinations, typically represented as a p-value range (e.g., '<0.001', '0.001-0.05', '>0.05', 'Not Calculated')."
        },
        {
          "name": "is_direct_comparison",
          "type": "BOOLEAN",
          "description": "Indicates whether the safety comparison between two combinations is a direct comparison (TRUE) or an indirect comparison (FALSE).  A direct comparison means both combinations were evaluated in the same study."
        },
        {
          "name": "comparison_methodology",
          "type": "TEXT",
          "description": "The `comparison_methodology` column in the `combination_safety_comparisons` table stores a textual description of the methodology used to compare the safety of different drug combinations. This might include details about the statistical tests employed, the data sources used, any specific criteria or thresholds applied, and other relevant information about the comparison process."
        },
        {
          "name": "data_source_type",
          "type": "VARCHAR",
          "description": "Identifies the source of the safety data used in the combination safety comparison.  Examples might include 'Clinical Trial', 'Spontaneous Report', or 'Preclinical Study'."
        },
        {
          "name": "source_study_id",
          "type": "VARCHAR",
          "description": "`source_study_id` (VARCHAR):  Identifier for the original study from which the combination safety comparison data is derived."
        },
        {
          "name": "clinical_relevance_assessment",
          "type": "TEXT",
          "description": "Clinical relevance assessment of the observed difference in safety outcomes between the compared drug combinations.  This field may contain free-text descriptions of factors such as the magnitude of the difference, the severity of the outcomes, and implications for clinical practice."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time of the most recent update to the combination safety comparison data in this row."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing structured data related to the combination safety comparison. This can include various details about the comparison, allowing for flexible storage and querying of related information."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source document used for the safety comparison data in this combination record."
        },
        {
          "name": "comparator_combination_id",
          "type": "TYPE_UNKNOWN",
          "description": "A system-generated identifier (TYPE_UNKNOWN) representing a specific combination of comparators used in a safety comparison analysis within the `combination_safety_comparisons` table.  This ID likely links to details about the specific comparators involved in the combination."
        },
        {
          "name": "disease_id",
          "type": "TYPE_UNKNOWN",
          "description": "`disease_id` (TYPE_UNKNOWN):  Identifier for the disease being considered in the combination safety comparison.  The specific meaning and format of this ID are currently unknown and require further investigation."
        },
        {
          "name": "safety_parameter",
          "type": "TYPE_UNKNOWN",
          "description": "`safety_parameter` (TYPE_UNKNOWN): The specific safety aspect being compared in this combination.  Further details about the nature and units of this parameter are currently unavailable (TYPE_UNKNOWN).  Investigation is needed to determine the correct data type and meaning."
        },
        {
          "name": "parameter_category",
          "type": "TYPE_UNKNOWN",
          "description": "Categorization of the parameter used in the combination safety comparison.  The specific meaning of the categories is currently unknown and requires further investigation."
        },
        {
          "name": "severity_grade)",
          "type": "TYPE_UNKNOWN",
          "description": "`severity_grade` (TYPE_UNKNOWN) -  Indicates the severity level of a safety concern identified in the combination comparison.  The specific meaning and values of this field are currently unknown and require further investigation.  This column is part of the `combination_safety_comparisons` table."
        }
      ]
    },
    {
      "table_name": "standard_of_care",
      "description": "The `standard_of_care` table stores information about recommended treatment regimens (standards of care) for specific diseases within different geographical regions.  It links to disease, geography, and regimen information via IDs.  Each record specifies the line of therapy, patient segment, effective date range, guideline source and version, preference level among available regimens, strength of the recommendation, additional notes, and the last update date. The `data` column likely stores more complex structured data about the standard of care.  A `primary_source_id` links the record back to its original source.  Note: `geography_id`, `line_of_therapy`, `patient_segment`, and `effective_from` appear to be duplicated column names and should likely be reviewed and corrected.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique, auto-incrementing integer serving as the primary key for the `standard_of_care` table.  This `SERIAL` type automatically generates the next sequential integer value upon insertion of a new row."
        },
        {
          "name": "disease_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific disease.  Foreign key referencing the `diseases` table."
        },
        {
          "name": "geography_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a geographical area (e.g., country, region, state) in a related 'geography' table.  Identifies the geographic location relevant to the standard of care record."
        },
        {
          "name": "regimen_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column of the 'regimens' table.  Identifies the specific treatment regimen associated with this standard of care."
        },
        {
          "name": "line_of_therapy",
          "type": "VARCHAR",
          "description": "Indicates the line of therapy (e.g., 1st, 2nd, 3rd, etc.) for a specific treatment within a standard of care.  Stored as text."
        },
        {
          "name": "patient_segment",
          "type": "VARCHAR",
          "description": "Patient segment classification (e.g., pediatric, adult, geriatric, etc.) for determining the appropriate standard of care."
        },
        {
          "name": "effective_from",
          "type": "DATE",
          "description": "The `effective_from` column of type `DATE` in the `standard_of_care` table specifies the date when a particular standard of care becomes active or applicable."
        },
        {
          "name": "effective_until",
          "type": "DATE",
          "description": "The `effective_until` column of type `DATE` in the `standard_of_care` table specifies the date until which a particular standard of care is considered valid or in effect.  A NULL value indicates the standard is currently active and has no defined end date."
        },
        {
          "name": "guideline_source",
          "type": "VARCHAR",
          "description": "`guideline_source`:  VARCHAR. Identifies the source or origin of the clinical practice guideline referenced in the standard of care.  This could be the name of a professional organization (e.g., \"American Heart Association\"), a specific publication (e.g., \"Journal of the American Medical Association\"), or a URL."
        },
        {
          "name": "guideline_version",
          "type": "VARCHAR",
          "description": "`guideline_version` (VARCHAR): Stores the version number or identifier for the specific guideline referenced in this standard of care.  This allows tracking of changes and updates to guidelines over time."
        },
        {
          "name": "preference_level",
          "type": "VARCHAR",
          "description": "Indicates the preferred level of care for a given standard, such as \"Primary\", \"Secondary\", \"Tertiary\", or \"Optional\".  Stored as text."
        },
        {
          "name": "recommendation_strength",
          "type": "VARCHAR",
          "description": "`recommendation_strength`:  (VARCHAR) Indicates the strength of the recommendation for a given standard of care.  Possible values may include \"strong,\" \"moderate,\" \"weak,\" or \"conditional.\""
        },
        {
          "name": "notes",
          "type": "TEXT",
          "description": "`notes`:  (TEXT) Free-form text field for recording miscellaneous notes or observations related to the standard of care."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time of the most recent modification to the corresponding Standard of Care entry in the `standard_of_care` table."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data` (JSONB):  Stores structured data related to a specific standard of care, allowing for flexible storage of various attributes and values."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `primary_sources` table.  Indicates the primary source document or record that defines the specific standard of care."
        },
        {
          "name": "geography_id",
          "type": "TYPE_UNKNOWN",
          "description": "`geography_id` (TYPE_UNKNOWN):  A unique identifier related to a geographic area relevant to the standard of care.  Further investigation is needed to determine the specific type and meaning of this ID."
        },
        {
          "name": "line_of_therapy",
          "type": "TYPE_UNKNOWN",
          "description": "`line_of_therapy` (TYPE_UNKNOWN):  Indicates the treatment line or sequence for a given standard of care.  Further investigation is needed to determine the specific data type and allowed values for this column."
        },
        {
          "name": "patient_segment",
          "type": "TYPE_UNKNOWN",
          "description": "`patient_segment` (TYPE_UNKNOWN):  Indicates the patient segment classification.  Further details on the specific categories and meaning of this field are currently unavailable (TYPE_UNKNOWN).  Investigation is needed to determine the proper data type and allowed values."
        },
        {
          "name": "effective_from)",
          "type": "TYPE_UNKNOWN",
          "description": "`effective_from` (TYPE_UNKNOWN) in the `standard_of_care` table indicates the date or point in time when a specific standard of care becomes active or applicable.  The exact data type is currently unknown and requires further investigation."
        }
      ]
    },
    {
      "table_name": "drug_brands",
      "description": "The `drug_brands` table stores information about specific drug brands, linking them to their generic drug, manufacturing company, geographical market, regulatory approvals, potential drug combinations, and data source.  It includes details such as the brand name, status, relevant data, and the last update date.  Note: `brand_name` and `geography_id` appear to be duplicated in the provided column list. This redundancy should likely be removed.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique serial identifier automatically generated for each drug brand record in the `drug_brands` table. Serves as the primary key."
        },
        {
          "name": "drug_id",
          "type": "INTEGER",
          "description": "`drug_id` (INTEGER):  A unique identifier referencing a specific drug entry in the 'drugs' table.  This links a brand name to its corresponding drug information."
        },
        {
          "name": "brand_name",
          "type": "VARCHAR",
          "description": "`brand_name` (VARCHAR):  The commercial or trade name under which a specific drug is marketed.  This differentiates drugs with the same active ingredient produced by different manufacturers."
        },
        {
          "name": "company_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `companies` table.  Identifies the company that manufactures or distributes the drug brand."
        },
        {
          "name": "geography_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a geographical location (e.g., country, region, state) in a 'geography' table.  Identifies the geographic area associated with the drug brand."
        },
        {
          "name": "regulatory_approval_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `regulatory_approvals` table.  Stores the ID of the regulatory approval associated with this drug brand."
        },
        {
          "name": "combination_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific combination of drugs present in a drug brand.  Foreign key referencing a 'drug_combinations' table."
        },
        {
          "name": "status",
          "type": "VARCHAR",
          "description": "The `status` column in the `drug_brands` table is a VARCHAR field indicating the current market authorization status of a drug brand.  This could include values like 'Approved', 'Pending', 'Suspended', 'Withdrawn', or 'Rejected'."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing additional, flexible information about the drug brand.  This may include details like alternative names, manufacturer specifics, country-specific regulations, or other relevant data not captured in structured columns."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time of the most recent modification to the drug brand information in this row."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column in the `sources` table.  Indicates the primary source of information for this drug brand."
        },
        {
          "name": "brand_name",
          "type": "TYPE_UNKNOWN",
          "description": "`brand_name` (TYPE_UNKNOWN): The commercial name under which a drug is marketed.  Data type is currently unknown and requires further investigation."
        },
        {
          "name": "geography_id)",
          "type": "TYPE_UNKNOWN",
          "description": "`geography_id (TYPE_UNKNOWN)` in the `drug_brands` table likely identifies a geographical region relevant to the drug brand.  The specific meaning of the ID and its format are unknown and require further investigation. It could represent a country, region, sales territory, or other geographical entity."
        }
      ]
    },
    {
      "table_name": "brand_formulations",
      "description": "The `brand_formulations` table stores information about specific formulations associated with different brands. It links brands and formulations, specifying packaging details, retail and hospital package sizes, NDC code, additional data, primary source of the information, and includes a unique identifier for each brand-formulation combination.  Note: the `formulation_id` column appears to be listed twice, which might be unintentional.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique, auto-incrementing integer that serves as the primary key for identifying each brand formulation record in the `brand_formulations` table."
        },
        {
          "name": "brand_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `brands` table.  Identifies the brand associated with a specific formulation."
        },
        {
          "name": "formulation_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific formulation within the `brand_formulations` table.  Foreign key referencing a formulation record (likely in a `formulations` table)."
        },
        {
          "name": "packaging",
          "type": "VARCHAR",
          "description": "Stores the type of packaging used for the brand formulation (e.g., bottle, tube, jar, sachet)."
        },
        {
          "name": "retail_package_size",
          "type": "VARCHAR",
          "description": "Retail package size for the brand formulation (e.g., \"12 oz\", \"1 gallon\", \"50 count\")."
        },
        {
          "name": "hospital_package_size",
          "type": "VARCHAR",
          "description": "The `hospital_package_size` column in the `brand_formulations` table stores a string representation of the size or quantity of a brand's drug formulation specifically packaged for hospital use (e.g., \"1000mg vials, box of 10\", \"500ml bag\",  \"20 unit dose blister pack\")."
        },
        {
          "name": "ndc_code",
          "type": "VARCHAR",
          "description": "National Drug Code (NDC) representing the specific drug product formulation for this brand."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible, schema-less data related to brand formulations. This can include various attributes, ingredients, processes, or other relevant information in a structured JSON format.  Using JSONB allows for efficient querying and indexing of the data within the JSON structure."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `primary_sources` table.  Identifies the primary source document or record for this brand formulation."
        },
        {
          "name": "formulation_id)",
          "type": "TYPE_UNKNOWN",
          "description": "`formulation_id (TYPE_UNKNOWN)`:  A unique identifier for a specific product formulation within the `brand_formulations` table. The exact data type is currently unknown and requires further investigation.  This ID links to details about the formulation's composition."
        }
      ]
    },
    {
      "table_name": "brand_company_relationships",
      "description": "The `brand_company_relationships` table tracks relationships between brands and companies, including the type of relationship (e.g., licensing, distribution), geographical scope, exclusivity, duration, and key responsibilities.  It also stores details about the agreement, such as the deal ID and rights granted, along with data provenance information like the primary source and last update date.  The `is_current` flag indicates active relationships. Note: there appear to be duplicate column names (company_id, geography_id, relationship_type, start_date) which may require review and correction.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each relationship between a brand and a company.  Automatically increments. Serves as the primary key for this table."
        },
        {
          "name": "brand_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `brands` table.  Represents the brand involved in the relationship."
        },
        {
          "name": "company_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `companies` table.  Identifies the company associated with a specific brand relationship."
        },
        {
          "name": "geography_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a geographical area (e.g., country, region, city) in a 'geography' table.  Links a brand-company relationship to a specific geographic location."
        },
        {
          "name": "relationship_type",
          "type": "VARCHAR",
          "description": "Defines the type of relationship between a brand and a company (e.g., \"parent company\", \"subsidiary\", \"partner\", \"competitor\")."
        },
        {
          "name": "exclusivity_type",
          "type": "VARCHAR",
          "description": "Defines the nature of the relationship's exclusivity between the brand and the company.  For example, whether the company is the exclusive distributor, manufacturer, or retailer for the brand, or if there is no exclusivity."
        },
        {
          "name": "start_date",
          "type": "DATE",
          "description": "The `start_date` column of type `DATE` in the `brand_company_relationships` table records the date when a relationship between a brand and a company began. This could represent the start of a partnership, acquisition, or other formal association."
        },
        {
          "name": "end_date",
          "type": "DATE",
          "description": "The `end_date` column of type `DATE` in the `brand_company_relationships` table stores the date on which a relationship between a brand and a company ended.  A `NULL` value indicates an ongoing relationship."
        },
        {
          "name": "is_current",
          "type": "BOOLEAN",
          "description": "Indicates whether the relationship between the brand and the company is currently active.  A value of `TRUE` signifies an active relationship, while `FALSE` indicates an inactive or historical relationship."
        },
        {
          "name": "role_description",
          "type": "TEXT",
          "description": "`role_description`:  A textual description of the role a company plays in its relationship with a brand (e.g., \"Manufacturer\", \"Distributor\", \"Marketing Partner\", \"Retailer\").  This field provides further context beyond a simple role categorization."
        },
        {
          "name": "rights_from_company_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `company_id` column in the `companies` table.  Indicates the company from which the brand derives specific rights (e.g., licensing, distribution).  Nullable, as a brand may not derive rights from a company."
        },
        {
          "name": "deal_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific deal or agreement between a brand and a company.  This integer links to the 'deals' table."
        },
        {
          "name": "responsibilities",
          "type": "JSONB",
          "description": "Stores a JSONB object representing the responsibilities assigned within the brand-company relationship.  This allows for flexible storage of various responsibilities and their details."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "Stores flexible JSON data related to the relationship between a brand and a company. This could include details like contract terms, joint marketing agreements, or other specific information about their partnership."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the primary key (likely 'id') of a table containing primary source information.  Identifies the primary source that verified the relationship between a brand and a company."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the timestamp of the most recent modification to the relationship between a brand and a company in the `brand_company_relationships` table."
        },
        {
          "name": "company_id",
          "type": "TYPE_UNKNOWN",
          "description": "`company_id` (TYPE_UNKNOWN):  Foreign key referencing a company.  The specific type is currently unknown and needs further investigation.  This column likely identifies the company associated with a given brand relationship in the `brand_company_relationships` table."
        },
        {
          "name": "geography_id",
          "type": "TYPE_UNKNOWN",
          "description": "`geography_id` (TYPE_UNKNOWN):  A foreign key referencing a geographical entity.  Further investigation is needed to determine the specific type and referenced table, as `TYPE_UNKNOWN` suggests this information is currently unavailable. This field likely links a brand-company relationship to a specific geographic area of operation or relevance."
        },
        {
          "name": "relationship_type",
          "type": "TYPE_UNKNOWN",
          "description": "Defines the type of relationship between a brand and a company.  Currently utilizing a placeholder type 'TYPE_UNKNOWN' indicating the specific relationship categorization is not yet implemented or determined."
        },
        {
          "name": "start_date)",
          "type": "TYPE_UNKNOWN",
          "description": "`start_date` (TYPE_UNKNOWN) in the `brand_company_relationships` table likely represents the date when a relationship between a brand and a company began.  The specific data type is unknown and requires further investigation.  It could store a date, timestamp, or even a textual representation of a date."
        }
      ]
    },
    {
      "table_name": "manufacturing_relationships",
      "description": "The `manufacturing_relationships` table stores information about the relationships between drug products, their formulations, manufacturers, and rights holders.  It tracks manufacturing arrangements, including the type of manufacturing, geographical location, facility details, effective dates, current status, technology transfer information, associated agreements, and relevant data.  Data provenance is tracked through primary source and last update date.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id`:  A unique serial number automatically generated for each manufacturing relationship record in the `manufacturing_relationships` table. Serves as the primary key."
        },
        {
          "name": "drug_id",
          "type": "INTEGER",
          "description": "`drug_id` (INTEGER):  Foreign key referencing the unique identifier of a drug in the 'drugs' table. This column establishes the relationship between a manufacturing process and the specific drug being produced."
        },
        {
          "name": "combination_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific combination of materials, processes, or other manufacturing elements related to a product.  Foreign key referencing the `combinations` table."
        },
        {
          "name": "formulation_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'formulations' table. Uniquely identifies the specific formulation used in a manufacturing process."
        },
        {
          "name": "manufacturer_company_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `companies` table.  Identifies the company that manufactures the product related in this record."
        },
        {
          "name": "rights_holder_company_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `company` table.  Identifies the company that holds the intellectual property rights for this particular manufacturing relationship."
        },
        {
          "name": "manufacturing_type",
          "type": "VARCHAR",
          "description": "Specifies the type of manufacturing process used in the relationship, such as \"Additive,\" \"Subtractive,\" \"Forming,\" or \"Assembly.\""
        },
        {
          "name": "geography_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a geographical location (e.g., country, region, city) in a related 'geography' table.  Identifies the geographical area relevant to the manufacturing relationship."
        },
        {
          "name": "facility_name",
          "type": "VARCHAR",
          "description": "`facility_name` (VARCHAR):  The name of the manufacturing facility involved in the relationship."
        },
        {
          "name": "facility_location",
          "type": "VARCHAR",
          "description": "`facility_location` (VARCHAR):  The geographic location of the manufacturing facility.  This could be a city, state, region, or other relevant designation."
        },
        {
          "name": "start_date",
          "type": "DATE",
          "description": "`start_date` (DATE):  The date on which a specific manufacturing relationship began.  This could represent the start of a contract, partnership, or other relevant association recorded in the `manufacturing_relationships` table."
        },
        {
          "name": "end_date",
          "type": "DATE",
          "description": "`end_date` (DATE):  The date a manufacturing relationship ended.  NULL indicates an ongoing relationship."
        },
        {
          "name": "is_current",
          "type": "BOOLEAN",
          "description": "Indicates whether the manufacturing relationship is currently active (true) or inactive (false)."
        },
        {
          "name": "technology_transfer_status",
          "type": "VARCHAR",
          "description": "Indicates the current status of technology transfer between the two manufacturing entities related in this record.  Possible values may include (but are not limited to): \"Initiated\", \"In Progress\", \"Completed\", \"Failed\", \"On Hold\"."
        },
        {
          "name": "agreement_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific agreement related to the manufacturing relationship.  This is an integer value."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value pairs related to the manufacturing relationship. This allows for storing various attributes and metadata associated with the relationship without requiring schema changes."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the primary data source's ID (integer) for this manufacturing relationship.  This links the relationship to the system or record that originally defined it."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time of the most recent modification to the manufacturing relationship entry in the `manufacturing_relationships` table."
        }
      ]
    },
    {
      "table_name": "commercial_rights",
      "description": "The `commercial_rights` table stores information about the commercialization rights for specific drugs.  It tracks which company holds what type of rights (e.g., development, marketing, sales) for a given drug in a specific geographic region, including the duration of those rights, exclusivity details, royalty terms, and the nature of the relationship between the companies involved. Key information such as the agreement reference, origin of the rights, and the primary data source are also captured.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each commercial right record.  Automatically increments on insertion. Serves as the primary key for the `commercial_rights` table."
        },
        {
          "name": "drug_id",
          "type": "INTEGER",
          "description": "Unique identifier for a drug.  Foreign key referencing the 'drugs' table."
        },
        {
          "name": "company_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `companies` table.  Identifies the company holding the commercial rights."
        },
        {
          "name": "geography_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a geographical area (e.g., country, region, or city) in a related 'geographies' table.  Identifies the geographic scope of the commercial rights."
        },
        {
          "name": "rights_type",
          "type": "VARCHAR",
          "description": "Specifies the type of commercial rights granted, e.g., 'exclusive', 'non-exclusive', 'limited'."
        },
        {
          "name": "start_date",
          "type": "DATE",
          "description": "The `start_date` column in the `commercial_rights` table stores the effective date (DATE format) when specific commercial rights begin.  This signifies the commencement of the agreement or period for which the rights are valid."
        },
        {
          "name": "end_date",
          "type": "DATE",
          "description": "The `end_date` column in the `commercial_rights` table stores the date on which a specific commercial right expires.  This column is of type `DATE` and therefore only stores the date (year, month, and day) without any time component."
        },
        {
          "name": "exclusivity",
          "type": "VARCHAR",
          "description": "Specifies the level of exclusivity granted for the commercial rights, e.g., \"Exclusive\", \"Non-Exclusive\", \"Shared\", \"Sole\"."
        },
        {
          "name": "royalty_terms",
          "type": "TEXT",
          "description": "Royalty terms associated with the commercial rights, including details like percentage, duration, and any specific conditions.  This field allows for flexible text descriptions of complex royalty arrangements."
        },
        {
          "name": "rights_role",
          "type": "VARCHAR",
          "description": "Defines the role associated with a specific commercial right (e.g., 'licensor', 'licensee', 'distributor')."
        },
        {
          "name": "relationship_status",
          "type": "VARCHAR",
          "description": "Stores the current status of the commercial rights relationship, e.g., \"Active\", \"Pending\", \"Terminated\", \"Expired\"."
        },
        {
          "name": "exclusivity_type",
          "type": "VARCHAR",
          "description": "Defines the type of exclusivity granted for the commercial rights, e.g., \"exclusive\", \"non-exclusive\", \"sole\", \"limited\"."
        },
        {
          "name": "territory_limitations",
          "type": "TEXT",
          "description": "`territory_limitations` (TEXT):  Describes any geographical restrictions or limitations on the commercial rights, such as \"Only valid in North America\" or \"Excluding the UK and Ireland\".  May be null if no limitations apply."
        },
        {
          "name": "agreement_reference",
          "type": "VARCHAR",
          "description": "`agreement_reference` (VARCHAR):  Stores a unique identifier or reference number related to the commercial agreement governing the rights described in this row of the `commercial_rights` table. This could be an internal agreement number, a contract code, or another relevant identifier."
        },
        {
          "name": "rights_origin",
          "type": "VARCHAR",
          "description": "`rights_origin`:  A VARCHAR field indicating the source or method by which the commercial rights were acquired (e.g., 'Purchased', 'Licensed', 'Internal Development', 'Inherited')."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value data related to commercial rights. This allows for storing various attributes and metadata associated with each commercial right record in a structured yet adaptable format."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source (e.g., contract, license agreement) that grants the commercial rights detailed in this record."
        }
      ]
    },
    {
      "table_name": "sales_data",
      "description": "The `sales_data` table stores pharmaceutical sales information. Each record represents a sales transaction identified by a unique `id`.  It links to related tables using `drug_id`, `brand_id`, and `geography_id`. Sales figures are recorded for specific time periods defined by `period_type` (e.g., monthly, quarterly) and `period_value` (e.g., 2023-Q1).  `amount` and `currency` represent the original sales value.  `standardized_amount` and `standardized_currency_id` store the sales value converted to a standard currency using the exchange rate (`fx_rate_used`) captured on `fx_rate_date`.  `data` likely holds additional information about the sale.  `primary_source_id` identifies the original data source.  Note: `brand_id`, `geography_id`, `period_type`, and `period_value` appear to be duplicated in the description and should likely be reviewed.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`sales_data.id`: A unique, auto-incrementing integer that serves as the primary key for each sales record."
        },
        {
          "name": "drug_id",
          "type": "INTEGER",
          "description": "`drug_id` (INTEGER):  A unique identifier for a specific drug product.  Foreign key referencing the 'drugs' table."
        },
        {
          "name": "brand_id",
          "type": "INTEGER",
          "description": "`brand_id` (INTEGER):  A foreign key referencing the unique identifier of a brand in the 'brands' table.  This column identifies the brand associated with each sale record in the 'sales_data' table."
        },
        {
          "name": "geography_id",
          "type": "INTEGER",
          "description": "`geography_id` (INTEGER):  A foreign key referencing a geographical location (e.g., country, region, city) in a related table.  Used to associate sales data with a specific geographical area."
        },
        {
          "name": "period_type",
          "type": "VARCHAR",
          "description": "`period_type` (VARCHAR):  Indicates the time period the sales data represents (e.g., 'daily', 'weekly', 'monthly', 'quarterly', 'yearly')."
        },
        {
          "name": "period_value",
          "type": "VARCHAR",
          "description": "`period_value` (VARCHAR):  Represents the time period for the sales data. This could be a month (e.g., \"January 2024\"), a quarter (e.g., \"Q1 2024\"), or a year (e.g., \"2024\"), depending on the data granularity."
        },
        {
          "name": "amount",
          "type": "NUMERIC",
          "description": "The `amount` column in the `sales_data` table stores the monetary value of a sale as a NUMERIC value. This represents the precise amount of the transaction."
        },
        {
          "name": "currency",
          "type": "VARCHAR",
          "description": "The `currency` column in the `sales_data` table is a VARCHAR field that stores the three-letter ISO 4217 currency code (e.g., USD, EUR, GBP) indicating the currency in which the sale transaction was conducted."
        },
        {
          "name": "standardized_amount",
          "type": "NUMERIC",
          "description": "The `standardized_amount` column in the `sales_data` table stores the sales amount as a NUMERIC value, normalized to a specific unit (e.g., USD, thousands of units) for consistent reporting and analysis across different currencies or scales."
        },
        {
          "name": "standardized_currency_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `currencies` table. Stores the ID of the standardized currency used for the sales transaction, ensuring consistent reporting across different original currencies."
        },
        {
          "name": "fx_rate_used",
          "type": "NUMERIC(20",
          "description": "The `fx_rate_used` column in the `sales_data` table stores the foreign exchange rate used for currency conversion, with a precision of 20 digits.  This rate is applied when translating sales figures from one currency to another."
        },
        {
          "name": "10)",
          "type": "TYPE_UNKNOWN",
          "description": "Column '10)' in table 'sales_data' has an unknown data type (TYPE_UNKNOWN). Its purpose and contents are currently undefined and require further investigation.  This unusual column name suggests a potential data import or schema generation issue."
        },
        {
          "name": "fx_rate_date",
          "type": "DATE",
          "description": "The `fx_rate_date` column in the `sales_data` table stores the date for which the foreign exchange rate is applicable to the sales record.  This is a `DATE` type column and stores only the date (year, month, and day) without any time component."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column in the `sales_data` table storing flexible key-value pairs related to each sale.  This allows for storing various unstructured or semi-structured data associated with a sale, such as product details, customer preferences, or promotional information."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the primary key of the 'sources' table.  Identifies the primary source that generated the sale record in 'sales_data'."
        },
        {
          "name": "brand_id",
          "type": "TYPE_UNKNOWN",
          "description": "`brand_id` (TYPE_UNKNOWN):  A foreign key referencing the brand associated with a sale.  The specific type of this ID is currently unknown and requires further investigation.  This column is part of the `sales_data` table."
        },
        {
          "name": "geography_id",
          "type": "TYPE_UNKNOWN",
          "description": "`geography_id` (TYPE_UNKNOWN):  A unique identifier related to geographical information.  The specific meaning and format of this ID are currently unknown and require further investigation.  It is used in the `sales_data` table, likely to associate sales records with a geographical location."
        },
        {
          "name": "period_type",
          "type": "TYPE_UNKNOWN",
          "description": "`period_type` (TYPE_UNKNOWN): The type of period the sales data represents.  Further investigation is needed to determine the specific values and meaning of this column as the data type is currently unknown."
        },
        {
          "name": "period_value)",
          "type": "TYPE_UNKNOWN",
          "description": "`period_value` (TYPE_UNKNOWN) in the `sales_data` table represents an undefined value related to a sales period.  Further investigation is needed to determine the intended data type and purpose of this column."
        }
      ]
    },
    {
      "table_name": "market_sizing",
      "description": "The `market_sizing` table stores market size data for specific diseases within different geographic regions. It tracks key metrics like patient count, revenue, and standardized values across various years.  The table includes details about the data source, forecast methodology, currency conversion information, and growth rates.  It uses unique identifiers for diseases, geographies, standardized currencies, and primary sources. The `data` column likely stores additional information in a flexible format (e.g., JSON).  There is redundancy in the column definitions (geography_id, year, market_type, source_type are listed twice).  This redundancy should likely be removed.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each market sizing record. Automatically increments for each new entry.  Serves as the primary key of the `market_sizing` table."
        },
        {
          "name": "disease_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific disease.  References the `disease` table (or similar)."
        },
        {
          "name": "geography_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a geographical area (e.g., country, region, city) in a lookup table. Used to associate market sizing data with a specific geography."
        },
        {
          "name": "year",
          "type": "INTEGER",
          "description": "The `year` column in the `market_sizing` table is an INTEGER representing the calendar year relevant to the market size data."
        },
        {
          "name": "market_type",
          "type": "VARCHAR",
          "description": "Classifies the type of market being analyzed (e.g., B2B, B2C, C2C, etc.)."
        },
        {
          "name": "patient_count",
          "type": "INTEGER",
          "description": "Number of patients associated with a particular market segment."
        },
        {
          "name": "revenue_value",
          "type": "NUMERIC",
          "description": "`revenue_value` (NUMERIC): Stores the estimated revenue value, typically in a given currency (e.g., USD, EUR), for a particular market segment or total market size calculation within the `market_sizing` table."
        },
        {
          "name": "currency",
          "type": "VARCHAR",
          "description": "Three-letter ISO 4217 currency code representing the currency used for market size values (e.g., USD, EUR, GBP)."
        },
        {
          "name": "standardized_value",
          "type": "NUMERIC",
          "description": "`standardized_value` (NUMERIC):  A normalized numeric value representing a market metric (e.g., revenue, units sold) within the `market_sizing` table. This allows for consistent comparison across different markets or segments, potentially accounting for factors like currency exchange rates, inflation, or population size."
        },
        {
          "name": "standardized_currency_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `currencies` table. Stores the ID of the standardized currency used for market sizing calculations, ensuring consistent reporting across different regions and currencies."
        },
        {
          "name": "fx_rate_used",
          "type": "NUMERIC(20",
          "description": "The `fx_rate_used` column in the `market_sizing` table stores the foreign exchange rate used for currency conversion calculations.  It is a numeric value with a precision of 20 digits."
        },
        {
          "name": "10)",
          "type": "TYPE_UNKNOWN",
          "description": "Column '10)' in table 'market_sizing' has an unknown data type (TYPE_UNKNOWN). Its purpose and intended content are unclear and require further investigation.  The non-standard name suggests a potential error in the data schema."
        },
        {
          "name": "fx_rate_date",
          "type": "DATE",
          "description": "The `fx_rate_date` column in the `market_sizing` table stores the date for which the foreign exchange rate is applicable.  This date determines which exchange rate is used for currency conversions in market sizing calculations."
        },
        {
          "name": "growth_rate",
          "type": "NUMERIC",
          "description": "`growth_rate` (NUMERIC):  Represents the percentage growth rate of a particular market segment.  Stored as a decimal value (e.g., 0.05 for 5%)."
        },
        {
          "name": "source_type",
          "type": "VARCHAR",
          "description": "`source_type` (VARCHAR):  Indicates the origin or type of data used for market sizing, e.g., 'primary research', 'secondary research', 'expert interview', 'industry report'."
        },
        {
          "name": "forecast_methodology",
          "type": "TEXT",
          "description": "The `forecast_methodology` column in the `market_sizing` table is a text field describing the methodology used to generate the market size forecast. This may include details on the data sources, assumptions, calculations, and models employed."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `sources` table.  Identifies the primary source of data used for a particular market sizing record."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the timestamp of the most recent update to the market sizing data in this row."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value data related to market sizing calculations and assumptions.  This allows for storing varying attributes without needing to alter the table schema."
        },
        {
          "name": "geography_id",
          "type": "TYPE_UNKNOWN",
          "description": "`geography_id` (TYPE_UNKNOWN):  A unique identifier for a geographical area relevant to market sizing. The specific type of identifier is currently unknown and requires further investigation.  This field links to a geographical lookup table or service."
        },
        {
          "name": "year",
          "type": "TYPE_UNKNOWN",
          "description": "The `year` column in the `market_sizing` table stores year information.  Its data type is currently unknown (TYPE_UNKNOWN) and requires further investigation to determine the correct type and format. This likely represents a year related to the market sizing data."
        },
        {
          "name": "market_type",
          "type": "TYPE_UNKNOWN",
          "description": "`market_sizing.market_type (TYPE_UNKNOWN)`:  The type of market being analyzed.  Further investigation is needed to determine the specific meaning and possible values of this column as the data type is currently unknown."
        },
        {
          "name": "source_type)",
          "type": "TYPE_UNKNOWN",
          "description": "`source_type (TYPE_UNKNOWN)` in the `market_sizing` table indicates the origin or category of the market sizing data.  The specific meaning of the values within this column is currently unknown and requires further investigation."
        }
      ]
    },
    {
      "table_name": "disease_epidemiology",
      "description": "The `disease_epidemiology` table stores epidemiological data for various diseases across different geographical locations and time periods.  It tracks patient counts based on different epidemiological types (e.g., prevalence, incidence), patient segments (e.g., age group, gender), and count types (e.g., estimated, reported).  Each record is linked to a specific disease and geography, with additional information about the data source and last update date.  The `data` column allows for storing additional JSON formatted details related to the specific record.  The table uses a primary key `id` for unique identification of each record.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id`:  A unique, automatically incrementing integer that serves as the primary key for the `disease_epidemiology` table.  It identifies each record of epidemiological data."
        },
        {
          "name": "disease_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific disease.  Foreign key referencing the 'diseases' table."
        },
        {
          "name": "geography_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a geographical area (e.g., country, region, state) in a lookup table.  Used to associate disease epidemiology data with a specific location."
        },
        {
          "name": "year",
          "type": "INTEGER",
          "description": "The `year` column in the `disease_epidemiology` table is an INTEGER representing the calendar year to which the associated epidemiological data pertains."
        },
        {
          "name": "epidemiology_type",
          "type": "VARCHAR",
          "description": "Classifies the epidemiological type of the disease, such as 'endemic', 'epidemic', 'pandemic', 'sporadic', or 'cluster'."
        },
        {
          "name": "patient_segment",
          "type": "VARCHAR",
          "description": "Patient segment categorization (e.g., pediatric, adult, geriatric, pregnant, etc.) relevant to the disease epidemiology being tracked."
        },
        {
          "name": "count_type",
          "type": "VARCHAR",
          "description": "`count_type` (VARCHAR):  Indicates the type of count recorded for a disease, such as \"cases\", \"deaths\", \"hospitalizations\", or \"recoveries\"."
        },
        {
          "name": "patient_count",
          "type": "NUMERIC",
          "description": "Number of patients diagnosed with the specific disease.  Stored as a numeric value."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column of the 'sources' table.  Indicates the primary source of information for the epidemiological data related to a disease."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time when the epidemiological data for a disease entry was last modified."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`: A JSONB column storing epidemiological data for a disease. This flexible field can contain various information like prevalence rates, risk factors, transmission modes, geographic distribution, and outbreak details, allowing for complex and evolving data structures."
        },
        {
          "name": "geography_id",
          "type": "TYPE_UNKNOWN",
          "description": "`geography_id` (TYPE_UNKNOWN):  A unique identifier referencing a geographical entity relevant to the disease epidemiology data.  The specific type of geographical entity (e.g., country, region, state) and the reference table are currently undetermined."
        },
        {
          "name": "year",
          "type": "TYPE_UNKNOWN",
          "description": "`year` (TYPE_UNKNOWN):  The year associated with the epidemiological data for the disease.  Further investigation is needed to determine the precise data type (e.g., integer, text)."
        },
        {
          "name": "epidemiology_type",
          "type": "TYPE_UNKNOWN",
          "description": "Classifies the epidemiological type of the disease, currently using a placeholder value (TYPE_UNKNOWN) as specific types are yet to be defined.  This column will be updated with more specific categories in the future."
        },
        {
          "name": "patient_segment)",
          "type": "TYPE_UNKNOWN",
          "description": "`patient_segment` (TYPE_UNKNOWN):  Indicates the patient segment for the epidemiological data.  Further investigation is needed to determine the specific data type and values stored in this column.  It is recommended to update the data type once determined."
        }
      ]
    },
    {
      "table_name": "drug_market_forecasts",
      "description": "The `drug_market_forecasts` table stores revenue projections for pharmaceutical drugs across various markets. Forecasts are segmented by drug, combination therapy (if applicable), treatment regimen, disease indication, specific indication details, geographical region, year, and forecast type (e.g., conservative, optimistic).  It includes both original currency revenue forecasts and standardized revenue forecasts in a common currency for comparison.  Additional data points include treatment rate, forecast scenario, and primary data source.  The table is regularly updated, with `last_update_date` tracking the most recent modification.  Fields marked with '--' represent additional attributes not described in detail.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each drug market forecast record. Automatically increments with each new entry.  Serves as the primary key for the table."
        },
        {
          "name": "drug_id",
          "type": "INTEGER",
          "description": "Unique identifier for a drug.  Foreign key referencing the `drugs` table."
        },
        {
          "name": "combination_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific combination of drugs considered in the market forecast.  Foreign key referencing a table (e.g., `drug_combinations`) listing the constituent drugs of each combination."
        },
        {
          "name": "regimen_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `regimens` table.  Identifies the specific drug regimen associated with this market forecast."
        },
        {
          "name": "disease_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific disease.  Foreign key referencing the 'diseases' table."
        },
        {
          "name": "indication_specification_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `indication_specifications` table.  Identifies the specific indication (e.g., disease or condition) for which the drug market forecast is made."
        },
        {
          "name": "geography_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a geographical location (e.g., country, region, city) in a related table.  Used to associate drug market forecasts with specific geographies."
        },
        {
          "name": "year",
          "type": "INTEGER",
          "description": "The `year` column in the `drug_market_forecasts` table is an INTEGER representing the calendar year for which the drug market forecast is made."
        },
        {
          "name": "forecast_type",
          "type": "VARCHAR",
          "description": "Indicates the type of forecast made, such as 'short-term', 'long-term', 'optimistic', 'pessimistic', or 'base-case'."
        },
        {
          "name": "revenue_forecast",
          "type": "NUMERIC",
          "description": "Projected revenue for a given drug market.  Stored as a numeric value."
        },
        {
          "name": "--",
          "type": "Consolidated",
          "description": "`--` (Consolidated):  Aggregated or summarized data related to drug market forecasts. The specific nature of the consolidation should be documented elsewhere (e.g., sum, average, weighted average, etc.) and ideally, the column name should be more descriptive."
        },
        {
          "name": "--",
          "type": "Consolidated",
          "description": "`drug_market_forecasts.--` (Consolidated):  A consolidated indicator (the specific meaning requires further documentation) related to the drug market forecast.  The meaning of \"consolidated\" should be clarified in related documentation or data dictionary.  It is strongly recommended to rename this column to a more descriptive and SQL-friendly name (avoiding special characters like '--')."
        },
        {
          "name": "currency",
          "type": "VARCHAR",
          "description": "Three-letter ISO 4217 currency code representing the currency in which the drug market forecast values (e.g., revenue, sales) are expressed."
        },
        {
          "name": "standardized_revenue_forecast",
          "type": "NUMERIC",
          "description": "Standardized revenue forecast (in USD) for a given drug and market. This value is normalized across different markets and currencies for consistent comparison."
        },
        {
          "name": "standardized_currency_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `currencies` table. Stores the ID of the standardized currency used for the drug market forecast value, ensuring consistent reporting across different regions and currencies."
        },
        {
          "name": "treatment_rate",
          "type": "NUMERIC",
          "description": "`treatment_rate` (NUMERIC):  Represents the projected percentage of patients within a specific market segment receiving the given drug treatment. This value is used in forecasting market size and potential revenue."
        },
        {
          "name": "forecast_scenario_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `scenario_id` column in the `forecast_scenarios` table.  Identifies the specific forecast scenario (e.g., optimistic, pessimistic, base case) applied to the drug market forecast data."
        },
        {
          "name": "--",
          "type": "Reference",
          "description": "`--` (Reference):  This column likely indicates a relationship to another table, though its name is unconventional and should be changed.  It probably stores a foreign key referencing a related record in another table, perhaps containing details on a specific drug, manufacturer, or market segment relevant to the forecast.  Further investigation is needed to determine the exact nature of the reference."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the timestamp of the most recent update to this drug market forecast."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value data related to the drug market forecast. This may include details like specific drug categories, regional breakdowns, pricing trends, or other relevant information not captured in dedicated columns."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `primary_sources` table.  Identifies the primary source of information used for the corresponding drug market forecast."
        }
      ]
    },
    {
      "table_name": "drug_pricing",
      "description": "The `drug_pricing` table stores historical and current drug price information across different geographical regions, formulations, payers, and price types. It captures the price value, currency, standardized price (for cross-currency comparison), exchange rate details, reimbursement status, discounts, and data source information.  Each record represents a specific drug price point at a particular time and location.  The table uses various identifiers (drug_id, formulation_id, geography_id, etc.) to link to related data tables.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id`:  A unique, auto-incrementing integer that serves as the primary key for the `drug_pricing` table.  It automatically assigns a new value to each new drug pricing record."
        },
        {
          "name": "drug_id",
          "type": "INTEGER",
          "description": "Unique identifier for a drug within the `drug_pricing` table.  Corresponds to a specific drug entry and is used to relate pricing information to a particular drug."
        },
        {
          "name": "formulation_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific drug formulation.  References the `formulation` table."
        },
        {
          "name": "geography_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a geographical location (e.g., country, region, state) in a related table.  Used to associate drug prices with specific geographic areas."
        },
        {
          "name": "effective_date",
          "type": "DATE",
          "description": "The `effective_date` column in the `drug_pricing` table stores the date on which a specific drug price becomes or became active.  It is of type `DATE` and holds only date values (year, month, and day)."
        },
        {
          "name": "price_type",
          "type": "VARCHAR",
          "description": "The `price_type` column in the `drug_pricing` table is a VARCHAR field that specifies the type of price being recorded.  This could indicate, for example, wholesale price, retail price, average price, discounted price, or other relevant price classifications."
        },
        {
          "name": "price_value",
          "type": "NUMERIC",
          "description": "The `price_value` column in the `drug_pricing` table stores the numerical value of a drug's price.  It uses the NUMERIC data type to allow for precise representation of monetary values, including fractional amounts."
        },
        {
          "name": "price_basis",
          "type": "VARCHAR",
          "description": "The `price_basis` column in the `drug_pricing` table is a string (VARCHAR) that defines the unit of measurement for the drug price (e.g., 'per tablet', 'per vial', 'per gram', 'per ml').  This allows for accurate price comparisons across different drug formulations and packaging."
        },
        {
          "name": "currency",
          "type": "VARCHAR",
          "description": "Three-letter ISO 4217 currency code representing the currency in which the drug price is expressed (e.g., USD, EUR, GBP)."
        },
        {
          "name": "standardized_price_value",
          "type": "NUMERIC",
          "description": "The `standardized_price_value` column in the `drug_pricing` table stores the normalized price of a drug as a numeric value. This represents the price after applying any necessary adjustments or calculations to facilitate comparisons across different units or currencies."
        },
        {
          "name": "standardized_currency_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a standardized currency table (e.g., 'currencies').  Stores the ID of the currency in which the drug price is represented, ensuring consistent and comparable pricing information."
        },
        {
          "name": "fx_rate_used",
          "type": "NUMERIC(20",
          "description": "The `fx_rate_used` column in the `drug_pricing` table stores the foreign exchange rate used for currency conversion, likely when calculating the price of a drug in a different currency.  It is a numeric value with a precision of 20 digits."
        },
        {
          "name": "10)",
          "type": "TYPE_UNKNOWN",
          "description": "Column '10)' in the 'drug_pricing' table has an unknown data type (TYPE_UNKNOWN). Its purpose and intended content are currently undefined and require further investigation.  The non-standard name suggests a potential data import or structural issue."
        },
        {
          "name": "fx_rate_date",
          "type": "DATE",
          "description": "`fx_rate_date` (DATE): Stores the date for which the foreign exchange rate used in drug pricing calculations is applicable."
        },
        {
          "name": "reimbursement_status",
          "type": "VARCHAR",
          "description": "`reimbursement_status`: (VARCHAR) Indicates the current reimbursement status for a given drug.  Possible values could include 'Approved', 'Denied', 'Pending', 'Under Review', etc."
        },
        {
          "name": "payer_type",
          "type": "VARCHAR",
          "description": "Payer Type:  Indicates the entity responsible for payment for the drug (e.g., insurance company, government program, patient).  Stored as a string."
        },
        {
          "name": "discount_percentage",
          "type": "NUMERIC",
          "description": "`discount_percentage` (NUMERIC):  Represents the percentage discount applied to the drug price. Stored as a decimal value (e.g., 0.10 for 10%)."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the primary source (e.g., a price list, a government database) that provided the drug price information."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time when the drug pricing information in this row was last modified."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`: This column stores additional drug pricing information as a JSONB object, allowing for flexible and complex data structures. This might include details like historical prices, price variations by region, discounts, or other relevant pricing attributes not captured in dedicated columns."
        },
        {
          "name": "formulation_id",
          "type": "TYPE_UNKNOWN",
          "description": "A unique identifier for a specific drug formulation within the `drug_pricing` table. The exact nature of the identifier is currently unknown (TYPE_UNKNOWN) and requires further investigation.  This column likely relates to variations in a drug's composition, strength, or delivery method."
        },
        {
          "name": "geography_id",
          "type": "TYPE_UNKNOWN",
          "description": "`geography_id` (TYPE_UNKNOWN):  A unique identifier related to the geographic location relevant to the drug price.  Further investigation is needed to determine the specific type and meaning of this ID.  It could represent a country, region, state, or other geographic entity."
        },
        {
          "name": "effective_date",
          "type": "TYPE_UNKNOWN",
          "description": "`effective_date` (TYPE_UNKNOWN): The date on which a specific drug price becomes or became active in the `drug_pricing` table.  Further investigation is needed to determine the precise data type (e.g., DATE, DATETIME, TIMESTAMP)."
        },
        {
          "name": "price_type",
          "type": "TYPE_UNKNOWN",
          "description": "`price_type` (TYPE_UNKNOWN):  The type of price represented for the drug.  Further investigation is needed to determine the meaning and possible values of this field, as the original data type is unknown."
        },
        {
          "name": "payer_type)",
          "type": "TYPE_UNKNOWN",
          "description": "`payer_type (TYPE_UNKNOWN)` in the `drug_pricing` table indicates the entity responsible for payment, although the specific format or possible values of this type are currently unknown.  Further investigation is needed to determine the meaning and usage of this column."
        }
      ]
    },
    {
      "table_name": "competitive_landscape",
      "description": "The `competitive_landscape` table stores snapshots of the competitive landscape for a given disease within a specific geographic region and year. It tracks the number of competitors, the market leader (if applicable), their market share, barriers to entry, the overall competitive intensity, and the source of the information.  Each record is uniquely identified by `id` and is linked to a disease (`disease_id`), geography (`geography_id`), year, and the primary data source (`primary_source_id`). The `data` column allows for storing additional structured information about the competitive landscape.  `last_update_date` indicates when the record was last modified.  Note: `geography_id` and `year` are listed twice - this likely represents a redundancy and one instance of each should be removed.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id`:  A unique, automatically incrementing integer that serves as the primary key for the `competitive_landscape` table."
        },
        {
          "name": "disease_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific disease relevant to the competitive landscape.  Foreign key referencing the `diseases` table."
        },
        {
          "name": "geography_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a geographical area (e.g., country, region, city) in a lookup table.  Used to associate competitive landscape data with a specific geographic location."
        },
        {
          "name": "year",
          "type": "INTEGER",
          "description": "The `year` column in the `competitive_landscape` table is an INTEGER representing the calendar year relevant to the competitive landscape data in that row."
        },
        {
          "name": "competitor_count",
          "type": "INTEGER",
          "description": "Number of competitors identified in the competitive landscape."
        },
        {
          "name": "market_leader_id",
          "type": "INTEGER",
          "description": "`market_leader_id` (INTEGER):  Foreign key referencing the 'company' table (company_id).  Identifies the company considered the market leader in this specific competitive landscape.  May be NULL if no clear leader exists."
        },
        {
          "name": "leader_market_share",
          "type": "NUMERIC",
          "description": "`leader_market_share` (NUMERIC): Represents the market share percentage of the leading competitor in a given market. Stored as a decimal value between 0 and 1 (inclusive), where 0.5 represents 50% market share. This column resides in the `competitive_landscape` table."
        },
        {
          "name": "barriers_to_entry",
          "type": "TEXT",
          "description": "Describes the obstacles or challenges faced by new businesses attempting to enter the market.  This can include factors like high startup costs, regulatory hurdles, strong brand loyalty, or existing monopolies."
        },
        {
          "name": "competitive_intensity",
          "type": "VARCHAR",
          "description": "`competitive_intensity` (VARCHAR):  Represents the level of competition in the market for a given entity.  This could be categorized as \"Low,\" \"Medium,\" \"High,\" or similar descriptive terms."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source of information about a competitor in the `sources` table.  Used to track the origin of competitive intelligence data."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the timestamp of the most recent update to the competitive landscape data in this row."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible, unstructured data related to a specific entry in the competitive landscape. This can include various attributes, metrics, and other relevant information about a competitor or market segment."
        },
        {
          "name": "geography_id",
          "type": "TYPE_UNKNOWN",
          "description": "`geography_id` (TYPE_UNKNOWN):  A unique identifier related to a geographic area relevant to the competitive landscape.  Further investigation is needed to determine the specific data type and meaning of this ID."
        },
        {
          "name": "year)",
          "type": "TYPE_UNKNOWN",
          "description": "`year)` in the `competitive_landscape` table appears to store year information, but its data type is unknown (TYPE_UNKNOWN). This requires further investigation to determine the actual data type and format (e.g., integer, text, date) for proper usage and analysis.  It's possible the parenthesis in the name is a typo."
        }
      ]
    },
    {
      "table_name": "drug_market_positioning",
      "description": "The `drug_market_positioning` table stores information about how a specific drug (`drug_id`) is positioned against its competitors (`competitor_id`) for a particular indication (`indication_specification_id`).  It records the dimension of comparison (`comparison_dimension`), the drug's relative standing (`relative_position`), supporting details (`position_details`), strength of supporting evidence (`evidence_strength`), and the primary source of information (`primary_source_id`).  `data` can store additional structured information. `last_update_date` tracks the last modification.  This table allows for nuanced comparisons across multiple competitors and dimensions for a given drug and indication.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each drug market positioning record.  Automatically increments on insertion. Serves as the primary key for the table."
        },
        {
          "name": "drug_id",
          "type": "INTEGER",
          "description": "Unique identifier for a drug.  Foreign key referencing the 'drugs' table."
        },
        {
          "name": "indication_specification_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `indication_specification` table.  Identifies the specific indication or use case for the drug's market positioning."
        },
        {
          "name": "competitor_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `competitors` table.  Identifies the competitor drug being considered in the market positioning analysis."
        },
        {
          "name": "comparison_dimension",
          "type": "VARCHAR",
          "description": "The `comparison_dimension` column in the `drug_market_positioning` table stores the specific dimension or attribute used to compare a drug against its competitors. This could be efficacy, safety, cost, route of administration, patient population, or other relevant market differentiators.  (VARCHAR type allows for flexible text-based descriptions of these dimensions.)"
        },
        {
          "name": "relative_position",
          "type": "VARCHAR",
          "description": "Relative position of a drug within the market (e.g., \"Leader\", \"Follower\", \"Niche Player\", \"Emerging\")."
        },
        {
          "name": "position_details",
          "type": "TEXT",
          "description": "`position_details`:  A text field providing detailed information about the market positioning strategy for a specific drug, including target patient demographics, competitive landscape analysis, key differentiators, and marketing messages."
        },
        {
          "name": "evidence_strength",
          "type": "VARCHAR",
          "description": "`evidence_strength`: (VARCHAR) Categorical assessment of the supporting evidence for a drug's market positioning claim (e.g., \"Preclinical\", \"Phase I\", \"Phase II\", \"Phase III\", \"Post-Marketing Surveillance\", \"Real-World Evidence\", \"Expert Opinion\")."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `primary_sources` table.  Indicates the primary source of information used for the drug's market positioning data."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the timestamp of the most recent update to the drug's market positioning information in the `drug_market_positioning` table."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible, key-value data related to the drug's market positioning. This might include information like target patient demographics, competitor analysis, marketing strategies, or key selling points.  The JSONB format allows for efficient querying and indexing of specific data points within the JSON structure."
        },
        {
          "name": "indication_specification_id",
          "type": "TYPE_UNKNOWN",
          "description": "Foreign key referencing a table (likely 'indication_specifications') which details specific indications.  The data type 'TYPE_UNKNOWN' suggests further investigation is needed to determine the correct data type (e.g., INT, UUID).  This column likely links a drug's market positioning to a specific indication for which it is marketed."
        },
        {
          "name": "competitor_id",
          "type": "TYPE_UNKNOWN",
          "description": "`competitor_id` (TYPE_UNKNOWN):  Identifier for a competitor drug.  The specific type of this identifier is currently unknown and requires further investigation.  This field relates a record in the `drug_market_positioning` table to a competitor drug."
        },
        {
          "name": "comparison_dimension)",
          "type": "TYPE_UNKNOWN",
          "description": "`comparison_dimension` (TYPE_UNKNOWN):  The specific aspect or characteristic used for comparing drugs in market positioning analysis within the `drug_market_positioning` table.  Further investigation is needed to determine the actual data type and allowed values."
        }
      ]
    },
    {
      "table_name": "market_access_status",
      "description": "The `market_access_status` table tracks the availability and accessibility of drugs within specific geographic regions and for particular indications.  It stores information about launch dates, launch status (e.g., launched, pre-launch), access levels (e.g., restricted, open), formulary status, prior authorization requirements, availability of patient support programs, and the source of this information.  Each record is uniquely identified by `id` and linked to a specific drug (`drug_id`), indication (`indication_specification_id`), and geographic area (`geography_id`). The `data` column allows for storing additional details, and `last_update_date` tracks the recency of the information.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`market_access_status.id`:  A unique serial number automatically generated for each market access status record. Serves as the primary key for this table."
        },
        {
          "name": "drug_id",
          "type": "INTEGER",
          "description": "Unique identifier for a drug.  Relates to the 'drugs' table."
        },
        {
          "name": "indication_specification_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `indication_specification` table.  Identifies the specific indication (e.g., disease or condition) for which this market access status applies."
        },
        {
          "name": "geography_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a geographical area (e.g., country, region, state) in a related 'geography' table.  Used to associate market access status with a specific location."
        },
        {
          "name": "launch_date",
          "type": "DATE",
          "description": "The `launch_date` column in the `market_access_status` table stores the date (YYYY-MM-DD) a product or service was launched in a specific market.  This date indicates the official start of availability for that market."
        },
        {
          "name": "launch_status",
          "type": "VARCHAR",
          "description": "Current launch status of a product in a specific market.  Possible values may include \"Launched\", \"Pending Launch\", \"Launch Cancelled\", etc."
        },
        {
          "name": "access_level",
          "type": "VARCHAR",
          "description": "`access_level` (VARCHAR): Defines the user's access level within the market.  Possible values may include (but are not limited to) \"full\", \"limited\", \"restricted\", or \"none\". This column in the `market_access_status` table determines the permissions and functionalities available to the user in the specified market."
        },
        {
          "name": "formulary_status",
          "type": "VARCHAR",
          "description": "Indicates the formulary status of a drug within a specific market.  Possible values may include (but are not limited to): \"On Formulary,\" \"Off Formulary,\" \"Restricted,\" \"Prior Authorization,\" \"Preferred,\" \"Non-Preferred.\""
        },
        {
          "name": "prior_authorization",
          "type": "BOOLEAN",
          "description": "Indicates whether a prior authorization is required for market access (true) or not (false)."
        },
        {
          "name": "patient_support_programs",
          "type": "TEXT",
          "description": "`patient_support_programs`:  A text field describing available patient support programs (e.g., co-pay assistance, free drug programs, patient assistance foundations) for a given product in a specific market. This may include eligibility criteria, program details, or links to external resources."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source document (e.g., regulation, trade agreement) that determines the market access status."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the timestamp of the most recent update to the market access status information in this row."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value data related to a market access status record. This allows for storing various attributes and details that might not fit into a predefined schema."
        },
        {
          "name": "indication_specification_id",
          "type": "TYPE_UNKNOWN",
          "description": "Foreign key referencing a specification for the indication (likely a disease or condition) relevant to the market access status.  The specific type of data referenced is currently unknown (TYPE_UNKNOWN)."
        },
        {
          "name": "geography_id)",
          "type": "TYPE_UNKNOWN",
          "description": "`geography_id (TYPE_UNKNOWN)` in the `market_access_status` table likely represents a unique identifier for a geographic area.  The specific type is unknown and requires further investigation to determine its meaning and how it relates to other geographical data. This ID is used to associate market access status with a particular region."
        }
      ]
    },
    {
      "table_name": "analyst_opinions",
      "description": "The `analyst_opinions` table stores analyst ratings and forecasts for different drugs.  Each record represents a specific analyst's opinion, including their firm, the date of the opinion, the type of opinion (e.g., buy, sell, hold), rating, forecast value (if applicable), forecast year,  the rationale behind the opinion, a link to the primary source, and the date the record was last updated.  Additional data relevant to the opinion may be stored in a JSON field called `data`.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each analyst opinion. Automatically increments for each new entry. Serves as the primary key for the `analyst_opinions` table."
        },
        {
          "name": "drug_id",
          "type": "INTEGER",
          "description": "`drug_id` (INTEGER):  A unique identifier referencing a specific drug record in the 'drugs' table.  This column links analyst opinions to the drug they are evaluating."
        },
        {
          "name": "analyst_name",
          "type": "VARCHAR",
          "description": "`analyst_name` (VARCHAR): Stores the name of the financial analyst who provided the opinion recorded in this row of the `analyst_opinions` table."
        },
        {
          "name": "firm_name",
          "type": "VARCHAR",
          "description": "`firm_name` (VARCHAR):  The name of the financial firm or institution that employs the analyst providing the opinion."
        },
        {
          "name": "opinion_date",
          "type": "DATE",
          "description": "`opinion_date` (DATE): The date on which the analyst provided their opinion or rating."
        },
        {
          "name": "opinion_type",
          "type": "VARCHAR",
          "description": "Categorizes the type of opinion expressed by the analyst.  Examples could include \"Buy,\" \"Sell,\" \"Hold,\" \"Outperform,\" \"Underperform,\" etc."
        },
        {
          "name": "rating",
          "type": "VARCHAR",
          "description": "`rating`:  (VARCHAR) Represents the analyst's rating or assessment, typically expressed as a categorical value (e.g., \"Buy\", \"Hold\", \"Sell\", \"Outperform\", \"Underperform\")."
        },
        {
          "name": "forecast_value",
          "type": "NUMERIC",
          "description": "The `forecast_value` column in the `analyst_opinions` table stores the numerical value of a specific analyst's forecast. This could represent various metrics, such as projected revenue, earnings per share, or stock price."
        },
        {
          "name": "forecast_year",
          "type": "INTEGER",
          "description": "The `forecast_year` column in the `analyst_opinions` table is an INTEGER representing the year for which the analyst's opinion or forecast is provided.  This indicates the future year being analyzed, not the year the opinion was given."
        },
        {
          "name": "opinion_text",
          "type": "TEXT",
          "description": "`opinion_text` (TEXT): Contains the free-form textual content of an analyst's opinion or commentary."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source document (e.g., research report, earnings call transcript) on which the analyst's opinion is based."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time when the analyst's opinion was last modified or updated."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value pairs representing various data points related to an analyst's opinion. This allows for storing structured information like financial forecasts, sentiment scores, or supporting evidence in a schema-less manner."
        }
      ]
    },
    {
      "table_name": "market_catalysts",
      "description": "The `market_catalysts` table stores information about events that significantly impact the pharmaceutical market for a specific disease and drug. Each record represents a catalyst event, linked to a disease and drug, occurring on a specific date within a particular geographic region and under a specific regulatory authority.  It also includes details about the global impact, impact level on the geography, potential follow-on geographies, the primary source of the information, additional data related to the catalyst, and the last update timestamp.  Several columns are reserved for future use.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each market catalyst.  Automatically increments upon insertion.  Serves as the primary key for the `market_catalysts` table."
        },
        {
          "name": "disease_id",
          "type": "INTEGER",
          "description": "Unique identifier for a disease that acts as a market catalyst.  References the `diseases` table."
        },
        {
          "name": "drug_id",
          "type": "INTEGER",
          "description": "`drug_id` (INTEGER):  A unique identifier referencing a specific drug record.  This column links market catalysts to the drugs they pertain to."
        },
        {
          "name": "catalyst_date",
          "type": "DATE",
          "description": "`catalyst_date` (DATE): The date on which a specific market catalyst event occurred."
        },
        {
          "name": "--",
          "type": "Consolidated",
          "description": "`market_catalysts.--` (Consolidated):  A consolidated indicator or flag (details unspecified) related to the market catalyst described in this row.  Further documentation is needed to clarify the precise meaning and possible values of this field."
        },
        {
          "name": "--",
          "type": "Consolidated",
          "description": "`market_catalysts.--` (Consolidated):  A consolidated indicator (the specific meaning requires further documentation) related to the market catalyst described in the row."
        },
        {
          "name": "--",
          "type": "Consolidated",
          "description": "`market_catalysts.--` (Consolidated):  A consolidated indicator or value related to the market catalyst.  Further details about the specific consolidation method and the data aggregated are required for proper interpretation."
        },
        {
          "name": "--",
          "type": "Consolidated",
          "description": "`market_catalysts.--` (Consolidated):  A consolidated indicator (the specific meaning requires further context) related to the market catalyst described in the row.  The double hyphen name suggests this column may be temporary or require renaming for better readability."
        },
        {
          "name": "--",
          "type": "For",
          "description": "This column's name is invalid.  \"--\" is interpreted as the start of a comment in most SQL dialects and therefore cannot be a column name.  It needs to be renamed.  Assuming it was renamed to something valid (e.g., `ForWhat`), and assuming \"For\" is a typo for a valid data type like `VARCHAR`, the description might be:\n\n\"Indicates the target or beneficiary of the market catalyst (e.g., 'Consumers', 'Businesses', 'Specific Industry').\""
        },
        {
          "name": "--",
          "type": "For",
          "description": "This column's name is invalid. \"--\" is used to denote comments in SQL and cannot be a column name.  You should rename the column to something valid (e.g., `ForWhat`).  Assuming it *were* renamed to something valid like `ForWhat` and the type `For` is meant to represent a foreign key relationship, the description might be:\n\n\"Foreign key referencing [related table name].  Indicates which [entity represented by the related table] this market catalyst is for.\"\n\n\nFor example, if the related table is `companies`, the description would be:\n\n\"Foreign key referencing `companies`. Indicates which company this market catalyst is for.\""
        },
        {
          "name": "geography_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a geographical area (e.g., country, region, city) in a related 'geographies' table.  Used to associate market catalysts with specific locations."
        },
        {
          "name": "regulatory_authority_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the regulatory authority (e.g., SEC, FINRA) that influences or governs the market catalyst."
        },
        {
          "name": "is_global",
          "type": "BOOLEAN",
          "description": "Indicates whether a market catalyst is global (true) or specific to a particular region/market (false)."
        },
        {
          "name": "geography_impact_level",
          "type": "VARCHAR",
          "description": "Categorizes the geographic extent of a market catalyst's impact (e.g., 'Local', 'Regional', 'National', 'Global')."
        },
        {
          "name": "follow_on_geographies",
          "type": "JSONB",
          "description": "This column, `follow_on_geographies` (JSONB), in the `market_catalysts` table, stores an array of geographical regions (e.g., countries, states, cities) where a market catalyst is expected to have subsequent impact or influence after its initial occurrence.  The JSONB format allows for flexible storage of various geographical details, potentially including names, codes, or coordinates."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source (e.g., news article, financial report) that triggered the market catalyst."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value data related to the market catalyst. This allows for storing various attributes and details about the catalyst in a structured format."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time when information regarding a specific market catalyst was last modified."
        }
      ]
    },
    {
      "table_name": "catalyst_types",
      "description": "The `catalyst_types` table stores information about different types of catalysts, categorized by their general category and specific type.  It includes data on typical lead time and impact duration, geographical relevance, a brief description, and the catalyst type.  The `id` column serves as a unique identifier for each catalyst type.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique identifier for each catalyst type. Automatically increments upon insertion."
        },
        {
          "name": "catalyst_category",
          "type": "VARCHAR",
          "description": "Categorizes the type of catalyst used.  This field stores a textual description of the catalyst category (e.g., \"Metal\", \"Enzyme\", \"Organometallic\")."
        },
        {
          "name": "catalyst_type",
          "type": "VARCHAR",
          "description": "Stores the specific type of catalyst used in a reaction.  This column, of type VARCHAR, allows for flexible naming of various catalysts within the `catalyst_types` table."
        },
        {
          "name": "typical_lead_time",
          "type": "VARCHAR",
          "description": "Typical lead time for procuring/manufacturing this type of catalyst.  May be expressed as a range (e.g., \"2-4 weeks\") or a general timeframe (e.g., \"1 month\")."
        },
        {
          "name": "typical_impact_duration",
          "type": "VARCHAR",
          "description": "Typical duration of the impact of this catalyst type.  This field allows for flexible representation of timeframes (e.g., \"1 week\", \"2-3 months\", \"long-term\")."
        },
        {
          "name": "geography_relevance",
          "type": "VARCHAR",
          "description": "Indicates the geographic relevance of the catalyst type.  Possible values describe the scope, such as 'local', 'regional', 'national', 'global', or 'none'."
        },
        {
          "name": "description",
          "type": "TEXT",
          "description": "A textual description of the catalyst type.  This field can contain detailed information about the catalyst's properties, applications, and other relevant characteristics."
        },
        {
          "name": "catalyst_type)",
          "type": "TYPE_UNKNOWN",
          "description": "`catalyst_type (TYPE_UNKNOWN)` in the `catalyst_types` table stores the type of catalyst.  The specific format of this type is currently unknown and requires further investigation."
        }
      ]
    },
    {
      "table_name": "related_catalysts",
      "description": "The `related_catalysts` table stores information about relationships between different catalysts. It links a source catalyst to a related catalyst, specifying the type of relationship, expected time gap between their occurrences, the strength of the relationship, any relevant notes, and the ID of the primary source supporting the relationship.  The `id` column serves as a unique identifier for each relationship record. Note: the columns `related_catalyst_id` and `relationship_type` appear to be duplicated.  This redundancy should likely be addressed.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`related_catalysts.id`: A unique, automatically incrementing integer that serves as the primary key for the `related_catalysts` table."
        },
        {
          "name": "source_catalyst_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `catalysts` table.  Identifies the catalyst that triggered or initiated the relationship with another catalyst in the `related_catalysts` table."
        },
        {
          "name": "related_catalyst_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `catalysts` table.  Identifies the catalyst related to the entry in this `related_catalysts` table.  Nullable to allow for entries representing catalysts without a defined related catalyst."
        },
        {
          "name": "relationship_type",
          "type": "VARCHAR",
          "description": "Defines the type of relationship between two catalysts linked in the `related_catalysts` table.  Examples could include \"precursor\", \"product\", \"inhibitor\", \"promoter\", etc."
        },
        {
          "name": "expected_time_gap",
          "type": "VARCHAR",
          "description": "`expected_time_gap` (VARCHAR):  Represents the expected time difference between the occurrence of related catalysts.  This value can be a human-readable format (e.g., \"1 day\", \"3 weeks\", \"2 months\") or a specific format defined elsewhere in the documentation."
        },
        {
          "name": "relationship_strength",
          "type": "VARCHAR",
          "description": "`relationship_strength` (VARCHAR):  Represents the qualitative strength of the relationship between two catalysts in the `related_catalysts` table.  Possible values might include \"weak,\" \"moderate,\" \"strong,\" or other descriptive terms."
        },
        {
          "name": "notes",
          "type": "TEXT",
          "description": "Additional notes or comments related to the association between catalysts recorded in the `related_catalysts` table. This field allows for free-form text input."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `catalysts` table.  Identifies the primary catalyst associated with a related catalyst record."
        },
        {
          "name": "related_catalyst_id",
          "type": "TYPE_UNKNOWN",
          "description": "`related_catalyst_id` (TYPE_UNKNOWN):  Foreign key referencing a catalyst record. The specific type is currently unknown and requires further investigation.  This column in the `related_catalysts` table likely links to a primary key in another table identifying a related catalyst."
        },
        {
          "name": "relationship_type)",
          "type": "TYPE_UNKNOWN",
          "description": "`relationship_type (TYPE_UNKNOWN)` in the `related_catalysts` table defines the nature of the relationship between two catalysts.  The specific format of this column is currently undocumented and requires further investigation."
        }
      ]
    },
    {
      "table_name": "catalyst_impact_tracking",
      "description": "The `catalyst_impact_tracking` table tracks the impact of specific catalysts (e.g., programs, initiatives, events) on various metrics.  It stores pre- and post-event values for each impact metric, along with the measurement timeframe, geographical area, a description of the impact, whether the impact was expected, the data source, raw data, a link to the primary source, and relevant IDs.  This table allows for analysis of catalyst effectiveness and identification of unintended consequences.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique identifier for each entry in the `catalyst_impact_tracking` table.  Automatically increments with each new record."
        },
        {
          "name": "catalyst_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `catalysts` table.  Identifies the specific catalyst associated with the impact being tracked."
        },
        {
          "name": "impact_metric",
          "type": "VARCHAR",
          "description": "Stores the specific metric used to measure the impact of a catalyst (e.g., 'conversion rate', 'customer satisfaction', 'revenue increase')."
        },
        {
          "name": "pre_event_value",
          "type": "NUMERIC",
          "description": "The `pre_event_value` column in the `catalyst_impact_tracking` table stores the numeric value of a specific metric *before* a catalyst event occurs. This value is used as a baseline for comparison against the post-event value to determine the impact of the catalyst."
        },
        {
          "name": "post_event_value",
          "type": "NUMERIC",
          "description": "`post_event_value` (NUMERIC):  The numeric value of a relevant metric *after* a catalyst event has occurred. This is used in conjunction with a pre-event value to measure the impact of the catalyst."
        },
        {
          "name": "measurement_timeframe",
          "type": "VARCHAR",
          "description": "The `measurement_timeframe` column in the `catalyst_impact_tracking` table is a VARCHAR field that specifies the period over which the impact of a catalyst is measured.  This could be values like \"daily\", \"weekly\", \"monthly\", \"quarterly\", or \"yearly\"."
        },
        {
          "name": "geography_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a geographical area (e.g., country, region, city) in a lookup table.  Used to track the location of impact for catalyst initiatives."
        },
        {
          "name": "impact_description",
          "type": "TEXT",
          "description": "`impact_description`:  (TEXT) A detailed description of the observed impact of a catalyst, including qualitative and/or quantitative details.  This field provides context and specific information about the effects of the catalyst."
        },
        {
          "name": "was_expected",
          "type": "BOOLEAN",
          "description": "Indicates whether the observed impact of the catalyst was expected (true) or unexpected (false).  This field helps track the accuracy of impact predictions within the catalyst impact tracking table."
        },
        {
          "name": "data_source",
          "type": "VARCHAR",
          "description": "`data_source` (VARCHAR):  Indicates the origin or source of the impact data recorded in this row of the `catalyst_impact_tracking` table.  This could be a survey, an external database, manual entry, etc."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`: A JSONB column storing flexible key-value data related to the impact tracking of a catalyst within the `catalyst_impact_tracking` table. This allows for storing various metrics and information without requiring predefined schema changes."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source (e.g., document, interview, dataset) that provided the evidence for the recorded impact in the `catalyst_impact_tracking` table."
        },
        {
          "name": "impact_metric",
          "type": "TYPE_UNKNOWN",
          "description": "The `impact_metric` column in the `catalyst_impact_tracking` table stores the specific metric used to measure the impact of a catalyst.  The data type is currently `TYPE_UNKNOWN` and requires further investigation to determine the appropriate type and format. This may represent diverse metric types, requiring a flexible or generic storage approach."
        },
        {
          "name": "geography_id",
          "type": "TYPE_UNKNOWN",
          "description": "A foreign key referencing a geographical entity (specific location or region).  The exact nature of the referenced entity is currently unknown due to 'TYPE_UNKNOWN' and requires further investigation. This ID is used in the `catalyst_impact_tracking` table to associate impact data with a specific geography."
        },
        {
          "name": "measurement_timeframe)",
          "type": "TYPE_UNKNOWN",
          "description": "`measurement_timeframe` (TYPE_UNKNOWN) - The period over which the impact of a catalyst is measured within the `catalyst_impact_tracking` table.  The specific format of this field is currently undocumented and requires further investigation."
        }
      ]
    },
    {
      "table_name": "currencies",
      "description": "The `currencies` table stores information about different monetary currencies.  Each currency is uniquely identified by an `id` and includes its code (`currency_code`), full name (`currency_name`), active status (`is_active`), number of decimal places used (`decimal_places`), and its symbol (`symbol`).",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique, auto-incrementing integer serving as the primary key for each currency record in the `currencies` table."
        },
        {
          "name": "currency_code",
          "type": "VARCHAR(3)",
          "description": "The `currency_code` column in the `currencies` table stores a three-character string representing the ISO 4217 currency code (e.g., USD, EUR, GBP).  This code uniquely identifies a particular currency."
        },
        {
          "name": "currency_name",
          "type": "VARCHAR",
          "description": "The `currency_name` column in the `currencies` table stores the official name of a currency as a string (VARCHAR).  For example, \"US Dollar\", \"Euro\", or \"Japanese Yen\"."
        },
        {
          "name": "is_active",
          "type": "BOOLEAN",
          "description": "Indicates whether a currency is currently active and usable.  A value of TRUE signifies active, while FALSE signifies inactive."
        },
        {
          "name": "decimal_places",
          "type": "INTEGER",
          "description": "Number of decimal places to use when displaying or storing amounts for this currency.  For example, 2 for USD (dollars and cents) or 0 for JPY (yen)."
        },
        {
          "name": "symbol",
          "type": "VARCHAR(10)",
          "description": "The `symbol` column in the `currencies` table is a string (VARCHAR) with a maximum length of 10 characters, representing the currency symbol (e.g., $, \u20ac, \u00a5, \u00a3)."
        }
      ]
    },
    {
      "table_name": "exchange_rate_history",
      "description": "The `exchange_rate_history` table stores historical exchange rates between different currencies.  Each record represents the exchange rate between a base currency and a target currency on a specific date.  It includes the rate value, the source of the rate, flags indicating whether the rate is official, end-of-period, or an average, and allows for additional notes.  Tracking information such as creation date and user is also included.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each historical exchange rate record. Automatically increments with each new entry.  Serves as the primary key for the `exchange_rate_history` table."
        },
        {
          "name": "base_currency_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'currencies' table (or similar).  Identifies the base currency for the exchange rate recorded in this row."
        },
        {
          "name": "target_currency_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `currency` table (presumably via `currency.id`).  Indicates the target currency for the exchange rate recorded in this row of the `exchange_rate_history` table."
        },
        {
          "name": "effective_date",
          "type": "DATE",
          "description": "The `effective_date` column in the `exchange_rate_history` table stores the date on which a specific exchange rate became or becomes effective.  It is of type `DATE` and thus stores only the date (year, month, day) with no time component."
        },
        {
          "name": "rate_value",
          "type": "NUMERIC(20",
          "description": "The `rate_value` column in the `exchange_rate_history` table stores the numeric value of the exchange rate. It uses the `NUMERIC(20)` data type, allowing for high precision storage of the rate."
        },
        {
          "name": "10)",
          "type": "NOT",
          "description": "This column, named `10)` (which is a poor choice for a column name due to the special character and lack of descriptiveness), uses a non-standard `NOT` data type in the `exchange_rate_history` table.  Its purpose is unclear and requires further investigation.  The name strongly suggests a data modeling error or a misinterpretation of the data structure.  It likely does *not* store a boolean NOT value as the name might imply. Renaming and determining the correct data type is highly recommended."
        },
        {
          "name": "rate_source",
          "type": "VARCHAR",
          "description": "Indicates the source of the exchange rate, such as \"Open Exchange Rates\", \"Bank of England\", or \"Internal\"."
        },
        {
          "name": "is_official",
          "type": "BOOLEAN",
          "description": "Indicates whether the exchange rate is from an official source (e.g., central bank) or an unofficial one (e.g., a market aggregator).  TRUE represents an official rate, FALSE represents an unofficial rate."
        },
        {
          "name": "is_eop",
          "type": "BOOLEAN",
          "description": "Indicates whether the exchange rate is an End-Of-Period (EOP) rate.  A value of TRUE signifies an EOP rate, while FALSE signifies an intra-day or other non-EOP rate."
        },
        {
          "name": "is_average",
          "type": "BOOLEAN",
          "description": "Indicates whether the exchange rate value represents an average rate for the period, as opposed to a spot rate at a specific point in time.  `TRUE` signifies an average rate, `FALSE` signifies a spot rate."
        },
        {
          "name": "notes",
          "type": "TEXT",
          "description": "Additional notes or comments related to a specific exchange rate record, such as unusual market conditions or data source anomalies."
        },
        {
          "name": "created_at",
          "type": "TIMESTAMP",
          "description": "`created_at` (TIMESTAMP):  Records the timestamp of when the exchange rate entry was created in the `exchange_rate_history` table."
        },
        {
          "name": "created_by",
          "type": "VARCHAR",
          "description": "Stores the identifier (e.g., username, system ID) of the entity that created the exchange rate record."
        },
        {
          "name": "target_currency_id",
          "type": "TYPE_UNKNOWN",
          "description": "`target_currency_id` (TYPE_UNKNOWN):  Identifies the target currency for the exchange rate recorded in the `exchange_rate_history` table.  Further investigation is needed to determine the specific data type and its relationship to other tables (e.g., a currency lookup table)."
        },
        {
          "name": "effective_date",
          "type": "TYPE_UNKNOWN",
          "description": "The `effective_date` column in the `exchange_rate_history` table stores the date on which a specific exchange rate becomes or became active.  The data type is currently unknown (TYPE_UNKNOWN) and requires further investigation."
        },
        {
          "name": "is_eop",
          "type": "TYPE_UNKNOWN",
          "description": "`is_eop` (TYPE_UNKNOWN):  Indicates an unknown property related to the exchange rate, possibly signifying \"End of Period\" or a similar concept.  Further investigation is needed to determine the exact meaning and appropriate data type."
        },
        {
          "name": "is_average)",
          "type": "TYPE_UNKNOWN",
          "description": "`is_average` (TYPE_UNKNOWN):  Purpose unknown.  Further investigation needed to determine the meaning and usage of this flag in the `exchange_rate_history` table.  It may indicate whether the exchange rate value is an average over a period."
        }
      ]
    },
    {
      "table_name": "currency_settings",
      "description": "The `currency_settings` table stores configurable currency-related settings. Each setting (e.g., \"default payment currency\", \"reporting currency\") is identified by a unique ID and name, and can be applied to a specific context (e.g., \"website\", \"mobile app\").  It holds the ID of the default currency for that setting, along with its effective date range.  The table also tracks creation timestamps and the user responsible.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique auto-incrementing integer representing the primary key for each currency setting record in the `currency_settings` table."
        },
        {
          "name": "setting_name",
          "type": "VARCHAR",
          "description": "`setting_name` (VARCHAR):  The name of the currency setting, e.g., 'default_currency', 'exchange_rate_api_key', 'display_format'."
        },
        {
          "name": "setting_context",
          "type": "VARCHAR",
          "description": "`setting_context` (VARCHAR):  Defines the context or scope of the currency setting (e.g., 'global', 'regional', 'user', 'product_category').  Allows for granular control over currency application."
        },
        {
          "name": "default_currency_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `currencies` table.  Indicates the default currency used for transactions and reporting within the application for a given currency setting."
        },
        {
          "name": "effective_from",
          "type": "DATE",
          "description": "The `effective_from` column in the `currency_settings` table stores the date (DATE) from which a specific currency setting becomes active or valid."
        },
        {
          "name": "effective_to",
          "type": "DATE",
          "description": "The `effective_to` column of type `DATE` in the `currency_settings` table specifies the end date (inclusive) for which a particular currency setting is valid.  A NULL value indicates that the setting is currently active and has no defined end date."
        },
        {
          "name": "created_at",
          "type": "TIMESTAMP",
          "description": "`created_at` (TIMESTAMP):  Records the date and time when a specific currency setting was created in the system."
        },
        {
          "name": "created_by",
          "type": "VARCHAR",
          "description": "Stores the identifier (e.g., username or ID) of the user who created the currency setting.  This is a string value."
        },
        {
          "name": "setting_context",
          "type": "TYPE_UNKNOWN",
          "description": "`setting_context` (TYPE_UNKNOWN):  The context or scope for which this currency setting applies.  Further investigation is needed to determine the specific data type and possible values."
        },
        {
          "name": "effective_from)",
          "type": "TYPE_UNKNOWN",
          "description": "`effective_from` (TYPE_UNKNOWN) in the `currency_settings` table likely indicates the date or timestamp from which a particular currency setting becomes active or valid.  The unknown type suggests further investigation is needed to determine the precise data type (e.g., DATE, TIMESTAMP)."
        }
      ]
    },
    {
      "table_name": "company_financial_data",
      "description": "The `company_financial_data` table stores standardized financial data extracted from various sources for different companies.  It includes both the original and standardized metric names, periods, currencies, and amounts, along with details about the data source, extraction process, and confidence in the extracted data.  Key fields include `company_id` linking to the company, `standard_metric_type` and `standard_period_type` for consistent reporting, and `as_of_date` representing the reporting date.  The `data` column allows for storing additional unstructured data related to the financial metric. Note: `standard_metric_type`, `standard_period_type`, and `standard_period_value` appear to be duplicated.  This redundancy should be addressed.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each record in the `company_financial_data` table.  Automatically increments with each new entry. Serves as the primary key."
        },
        {
          "name": "company_id",
          "type": "INTEGER",
          "description": "`company_id` (INTEGER):  A unique identifier referencing the company whose financial data is stored in this row. Foreign key referencing the `company` table."
        },
        {
          "name": "standard_metric_type",
          "type": "VARCHAR",
          "description": "`standard_metric_type` (VARCHAR):  Indicates the type of standardized financial metric stored in this row.  Examples include 'revenue', 'net_income', 'eps', 'debt_to_equity_ratio', etc.  This allows for consistent categorization and retrieval of financial data across different companies."
        },
        {
          "name": "original_metric_name",
          "type": "VARCHAR",
          "description": "Stores the original, unaltered name of the financial metric as it was received from the source. This allows tracking and verification against the potentially standardized or cleaned metric name used elsewhere in the database."
        },
        {
          "name": "standard_period_type",
          "type": "VARCHAR",
          "description": "`standard_period_type`: (VARCHAR)  Indicates the type of standard reporting period for the financial data.  Examples include 'Q' (Quarterly), 'HY' (Half-Yearly), 'FY' (Fiscal Year), 'TTM' (Trailing Twelve Months), or 'YTD' (Year-to-Date)."
        },
        {
          "name": "standard_period_value",
          "type": "VARCHAR",
          "description": "`standard_period_value` (VARCHAR):  Stores the standardized reporting period for the financial data, such as \"FY2023\", \"Q1 2024\", or \"TTM\".  This allows for consistent comparison across different financial statements and companies."
        },
        {
          "name": "original_period_name",
          "type": "VARCHAR",
          "description": "Stores the original, unstandardized name of the financial reporting period (e.g., \"Q1 2023\", \"FY22\", \"Six Months Ended June 30, 2023\").  This preserves the period name as provided in the source data before any normalization or standardization."
        },
        {
          "name": "period_start_date",
          "type": "DATE",
          "description": "The `period_start_date` column in the `company_financial_data` table stores the starting date of a financial reporting period (e.g., quarter, year) as a DATE value.  This date indicates the first day included in the financial data for that period."
        },
        {
          "name": "period_end_date",
          "type": "DATE",
          "description": "`period_end_date` (DATE): The date on which the reporting period for the financial data in this record ended.  This field is within the `company_financial_data` table."
        },
        {
          "name": "amount",
          "type": "NUMERIC",
          "description": "The `amount` column in the `company_financial_data` table stores monetary values (e.g., revenue, expenses, profit) as NUMERIC data, allowing for precise representation of decimal numbers."
        },
        {
          "name": "original_currency",
          "type": "VARCHAR",
          "description": "Stores the three-letter ISO 4217 code representing the original currency in which the company's financial data was reported."
        },
        {
          "name": "standardized_currency",
          "type": "VARCHAR",
          "description": "`standardized_currency`:  (VARCHAR) The currency code used for reporting financial data, standardized to a specific format (e.g., ISO 4217) to ensure consistency across all company records.  Examples: USD, EUR, JPY."
        },
        {
          "name": "standardized_amount",
          "type": "NUMERIC",
          "description": "standardized_amount (NUMERIC):  A normalized financial amount, allowing for consistent comparison across different currencies and reporting periods.  This value is typically derived from the original reported amount."
        },
        {
          "name": "fx_rate",
          "type": "NUMERIC",
          "description": "The `fx_rate` column in the `company_financial_data` table stores the foreign exchange rate used for currency conversion of financial data.  This NUMERIC value represents the rate at which one currency is exchanged for another."
        },
        {
          "name": "as_of_date",
          "type": "DATE",
          "description": "`as_of_date` (DATE): The date for which the financial data in this row is valid.  Represents the snapshot date of the company's financials within the `company_financial_data` table."
        },
        {
          "name": "confidence_score",
          "type": "FLOAT",
          "description": "`confidence_score` (FLOAT):  A numerical representation of the reliability or accuracy of the associated financial data for the company.  Higher values indicate greater confidence."
        },
        {
          "name": "source_document",
          "type": "VARCHAR",
          "description": "`source_document` (VARCHAR):  Identifies the original source document (e.g., \"10-K filing\", \"Annual Report\", \"Press Release\") from which the corresponding financial data was extracted."
        },
        {
          "name": "extraction_notes",
          "type": "TEXT",
          "description": "`extraction_notes`:  (TEXT) Contains any relevant notes or observations regarding the extraction process for the associated financial data. This might include details about data sources, transformations applied, or any anomalies encountered."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing various company financial data points.  This flexible format allows for storing nested structures and different data types related to financials, enabling efficient querying and analysis."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `primary_sources` table.  Identifies the primary source (e.g., SEC filing, press release) from which the financial data for this company was obtained."
        },
        {
          "name": "standard_metric_type",
          "type": "TYPE_UNKNOWN",
          "description": "`standard_metric_type` (TYPE_UNKNOWN):  Indicates the type of standardized metric stored in associated columns, though the specific meaning of TYPE_UNKNOWN is currently undefined and requires further investigation. This column likely needs to be updated with a more descriptive type.  Relates to financial data for a company in the `company_financial_data` table."
        },
        {
          "name": "standard_period_type",
          "type": "TYPE_UNKNOWN",
          "description": "`standard_period_type` (TYPE_UNKNOWN) -  The type of standard reporting period used for this company's financial data.  Further investigation is needed to determine the specific meaning and possible values for this column as the data type is currently unknown."
        },
        {
          "name": "standard_period_value)",
          "type": "TYPE_UNKNOWN",
          "description": "`standard_period_value` (TYPE_UNKNOWN) in the `company_financial_data` table represents a value associated with a standard reporting period.  The specific meaning and units of this value are currently unknown and require further investigation."
        }
      ]
    },
    {
      "table_name": "financial_metric_synonyms",
      "description": "The `financial_metric_synonyms` table stores mappings between non-standard financial metric terms used by specific companies and their standardized equivalents.  It allows for variations in terminology (e.g., \"Revenue\" vs. \"Sales\") to be normalized for consistent reporting and analysis. Each entry includes the original term, its standardized counterpart, the context in which the original term was used, a confidence score for the mapping, the company using the original term, and the last updated timestamp. The `id` column serves as a unique identifier for each synonym mapping.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id`:  A unique, auto-incrementing integer serving as the primary key for the `financial_metric_synonyms` table."
        },
        {
          "name": "company_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `companies` table.  Uniquely identifies the company for which the financial metric synonym is defined."
        },
        {
          "name": "original_term",
          "type": "VARCHAR",
          "description": "The `original_term` column (VARCHAR) in the `financial_metric_synonyms` table stores the primary or original name of a financial metric. This is the term for which synonyms are defined in other columns of this table."
        },
        {
          "name": "standard_term",
          "type": "VARCHAR",
          "description": "The `standard_term` column (VARCHAR) in the `financial_metric_synonyms` table stores the standardized or preferred term for a financial metric.  This acts as the primary key for grouping together various synonyms."
        },
        {
          "name": "context",
          "type": "VARCHAR",
          "description": "Contextual information or category related to the financial metric synonym.  This helps differentiate synonyms with similar names but different meanings based on their usage (e.g., \"Revenue\" in the context of \"Sales\" vs. \"Revenue\" in the context of \"Government\")."
        },
        {
          "name": "confidence",
          "type": "FLOAT",
          "description": "Confidence score (FLOAT) representing the system's certainty that the synonym relationship between two financial metrics is accurate.  Higher values indicate greater confidence."
        },
        {
          "name": "last_updated",
          "type": "TIMESTAMP",
          "description": "`last_updated` (TIMESTAMP):  Records the date and time when the synonym entry was last modified."
        },
        {
          "name": "original_term",
          "type": "TYPE_UNKNOWN",
          "description": "The `original_term` column in the `financial_metric_synonyms` table stores the initial, unnormalized name of a financial metric. Its data type is currently `TYPE_UNKNOWN`, requiring further investigation to determine the appropriate type (e.g., VARCHAR, TEXT) and ensure data integrity.  This column likely serves as the basis for generating synonyms and standardized versions of the metric name."
        },
        {
          "name": "context)",
          "type": "TYPE_UNKNOWN",
          "description": "`context` (TYPE_UNKNOWN):  The context or domain in which the synonym applies.  Further details on the format and possible values of this field are currently unavailable."
        }
      ]
    },
    {
      "table_name": "financial_period_mappings",
      "description": "The `financial_period_mappings` table stores the relationships between a company's original financial periods and standardized periods.  It maps each `original_period` (from the company's specific system) to a `standard_period_type` (e.g., 'Fiscal Quarter', 'Calendar Month') and `standard_period_value` (e.g., 'Q1', 'January').  Start and end dates for each period are included, along with optional `mapping_notes`. `company_id` links the mapping to a specific company, and `last_updated` tracks the most recent modification time.  `id` serves as the primary key. Note there is a redundant `original_period` column listed.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each financial period mapping record.  Automatically increments upon insertion.  Serves as the primary key for the `financial_period_mappings` table."
        },
        {
          "name": "company_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `companies` table.  Identifies the company to which the financial period mapping belongs."
        },
        {
          "name": "original_period",
          "type": "VARCHAR",
          "description": "Stores the original, unmapped financial period value as a string. This represents the period designation before any transformation or mapping to a standardized period."
        },
        {
          "name": "standard_period_type",
          "type": "VARCHAR",
          "description": "The `standard_period_type` column in the `financial_period_mappings` table stores a string value representing the standardized type of a financial period.  This could include values like 'Month', 'Quarter', 'Year', etc., allowing for consistent categorization and comparison of periods across different financial systems or reporting requirements."
        },
        {
          "name": "standard_period_value",
          "type": "VARCHAR",
          "description": "The `standard_period_value` column in the `financial_period_mappings` table stores a string representation of a standardized financial period. This value is used for mapping and comparing financial periods across different systems or reporting requirements."
        },
        {
          "name": "period_start_date",
          "type": "DATE",
          "description": "The `period_start_date` column in the `financial_period_mappings` table stores the starting date of a financial period.  This column is of type `DATE` and holds only the date portion (year, month, and day)."
        },
        {
          "name": "period_end_date",
          "type": "DATE",
          "description": "The `period_end_date` column in the `financial_period_mappings` table stores the date on which a given financial period ends.  This column is of type `DATE` and  represents the last calendar day included in the financial period."
        },
        {
          "name": "mapping_notes",
          "type": "TEXT",
          "description": "Stores any relevant notes or comments regarding the mapping of financial periods, such as explanations for discrepancies or rationale behind specific mapping choices."
        },
        {
          "name": "last_updated",
          "type": "TIMESTAMP",
          "description": "`last_updated` (TIMESTAMP): Records the date and time when the financial period mapping was last modified."
        },
        {
          "name": "original_period)",
          "type": "TYPE_UNKNOWN",
          "description": "`original_period` (TYPE_UNKNOWN) in the `financial_period_mappings` table stores the original period value before any mapping or transformation. The specific data type is currently unknown and requires further investigation.  This field likely relates to how financial periods are represented in a source system before being mapped to a standardized period within the current system."
        }
      ]
    },
    {
      "table_name": "company_fiscal_calendars",
      "description": "The `company_fiscal_calendars` table stores the fiscal year configurations for different companies.  Each record defines a company's fiscal year-end month and day, how quarters are aligned, the notation used for fiscal years, and the effective date range for this configuration.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id`:  Unique serial number automatically generated for each fiscal calendar entry within the `company_fiscal_calendars` table. Serves as the primary key."
        },
        {
          "name": "company_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `companies` table.  Uniquely identifies the company for which the fiscal calendar is defined."
        },
        {
          "name": "fiscal_year_end_month",
          "type": "INTEGER",
          "description": "Indicates the month (represented as an integer from 1 to 12) in which the company's fiscal year ends. This column is part of the `company_fiscal_calendars` table."
        },
        {
          "name": "fiscal_year_end_day",
          "type": "INTEGER",
          "description": "Day of the month (1-31) on which the company's fiscal year ends.  Stored as an integer."
        },
        {
          "name": "quarters_alignment",
          "type": "TEXT",
          "description": "Specifies the alignment of fiscal quarters relative to calendar quarters.  Stores textual descriptions such as \"Standard Calendar\", \"Offset by one month\", or other custom alignments."
        },
        {
          "name": "fiscal_year_notation",
          "type": "VARCHAR",
          "description": "`fiscal_year_notation`: (VARCHAR) Represents the notation used to denote the fiscal year.  Examples include `FY2024`, `2024`, `FY24`, or `24`.  This allows for flexibility in how different companies represent their fiscal periods."
        },
        {
          "name": "effective_from",
          "type": "DATE",
          "description": "The `effective_from` column of type `DATE` in the `company_fiscal_calendars` table specifies the start date from which a given fiscal calendar is valid for a company."
        },
        {
          "name": "effective_to",
          "type": "DATE",
          "description": "The `effective_to` column of type `DATE` in the `company_fiscal_calendars` table specifies the end date of a given fiscal calendar's validity.  This date indicates when the fiscal calendar is no longer active or applicable."
        },
        {
          "name": "effective_from)",
          "type": "TYPE_UNKNOWN",
          "description": "`effective_from` (TYPE_UNKNOWN):  The date when the fiscal calendar becomes effective for the company.  Further investigation is needed to determine the specific data type (e.g., DATE, TIMESTAMP)."
        }
      ]
    },
    {
      "table_name": "business_deals",
      "description": "The `business_deals` table stores information about business transactions, including mergers, acquisitions, joint ventures, and licensing agreements.  It tracks key deal details like names, types, statuses, dates, financial terms (upfront payments, milestones, royalties, total potential value), strategic rationale, and involved companies.  The table also includes fields for data provenance (source and update date), complex deal structures (multiparty, partial divestiture), and financial specifics (tax and financing).",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each business deal. Automatically increments upon insertion of a new row. Serves as the primary key for the `business_deals` table."
        },
        {
          "name": "deal_name",
          "type": "VARCHAR",
          "description": "`deal_name` (VARCHAR):  The name or title of the business deal."
        },
        {
          "name": "deal_type",
          "type": "VARCHAR",
          "description": "Classifies the type of business deal (e.g., acquisition, merger, partnership, licensing, etc.)."
        },
        {
          "name": "status",
          "type": "VARCHAR",
          "description": "The `status` column in the `business_deals` table is a VARCHAR field that stores the current state of a business deal, e.g., \"Pending,\" \"Completed,\" \"Cancelled,\" etc."
        },
        {
          "name": "announcement_date",
          "type": "DATE",
          "description": "The `announcement_date` column in the `business_deals` table stores the date on which a business deal was officially announced.  It is of `DATE` type, storing only the date (year, month, and day) without time components."
        },
        {
          "name": "closing_date",
          "type": "DATE",
          "description": "`closing_date` (DATE):  The date on which a business deal was finalized or closed in the `business_deals` table."
        },
        {
          "name": "start_date",
          "type": "DATE",
          "description": "The `start_date` column in the `business_deals` table stores the date on which a business deal commenced.  It is of the `DATE` data type, storing the year, month, and day."
        },
        {
          "name": "end_date",
          "type": "DATE",
          "description": "`end_date` (DATE):  The date on which a business deal concludes or expires."
        },
        {
          "name": "upfront_payment",
          "type": "NUMERIC",
          "description": "The `upfront_payment` column in the `business_deals` table stores the amount of money paid upfront for a business deal.  This is a NUMERIC value, allowing for precise representation of monetary amounts."
        },
        {
          "name": "upfront_currency",
          "type": "VARCHAR",
          "description": "Three-letter ISO 4217 currency code for the upfront payment amount in the business deal."
        },
        {
          "name": "standardized_upfront",
          "type": "NUMERIC",
          "description": "The `standardized_upfront` column in the `business_deals` table stores the standardized upfront cost or payment associated with a business deal, represented as a numeric value.  This likely represents a normalized value for comparison across different deals, potentially adjusted for currency, time period, or other relevant factors."
        },
        {
          "name": "standardized_currency_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `currencies` table. Stores the ID of the standardized currency used for the business deal, ensuring consistent currency representation across all deals."
        },
        {
          "name": "fx_rate_used",
          "type": "NUMERIC(20",
          "description": "The `fx_rate_used` column in the `business_deals` table stores the foreign exchange rate applied to the deal.  It is a numeric value with a precision of 20 digits. This rate is used for currency conversion calculations within the deal."
        },
        {
          "name": "10)",
          "type": "TYPE_UNKNOWN",
          "description": "`10)` (TYPE_UNKNOWN) -  The purpose of this column in the `business_deals` table is currently unknown.  Further investigation is needed to determine its meaning and usage.  The name \"10)\" suggests a potential naming error or automated generation."
        },
        {
          "name": "fx_rate_date",
          "type": "DATE",
          "description": "`fx_rate_date` (DATE): Stores the date for which the foreign exchange rate is applicable in a business deal.  This date determines the exchange rate used for currency conversion calculations related to the deal."
        },
        {
          "name": "milestone_payments",
          "type": "JSONB",
          "description": "`milestone_payments` (JSONB): Stores an array of objects, each representing a payment tied to a specific milestone in the business deal.  Each object within the array typically includes details such as the milestone description, due date, and payment amount.  This allows for flexible tracking of payments associated with different stages of the deal."
        },
        {
          "name": "royalty_structure",
          "type": "JSONB",
          "description": "Stores the royalty payment structure for a business deal as a JSON object. This could include rates, tiers, payment schedules, or any other relevant details about how royalties are calculated and distributed."
        },
        {
          "name": "total_potential_value",
          "type": "NUMERIC",
          "description": "The `total_potential_value` column in the `business_deals` table stores the total estimated monetary value a business deal could generate if successful.  This value is represented as a NUMERIC data type, allowing for precise representation of monetary amounts."
        },
        {
          "name": "value_currency",
          "type": "VARCHAR",
          "description": "`value_currency` (VARCHAR):  A three-letter ISO 4217 currency code representing the currency in which the value of the business deal is expressed (e.g., USD, EUR, GBP)."
        },
        {
          "name": "strategic_rationale",
          "type": "TEXT",
          "description": "Provides a text description outlining the strategic reasons and justifications for a particular business deal.  This may include market analysis, competitive advantages gained, alignment with long-term goals, and expected return on investment."
        },
        {
          "name": "portfolio_impact",
          "type": "TEXT",
          "description": "`portfolio_impact`:  A text description of the anticipated impact this business deal will have on the company's overall portfolio (e.g., market expansion, diversification, increased revenue, etc.)."
        },
        {
          "name": "synergy_potential",
          "type": "TEXT",
          "description": "synergy_potential (TEXT): Describes the potential synergistic benefits that could be realized from this business deal, such as cost savings, increased market share, or expansion into new product lines."
        },
        {
          "name": "integration_plan",
          "type": "TEXT",
          "description": "Stores the integration plan, outlining the steps and processes involved in integrating the acquired business or asset into the existing company structure, following the successful closure of the business deal. This field can contain a detailed textual description, potentially including timelines, responsible parties, and key integration milestones."
        },
        {
          "name": "company_acquirer_id",
          "type": "INTEGER",
          "description": "`company_acquirer_id` (INTEGER):  Foreign key referencing the ID of the company that acquired another company in a business deal.  NULL if the deal was not an acquisition."
        },
        {
          "name": "company_target_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'target_companies' table.  Identifies the target company involved in the business deal."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value data related to the business deal. This allows for storing various deal-specific attributes that don't fit neatly into traditional columns, such as custom fields, configurations, or nested information."
        },
        {
          "name": "is_multiparty",
          "type": "BOOLEAN",
          "description": "Indicates whether the business deal involves multiple parties (true) or is a bilateral agreement (false)."
        },
        {
          "name": "is_partial_divestiture",
          "type": "BOOLEAN",
          "description": "Indicates whether the business deal represents a partial divestiture (selling off a portion of a business) as opposed to a full divestiture.  TRUE signifies a partial divestiture, FALSE signifies it is not."
        },
        {
          "name": "deal_structure",
          "type": "VARCHAR",
          "description": "Stores a textual description of the deal structure, such as \"Joint Venture,\" \"Acquisition,\" \"Merger,\" \"Licensing Agreement,\" etc."
        },
        {
          "name": "tax_structure",
          "type": "VARCHAR",
          "description": "`tax_structure` (VARCHAR): Defines the applicable tax structure for the business deal (e.g., 'standard', 'VAT', 'GST', 'exempt')."
        },
        {
          "name": "financing_structure",
          "type": "JSONB",
          "description": "Stores a flexible JSON document outlining the financing details of a business deal, including elements like debt/equity mix, loan terms, investor contributions, and other relevant financial instruments.  This allows for complex financing arrangements to be represented in a structured manner."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source (e.g., lead, marketing campaign) that led to this business deal.  Allows tracking the origin of each deal."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time of the most recent modification to the business deal information in the `business_deals` table."
        }
      ]
    },
    {
      "table_name": "investments",
      "description": "The `investments` table stores details of investment rounds.  Each record represents a single investment from an investor (`investor_id`) into a company (`company_id`).  It tracks the `investment_type`, `amount` invested in the original `currency`, the `standardized_amount` in a common currency (`standardized_currency_id`), the `fx_rate_used` for standardization, the date the exchange rate was retrieved (`fx_rate_date`), the `investment_date`, the company's `post_money_valuation` after the investment, additional `data` (if any), and the `primary_source_id` verifying the investment information.  Note: `investor_id`, `investment_type`, and `investment_date` appear to be duplicated column names.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each investment record. Automatically increments on insertion. Serves as the primary key for the `investments` table."
        },
        {
          "name": "company_id",
          "type": "INTEGER",
          "description": "`company_id` (INTEGER):  A foreign key referencing the unique identifier of a company in the 'companies' table.  This column identifies the company associated with a particular investment record."
        },
        {
          "name": "investor_id",
          "type": "INTEGER",
          "description": "`investor_id` (INTEGER):  A unique identifier referencing the investor who made the investment. This foreign key links to the `id` column in the `investors` table."
        },
        {
          "name": "investment_type",
          "type": "VARCHAR",
          "description": "Classifies the type of investment, e.g., 'Stocks', 'Bonds', 'Real Estate', 'Cryptocurrency', etc."
        },
        {
          "name": "amount",
          "type": "NUMERIC",
          "description": "The `amount` column in the `investments` table stores the monetary value of an investment, represented as a NUMERIC data type. This allows for precise storage of decimal values, ensuring accurate representation of investment amounts."
        },
        {
          "name": "currency",
          "type": "VARCHAR",
          "description": "The `currency` column in the `investments` table is a VARCHAR field that stores the three-letter ISO 4217 currency code (e.g., USD, EUR, GBP) representing the currency in which the investment is denominated."
        },
        {
          "name": "standardized_amount",
          "type": "NUMERIC",
          "description": "Standardized investment amount, normalized to a common currency and scale for comparison purposes."
        },
        {
          "name": "standardized_currency_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `currencies` table. Stores the ID of the currency to which all investment amounts are standardized for reporting and analysis."
        },
        {
          "name": "fx_rate_used",
          "type": "NUMERIC(20",
          "description": "The `fx_rate_used` column in the `investments` table stores the foreign exchange rate used for currency conversion, with a precision of up to 20 digits. This rate is applied when the investment currency differs from the reporting currency."
        },
        {
          "name": "10)",
          "type": "TYPE_UNKNOWN",
          "description": "Column '10)' in the 'investments' table has an unknown data type (TYPE_UNKNOWN). Its purpose and usage are currently undefined and require further investigation.  It is likely an error or artifact and should be handled with caution."
        },
        {
          "name": "fx_rate_date",
          "type": "DATE",
          "description": "The `fx_rate_date` column in the `investments` table stores the date for which the foreign exchange rate applies.  This date is used to determine the exchange rate used for currency conversions related to the investment."
        },
        {
          "name": "investment_date",
          "type": "DATE",
          "description": "The `investment_date` column in the `investments` table stores the date on which a particular investment was made.  It is of type `DATE` and therefore holds only the date portion (year, month, and day) without any time information."
        },
        {
          "name": "post_money_valuation",
          "type": "NUMERIC",
          "description": "The `post_money_valuation` column in the `investments` table stores the estimated value of a company after an investment round has been completed.  This value is stored as a NUMERIC, representing the total value in the relevant currency (e.g., USD, EUR)."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible, key-value investment details. This allows for storing varied attributes related to an investment without requiring schema changes."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source document (e.g., contract, prospectus) related to this investment."
        },
        {
          "name": "investor_id",
          "type": "TYPE_UNKNOWN",
          "description": "`investor_id` (TYPE_UNKNOWN):  A unique identifier for the investor associated with this investment record.  The specific data type is currently unknown and requires further investigation."
        },
        {
          "name": "investment_type",
          "type": "TYPE_UNKNOWN",
          "description": "The `investment_type` column in the `investments` table stores the type of investment.  The specific format of this data is currently unknown (TYPE_UNKNOWN) and requires further investigation."
        },
        {
          "name": "investment_date)",
          "type": "TYPE_UNKNOWN",
          "description": "`investment_date (TYPE_UNKNOWN)` in the `investments` table stores the date of the investment.  Further investigation is needed to determine the specific data type (e.g., DATE, DATETIME, TIMESTAMP) used for this column."
        }
      ]
    },
    {
      "table_name": "transaction_parties",
      "description": "The `transaction_parties` table stores information about the parties involved in a specific deal (referenced by `deal_id`).  It details each party's role (`party_role`), their ownership stake (`ownership_percentage`), investment amount (`investment_amount` in the original `currency`), and a standardized investment amount (`standardized_amount` in the `standardized_currency_id` currency).  Flags indicate lead investors (`is_lead`) and any special rights (`special_rights`).  Strategic rationale for the investment, additional data (`data`), and the primary source of the information (`primary_source_id`) are also captured.  Note: the table definition appears to have duplicate columns for `company_id` and `party_role`. This redundancy should likely be addressed.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id`:  A unique, auto-incrementing integer that serves as the primary key for identifying each transaction party record in the `transaction_parties` table."
        },
        {
          "name": "deal_id",
          "type": "INTEGER",
          "description": "Unique identifier for the deal associated with this transaction party.  Foreign key referencing the `deal` table."
        },
        {
          "name": "company_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column in the `companies` table. Identifies the company involved in the transaction."
        },
        {
          "name": "party_role",
          "type": "VARCHAR",
          "description": "Defines the role a party plays in a transaction (e.g., buyer, seller, broker, escrow agent)."
        },
        {
          "name": "ownership_percentage",
          "type": "NUMERIC",
          "description": "Represents the percentage of ownership a party has in a given transaction.  Stored as a numeric value (e.g., 0.5 for 50%, 1.0 for 100%)."
        },
        {
          "name": "investment_amount",
          "type": "NUMERIC",
          "description": "`investment_amount` (NUMERIC):  The monetary value of the investment made by the transaction party.  "
        },
        {
          "name": "currency",
          "type": "VARCHAR",
          "description": "The `currency` column in the `transaction_parties` table is a VARCHAR field that stores the three-letter ISO 4217 currency code (e.g., USD, EUR, GBP) representing the currency associated with the transaction party's involvement."
        },
        {
          "name": "standardized_amount",
          "type": "NUMERIC",
          "description": "The `standardized_amount` column in the `transaction_parties` table stores the normalized monetary value of a transaction associated with a specific party, represented as a NUMERIC value.  This allows for consistent comparisons and calculations across different currencies or transaction types."
        },
        {
          "name": "standardized_currency_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `currencies` table. Stores the ID of the standardized currency used for the transaction amount associated with this party.  Ensures consistent currency representation across all transactions."
        },
        {
          "name": "is_lead",
          "type": "BOOLEAN",
          "description": "Indicates whether the associated transaction party is the lead party for the transaction.  TRUE if the party is the lead, FALSE otherwise."
        },
        {
          "name": "special_rights",
          "type": "TEXT",
          "description": "Special rights or privileges associated with this transaction party (e.g., veto power,  right of first refusal,  information rights).  Details should be described in free-text format."
        },
        {
          "name": "strategic_rationale",
          "type": "TEXT",
          "description": "This `TEXT` field in the `transaction_parties` table, `strategic_rationale`, describes the strategic reasons behind a given party's involvement in the transaction.  This may include motivations for buying, selling, investing, partnering, etc."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value data related to a transaction party. This allows for storing various attributes without needing to define specific columns for each, facilitating schema flexibility and accommodating evolving data requirements."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `primary_sources` table.  Identifies the primary source of the transaction party involved."
        },
        {
          "name": "company_id",
          "type": "TYPE_UNKNOWN",
          "description": "`company_id` (TYPE_UNKNOWN):  A value identifying a company associated with the transaction.  Further investigation is needed to determine the specific data type and meaning of this identifier.  It is likely a foreign key referencing a 'companies' table, but this requires confirmation."
        },
        {
          "name": "party_role)",
          "type": "TYPE_UNKNOWN",
          "description": "The `party_role` column in the `transaction_parties` table indicates the role a party plays in a given transaction.  The specific meaning of the values in this column is currently unknown (TYPE_UNKNOWN) and requires further investigation."
        }
      ]
    },
    {
      "table_name": "transaction_assets",
      "description": "The `transaction_assets` table stores details of assets involved in a specific deal.  It links to other tables (deals, drugs, combinations, regimens, research programs, patents, companies) and records asset specifics such as type, name, description, valuation, location, revenue, development stage, and related therapeutic areas and territories.  It also captures data source information and exclusivity expiration dates.  Note: `asset_type`, `asset_name`, `divesting_company_id`, and `acquiring_company_id` appear to be duplicated column names. This redundancy should likely be addressed.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each transaction asset record.  Automatically increments with each new entry.  Serves as the primary key for the `transaction_assets` table."
        },
        {
          "name": "deal_id",
          "type": "INTEGER",
          "description": "Unique identifier for the deal associated with the transaction asset.  Foreign key referencing the `deals` table."
        },
        {
          "name": "asset_type",
          "type": "VARCHAR",
          "description": "Classifies the type of asset involved in the transaction (e.g., 'stock', 'bond', 'cryptocurrency', 'real estate')."
        },
        {
          "name": "asset_name",
          "type": "VARCHAR",
          "description": "`asset_name` (VARCHAR): Stores the name of the asset involved in the transaction."
        },
        {
          "name": "asset_description",
          "type": "TEXT",
          "description": "`asset_description` (TEXT):  A textual description of the asset involved in the transaction. This field provides additional context or details about the asset, which may not be captured by other fields."
        },
        {
          "name": "drug_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific drug involved in the transaction.  Foreign key referencing the `drugs` table."
        },
        {
          "name": "combination_id",
          "type": "INTEGER",
          "description": "`combination_id` (INTEGER):  A unique identifier representing a specific combination of assets involved in a transaction.  This links to a separate table (likely named 'asset_combinations') which details the specific assets included in this combination."
        },
        {
          "name": "regimen_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `regimens` table.  Identifies the investment regimen associated with this transaction asset."
        },
        {
          "name": "research_program_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `research_program` table.  Identifies the research program associated with this transaction asset."
        },
        {
          "name": "patent_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `patent` table, identifying the specific patent involved in this transaction."
        },
        {
          "name": "divesting_company_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the company divesting (selling or otherwise transferring ownership of) the assets involved in this transaction."
        },
        {
          "name": "acquiring_company_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column in the `companies` table.  Represents the ID of the company acquiring assets in a given transaction."
        },
        {
          "name": "asset_valuation",
          "type": "NUMERIC",
          "description": "`asset_valuation` (NUMERIC):  The monetary value assigned to the asset at the time of the transaction."
        },
        {
          "name": "valuation_methodology",
          "type": "VARCHAR",
          "description": "Valuation methodology used to determine the asset's value for this transaction.  (VARCHAR)"
        },
        {
          "name": "allocation_percentage",
          "type": "NUMERIC",
          "description": "The `allocation_percentage` column in the `transaction_assets` table stores the percentage of a transaction allocated to a specific asset.  This value is represented as a NUMERIC, allowing for precise decimal representation."
        },
        {
          "name": "facility_location",
          "type": "VARCHAR",
          "description": "`facility_location` (VARCHAR):  Stores the location or address of the facility associated with the transaction asset."
        },
        {
          "name": "employee_count",
          "type": "INTEGER",
          "description": "The `employee_count` column in the `transaction_assets` table is an INTEGER representing the number of employees associated with a given transaction asset."
        },
        {
          "name": "annual_revenue",
          "type": "NUMERIC",
          "description": "`annual_revenue` (NUMERIC): Stores the total annual revenue generated by the transaction asset.  This value is typically expressed in the currency associated with the asset."
        },
        {
          "name": "product_stage",
          "type": "VARCHAR",
          "description": "`product_stage` (VARCHAR):  Indicates the current stage of the product involved in the transaction.  Possible values may include 'prototype', 'development', 'production', 'deprecated', etc."
        },
        {
          "name": "therapeutic_areas",
          "type": "JSONB",
          "description": "`therapeutic_areas` (JSONB): Stores an array of therapeutic areas associated with the transaction asset.  This allows for flexible storage of multiple areas and potential future querying on specific areas of interest."
        },
        {
          "name": "territories_included",
          "type": "JSONB",
          "description": "`territories_included` (JSONB): Stores an array of territory codes (e.g., ISO 3166-1 alpha-2) indicating the geographic regions where the transaction asset is valid or applicable.  This allows for flexible definition of usage rights and restrictions."
        },
        {
          "name": "exclusivity_expiration",
          "type": "DATE",
          "description": "`exclusivity_expiration` (DATE):  The date on which any exclusivity period for this transaction asset expires.  Null indicates no exclusivity period exists."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value data related to the transaction asset. This allows for storing arbitrary attributes and metadata associated with the asset."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source (e.g., bank account, credit card) associated with the transaction asset."
        },
        {
          "name": "asset_type",
          "type": "TYPE_UNKNOWN",
          "description": "`asset_type` (TYPE_UNKNOWN):  Indicates the type of asset involved in the transaction.  The specific meaning of the values stored in this column is currently unknown and requires further investigation."
        },
        {
          "name": "asset_name",
          "type": "TYPE_UNKNOWN",
          "description": "`asset_name` (TYPE_UNKNOWN):  The name or identifier of the asset involved in the transaction.  Further investigation is needed to determine the specific data type."
        },
        {
          "name": "divesting_company_id",
          "type": "TYPE_UNKNOWN",
          "description": "`divesting_company_id` (TYPE_UNKNOWN):  Identifies the company divesting (selling or otherwise transferring ownership of) the asset(s) associated with this transaction.  The specific data type is currently unknown and requires further investigation."
        },
        {
          "name": "acquiring_company_id)",
          "type": "TYPE_UNKNOWN",
          "description": "`acquiring_company_id (TYPE_UNKNOWN)` in the `transaction_assets` table likely refers to the identifier of the company acquiring assets in a given transaction.  The data type is currently unknown and needs further investigation to determine its proper classification (e.g., integer, UUID, string).  This column likely links to a separate 'companies' or similar table."
        }
      ]
    },
    {
      "table_name": "post_transaction_entity_changes",
      "description": "The `post_transaction_entity_changes` table tracks changes to entities (e.g., companies, investors, funds) occurring after a deal transaction.  It records the type of change, the original and resulting entity details, the date of the change, specific details about the change, any associated data, and the primary source of the change information.  This table facilitates analysis of post-transaction entity evolution and its impact.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  A unique auto-incrementing integer serving as the primary key for tracking individual changes made to post transaction entities."
        },
        {
          "name": "deal_id",
          "type": "INTEGER",
          "description": "Unique identifier for the deal associated with the entity change recorded in the `post_transaction_entity_changes` table.  This is an integer value."
        },
        {
          "name": "entity_type",
          "type": "VARCHAR",
          "description": "Stores the type of entity that was changed after a post transaction.  Examples could include 'user', 'product', 'order', etc."
        },
        {
          "name": "entity_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a unique entity.  This ID represents the entity affected by the changes recorded in the `post_transaction_entity_changes` table."
        },
        {
          "name": "change_type",
          "type": "VARCHAR",
          "description": "Stores the type of change made to a post-transaction entity.  Possible values may include 'insert', 'update', 'delete', or other relevant change descriptors."
        },
        {
          "name": "resulted_in_entity_type",
          "type": "VARCHAR",
          "description": "Stores the type of entity that resulted from a change recorded in the `post_transaction_entity_changes` table.  This could represent the new type of an existing entity after modification, or the type of a newly created entity.  Value is a string representation of the entity type."
        },
        {
          "name": "resulted_in_entity_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `entity_id` column in the `entities` table.  Represents the entity that resulted from a change recorded in this table.  Null if the transaction did not result in a new entity."
        },
        {
          "name": "change_date",
          "type": "DATE",
          "description": "The `change_date` column of type `DATE` in the `post_transaction_entity_changes` table records the date on which a change occurred to a post-transaction entity. This column stores only the date portion (year, month, and day) without any time information."
        },
        {
          "name": "change_details",
          "type": "TEXT",
          "description": "Stores a textual representation of the changes made to an entity after a post transaction. This could include details like which fields were modified, old and new values, or any other relevant information about the changes."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "Stores a JSONB object representing the changes made to an entity during a post-transaction operation.  This allows for flexible tracking of various data modifications."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source that triggered the changes recorded in this row of the `post_transaction_entity_changes` table.  This identifies the origin of the entity modifications made after a transaction."
        }
      ]
    },
    {
      "table_name": "acquisition_consortiums",
      "description": "The `acquisition_consortiums` table stores information about groups of companies (consortiums) formed to jointly acquire assets.  Each record represents a specific consortium involved in a particular deal (`deal_id`), including details like the consortium's name, the leading company, formation date, legal structure, decision-making process, asset allocation agreement, and any other relevant data.  The `id` column serves as a unique identifier for each consortium.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique serial identifier for each acquisition consortium.  Automatically increments on insertion.  Serves as the primary key for the `acquisition_consortiums` table."
        },
        {
          "name": "deal_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific acquisition deal associated with a consortium."
        },
        {
          "name": "consortium_name",
          "type": "VARCHAR",
          "description": "Name of the acquisition consortium.  (VARCHAR)"
        },
        {
          "name": "lead_company_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `company` table.  Identifies the lead company within an acquisition consortium."
        },
        {
          "name": "formation_date",
          "type": "DATE",
          "description": "The `formation_date` column of type `DATE` in the `acquisition_consortiums` table stores the date on which a particular acquisition consortium was officially formed."
        },
        {
          "name": "legal_structure",
          "type": "VARCHAR",
          "description": "Legal structure of the acquisition consortium (e.g., LLC, Corporation, Partnership)."
        },
        {
          "name": "decision_making_process",
          "type": "TEXT",
          "description": "`decision_making_process`:  (TEXT) Describes the process used by the acquisition consortium to make key decisions, such as target selection, bid strategy, and internal governance. This may include references to voting procedures, consensus-building mechanisms, or designated leadership roles."
        },
        {
          "name": "asset_allocation_agreement",
          "type": "TEXT",
          "description": "Stores the asset allocation agreement details for the acquisition consortium. This may include the agreed-upon distribution of acquired assets among consortium members, specific responsibilities, or other relevant terms."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value pairs related to the acquisition consortium. This allows for storing various attributes and metadata specific to each consortium without needing to define rigid schema extensions."
        }
      ]
    },
    {
      "table_name": "deal_stages",
      "description": "The `deal_stages` table tracks the different stages of a deal's lifecycle.  Each record represents a specific stage for a given deal, including its type, status, duration, key conditions, involved regulatory bodies, any relevant notes, and the primary source of information.  It allows for detailed monitoring of deal progress and identifying potential bottlenecks.  Note: the table definition includes `stage_type` twice - this is likely a typo and one should be removed.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique sequential identifier for each deal stage. Automatically generated by the database."
        },
        {
          "name": "deal_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific deal.  Foreign key referencing the `deals` table."
        },
        {
          "name": "stage_type",
          "type": "VARCHAR",
          "description": "Classifies the type of stage in a deal's progression (e.g., Qualification, Proposal, Negotiation, Closed Won, Closed Lost)."
        },
        {
          "name": "status",
          "type": "VARCHAR",
          "description": "The `status` column in the `deal_stages` table is a string (VARCHAR) representing the current state of a deal within a defined sales process.  Possible values might include \"Prospecting,\" \"Qualifying,\" \"Proposal,\" \"Negotiation,\" \"Closed Won,\" \"Closed Lost,\" etc.  This column is used to track the progress of a deal through the various stages."
        },
        {
          "name": "start_date",
          "type": "DATE",
          "description": "The `start_date` column in the `deal_stages` table stores the date (YYYY-MM-DD) on which a specific deal stage began."
        },
        {
          "name": "completion_date",
          "type": "DATE",
          "description": "Stores the date on which a specific deal stage was completed.  NULL indicates the stage is not yet complete."
        },
        {
          "name": "key_conditions",
          "type": "TEXT",
          "description": "Stores a text representation of key conditions or milestones that must be met for a deal to progress to the next stage.  This may include specific approvals, document submissions, or other requirements."
        },
        {
          "name": "regulatory_bodies",
          "type": "JSONB",
          "description": "Stores a JSONB array of regulatory bodies relevant to the deal stage.  Each object in the array should represent a regulatory body and may contain details like name, ID, and any relevant stage-specific information."
        },
        {
          "name": "notes",
          "type": "TEXT",
          "description": "Additional notes or comments related to the deal stage."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `sources` table.  Indicates the primary source that led to this deal stage."
        },
        {
          "name": "stage_type)",
          "type": "TYPE_UNKNOWN",
          "description": "`stage_type (TYPE_UNKNOWN)` in the `deal_stages` table defines the nature or category of a deal stage.  The specific format and meaning of this column are currently undefined (TYPE_UNKNOWN) and require further investigation."
        }
      ]
    },
    {
      "table_name": "partnership_details",
      "description": "The `partnership_details` table stores comprehensive information about strategic partnerships. Each record represents a specific partnership agreement, linked to a deal (`deal_id`) and outlining details such as geographic scope, therapeutic areas covered, product scope, responsibilities across development, commercialization, and manufacturing, exclusivity and IP ownership terms, governance structure, decision-making processes, conditions for term extensions, termination triggers, associated data, and the last update timestamp.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each partnership record in the `partnership_details` table.  Automatically increments with each new entry. Serves as the primary key."
        },
        {
          "name": "deal_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific deal associated with the partnership.  Foreign key referencing the `deals` table."
        },
        {
          "name": "geographic_scope",
          "type": "JSONB",
          "description": "`geographic_scope` (JSONB):  Stores the geographic area(s) relevant to the partnership. This could include countries, regions, states/provinces, or even specific coordinates, allowing for flexible representation of complex geographic relationships."
        },
        {
          "name": "therapeutic_areas",
          "type": "JSONB",
          "description": "`therapeutic_areas` (JSONB):  Stores an array of therapeutic areas relevant to the partnership.  This allows for flexible storage of multiple areas and potential future expansion without schema changes.  Example: `[\"Oncology\", \"Cardiology\", \"Infectious Disease\"]`"
        },
        {
          "name": "product_scope",
          "type": "JSONB",
          "description": "`product_scope` (JSONB):  Defines the scope of products included in the partnership. This field stores a JSON object specifying relevant product details, such as product IDs, categories, or other criteria.  This flexible format allows for complex scope definitions beyond simple lists."
        },
        {
          "name": "development_responsibilities",
          "type": "JSONB",
          "description": "Stores a JSONB object representing the development responsibilities within a partnership.  This allows for flexible storage of various responsibilities and their associated details."
        },
        {
          "name": "commercial_responsibilities",
          "type": "JSONB",
          "description": "Stores a JSONB object representing the commercial responsibilities within a partnership. This allows for flexible storage of various responsibilities, including but not limited to revenue sharing, marketing contributions, and operational cost allocations.  Each partnership (represented by a row in `partnership_details`) can have a different structure of responsibilities defined within this column."
        },
        {
          "name": "manufacturing_responsibilities",
          "type": "JSONB",
          "description": "Stores a JSONB object outlining the manufacturing responsibilities for each partner in the partnership. This can include details like which partner is responsible for which manufacturing processes, quality control, material sourcing, etc."
        },
        {
          "name": "exclusivity_terms",
          "type": "TEXT",
          "description": "`exclusivity_terms`:  A text field in the `partnership_details` table that outlines the specific terms and conditions related to exclusivity agreements within the partnership. This may include details about product categories, geographic regions, or duration of the exclusivity."
        },
        {
          "name": "ip_ownership_terms",
          "type": "TEXT",
          "description": "Terms of IP ownership as agreed upon by the partners. This field stores the specific details of the intellectual property ownership agreement within the partnership described in this row of the `partnership_details` table."
        },
        {
          "name": "governance_structure",
          "type": "TEXT",
          "description": "Describes the organizational and decision-making structure of the partnership, including details on leadership roles, responsibilities, and voting rights.  This field allows for a free-text description to accommodate various governance models."
        },
        {
          "name": "decision_making_process",
          "type": "TEXT",
          "description": "This 'decision_making_process' column (TEXT) in the 'partnership_details' table describes the process used by the partners for making key decisions. This could include details on voting rights, consensus requirements, designated decision-makers, or any other relevant information about how decisions are reached within the partnership."
        },
        {
          "name": "term_extension_conditions",
          "type": "TEXT",
          "description": "This column, `term_extension_conditions` in the `partnership_details` table, stores the conditions required for extending the partnership term. This is a text field allowing for detailed descriptions of these conditions."
        },
        {
          "name": "termination_triggers",
          "type": "TEXT",
          "description": "`termination_triggers`:  A text field in the `partnership_details` table that lists the specific events or conditions that could lead to the termination of the partnership. This may include breach of contract, insolvency, change of control, or mutual agreement."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "Stores flexible partnership-related information as a JSON document, allowing for varied attributes and structures within a single column. Uses the JSONB format for efficient querying and indexing."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP): Stores the date and time of the most recent update to the partnership details record."
        }
      ]
    },
    {
      "table_name": "deal_financial_components",
      "description": "The `deal_financial_components` table stores details of individual financial components associated with a deal (e.g., earn-outs, milestone payments, upfront fees).  Each record represents a specific component, including its type, potential and realized value, probability of achievement, estimated and actual payment details, and disclosure status.  It links to the main deal record via `deal_id`.  Note: `component_type` and `component_name` appear to be duplicated.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique, automatically incrementing integer serving as the primary key for the `deal_financial_components` table.  This identifies each individual financial component of a deal."
        },
        {
          "name": "deal_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific deal, referencing the primary key of the 'deals' table.  Used to link financial components to their respective deals."
        },
        {
          "name": "component_type",
          "type": "VARCHAR",
          "description": "Classifies the type of financial component associated with a deal, e.g., 'Loan', 'Grant', 'Equity', etc."
        },
        {
          "name": "component_name",
          "type": "VARCHAR",
          "description": "`component_name` (VARCHAR): Stores the name of the financial component associated with a deal.  This could represent items like \"Loan Amount\", \"Interest Rate\", \"Down Payment\", etc."
        },
        {
          "name": "trigger_description",
          "type": "TEXT",
          "description": "`trigger_description` (TEXT):  Provides a textual description of the event or condition that triggered a change or update to the financial component of a deal.  This may include details like manual adjustments, automated system updates, or external data source changes."
        },
        {
          "name": "potential_value",
          "type": "NUMERIC",
          "description": "The `potential_value` column in the `deal_financial_components` table stores the estimated or projected monetary value of a deal component, represented as a NUMERIC value.  This could represent the best-case scenario or the total possible value if all milestones are achieved."
        },
        {
          "name": "currency",
          "type": "VARCHAR",
          "description": "The `currency` column in the `deal_financial_components` table is a VARCHAR field that stores the three-letter ISO 4217 currency code (e.g., USD, EUR, GBP) representing the currency in which a specific financial component of a deal is denominated."
        },
        {
          "name": "standardized_value",
          "type": "NUMERIC",
          "description": "The `standardized_value` column in the `deal_financial_components` table stores a numeric value representing a standardized financial metric for a given deal component.  This allows for consistent comparisons and calculations across different components and deals, regardless of their original units or scales."
        },
        {
          "name": "standardized_currency_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a standardized currency table (e.g., ISO 4217 codes).  Identifies the currency used for the financial component of a deal."
        },
        {
          "name": "probability",
          "type": "FLOAT",
          "description": "The `probability` column in the `deal_financial_components` table stores a floating-point number representing the likelihood (between 0.0 and 1.0 inclusive) of a particular financial component of a deal occurring or being realized.  A value of 1.0 indicates certainty, while 0.0 indicates impossibility."
        },
        {
          "name": "estimated_timing",
          "type": "VARCHAR",
          "description": "Estimated timing of the financial component of the deal.  This field stores a textual representation of the timing, e.g., \"Q1 2024\", \"Next Month\", \"At Closing\"."
        },
        {
          "name": "is_disclosed",
          "type": "BOOLEAN",
          "description": "Indicates whether the financial component of the deal is publicly disclosed (true) or not (false)."
        },
        {
          "name": "achievement_status",
          "type": "VARCHAR",
          "description": "`achievement_status`:  (VARCHAR) Represents the current state of achieving a specific financial component within a deal.  Possible values may include 'Pending', 'In Progress', 'Completed', 'Failed', etc."
        },
        {
          "name": "actual_payment_date",
          "type": "DATE",
          "description": "The `actual_payment_date` column in the `deal_financial_components` table stores the date on which a payment was actually received.  Data type is DATE (YYYY-MM-DD)."
        },
        {
          "name": "actual_payment_amount",
          "type": "NUMERIC",
          "description": "The `actual_payment_amount` column in the `deal_financial_components` table stores the precise amount paid for a given financial component of a deal. This NUMERIC value represents the actual monetary value transacted, as opposed to an estimated or planned payment amount."
        },
        {
          "name": "notes",
          "type": "TEXT",
          "description": "Additional notes or comments related to the financial component of a deal."
        },
        {
          "name": "component_type",
          "type": "TYPE_UNKNOWN",
          "description": "Classifies the type of financial component associated with a deal.  Currently uses a placeholder value `TYPE_UNKNOWN` indicating the specific type is not yet determined or categorized."
        },
        {
          "name": "component_name)",
          "type": "TYPE_UNKNOWN",
          "description": "`component_name (TYPE_UNKNOWN)` in the `deal_financial_components` table stores the name of the financial component associated with a deal.  The specific data type is currently unknown and requires further investigation."
        }
      ]
    },
    {
      "table_name": "deal_amendments",
      "description": "The `deal_amendments` table tracks modifications made to existing deals.  Each record represents a single amendment and includes the amendment date, type, a description of the changes, specific altered terms, the reason for the amendment, its financial impact, and a link to the primary source documenting the change.  It is linked to the original deal via the `deal_id` foreign key.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique auto-incrementing integer serving as the primary key for each deal amendment record in the `deal_amendments` table."
        },
        {
          "name": "deal_id",
          "type": "INTEGER",
          "description": "Unique identifier for the deal being amended.  References the `deal_id` column in the `deals` table."
        },
        {
          "name": "amendment_date",
          "type": "DATE",
          "description": "Stores the date on which an amendment was made to a deal.  This field is of type DATE and does not include time information."
        },
        {
          "name": "amendment_type",
          "type": "VARCHAR",
          "description": "Stores the type of amendment made to a deal, such as \"Price Change,\" \"Extension,\" \"Term Modification,\" etc."
        },
        {
          "name": "description",
          "type": "TEXT",
          "description": "Holds a textual description of the amendment made to the deal. This field allows for detailed explanations of the changes applied."
        },
        {
          "name": "changed_terms",
          "type": "JSONB",
          "description": "Stores a JSONB object representing the terms of a deal that were changed in a particular amendment.  This allows flexible tracking of modifications without needing dedicated columns for each possible term."
        },
        {
          "name": "reason_for_change",
          "type": "TEXT",
          "description": "Reason for the amendment made to the deal.  This field provides a textual explanation for the changes applied."
        },
        {
          "name": "financial_impact",
          "type": "NUMERIC",
          "description": "The `financial_impact` column in the `deal_amendments` table stores the numeric value representing the monetary effect (positive or negative) of the amendment on the deal.  This could represent a change in deal value, revenue, cost, etc."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `primary_sources` table. Identifies the primary source document associated with this deal amendment."
        }
      ]
    },
    {
      "table_name": "licensing_details",
      "description": "The `licensing_details` table stores comprehensive information about individual licensing agreements.  Each record, identified by a unique `id`, is linked to a specific deal (`deal_id`) and details the license type, field of use, territory scope, sublicensing rights, technology transfer terms, diligence obligations, included intellectual property rights (patents, know-how, improvements), prosecution responsibilities, term and termination clauses, data reporting requirements, regulatory responsibilities, general notes, and any other relevant data.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`licensing_details.id`:  A unique, auto-incrementing integer that serves as the primary key for the `licensing_details` table."
        },
        {
          "name": "deal_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific licensing deal.  This integer links the `licensing_details` record to a corresponding deal record in another table (e.g., `deals`)."
        },
        {
          "name": "license_type",
          "type": "VARCHAR",
          "description": "Stores the type of license, such as \"full\", \"trial\", \"student\", or \"open source\"."
        },
        {
          "name": "field_of_use",
          "type": "TEXT",
          "description": "The `field_of_use` column in the `licensing_details` table is a text field that specifies the permitted area of application or use for the licensed item.  This could include industries, research fields, commercial applications, or other specific uses allowed under the license."
        },
        {
          "name": "territory_scope",
          "type": "JSONB",
          "description": "`territory_scope` (JSONB): Defines the geographical scope of the license.  This field stores a JSON object specifying the territories where the license is valid.  The specific format of this object will be documented separately.  Examples include country codes, regions, or custom defined areas."
        },
        {
          "name": "sublicensing_rights",
          "type": "TEXT",
          "description": "Specifies whether sublicensing rights are granted under the license.  This field allows for free-form text describing the specific terms of sublicensing, including any restrictions or limitations."
        },
        {
          "name": "technology_transfer_terms",
          "type": "TEXT",
          "description": "Stores the terms and conditions related to the transfer of technology, including intellectual property rights, know-how, and technical assistance, as part of the licensing agreement.  This field can contain a lengthy description or a summary of the agreement."
        },
        {
          "name": "diligence_obligations",
          "type": "TEXT",
          "description": "Stores text describing the diligence obligations associated with this license, such as reporting requirements, ongoing checks, or other responsibilities."
        },
        {
          "name": "patent_rights_included",
          "type": "BOOLEAN",
          "description": "Indicates whether the granted license includes patent rights.  TRUE if patent rights are included, FALSE if not."
        },
        {
          "name": "know_how_rights_included",
          "type": "BOOLEAN",
          "description": "Indicates whether the license includes rights to the licensor's know-how (e.g., trade secrets, proprietary information) in addition to the explicitly licensed intellectual property.  True if know-how rights are included, false otherwise."
        },
        {
          "name": "improvement_rights",
          "type": "TEXT",
          "description": "`improvement_rights`:  Describes the rights of the licensee regarding improvements or modifications made to the licensed property or asset. This field can contain free-form text outlining permissible alterations, ownership of improvements, and responsibilities for restoration upon termination of the license."
        },
        {
          "name": "prosecution_responsibilities",
          "type": "TEXT",
          "description": "This text field in the `licensing_details` table outlines the prosecution responsibilities associated with the license.  It details which entity or individual is responsible for prosecuting violations related to the license."
        },
        {
          "name": "term_and_termination",
          "type": "TEXT",
          "description": "Stores details about the license term (duration, start/end dates) and termination conditions (e.g., reasons for termination, notice period)."
        },
        {
          "name": "data_reporting_requirements",
          "type": "TEXT",
          "description": "Stores the data reporting requirements associated with a particular license, such as frequency, format, and specific data points to be reported.  This field allows for flexible, detailed descriptions that may exceed the character limits of shorter text fields."
        },
        {
          "name": "regulatory_responsibilities",
          "type": "TEXT",
          "description": "`regulatory_responsibilities`:  A text field in the `licensing_details` table that outlines the specific regulatory obligations and responsibilities associated with a particular license. This may include reporting requirements, compliance standards, or other legal obligations."
        },
        {
          "name": "notes",
          "type": "TEXT",
          "description": "`notes`:  A TEXT field in the `licensing_details` table that stores miscellaneous notes or comments related to the licensing details.  This can include specific license terms, exceptions, or any other relevant information."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column in the `licensing_details` table storing flexible key-value pairs related to licensing information. This allows for storing various licensing attributes without needing to define a fixed schema."
        }
      ]
    },
    {
      "table_name": "investment_funds",
      "description": "The `investment_funds` table stores information about individual investment funds.  Each record represents a specific fund, including details such as its name, managing company, type, size, investment focus (stage, therapeutic area, geography), key dates (vintage year, closing, investment period end, fund life end), management fees, and source information. Standardized fund size and currency allow for consistent comparisons across funds.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id`:  A unique serial number automatically generated for each investment fund record in the `investment_funds` table. Serves as the primary key."
        },
        {
          "name": "fund_name",
          "type": "VARCHAR",
          "description": "The `fund_name` column in the `investment_funds` table is a VARCHAR field that stores the name of the investment fund."
        },
        {
          "name": "company_id",
          "type": "INTEGER",
          "description": "`company_id` (INTEGER):  A foreign key referencing the unique identifier of a company in the 'companies' table.  Represents the company associated with a particular investment fund."
        },
        {
          "name": "fund_type",
          "type": "VARCHAR",
          "description": "Categorizes the investment fund, e.g., 'Mutual Fund', 'Hedge Fund', 'ETF', 'Index Fund'."
        },
        {
          "name": "vintage_year",
          "type": "INTEGER",
          "description": "The `vintage_year` column in the `investment_funds` table stores the year (as a four-digit integer) in which a particular investment fund was established.  This represents the fund's inception year."
        },
        {
          "name": "fund_size",
          "type": "NUMERIC",
          "description": "`fund_size` (NUMERIC):  The total assets under management (AUM) for the investment fund, represented in the currency specified elsewhere in the `investment_funds` table (e.g., USD, EUR)."
        },
        {
          "name": "fund_size_currency",
          "type": "VARCHAR",
          "description": "The `fund_size_currency` column in the `investment_funds` table stores a three-letter ISO 4217 currency code indicating the currency in which the fund size is reported (e.g., USD, EUR, GBP). This allows for accurate comparison and analysis of fund sizes across different currencies."
        },
        {
          "name": "standardized_fund_size",
          "type": "NUMERIC",
          "description": "Standardized fund size, represented as a numeric value.  This likely represents the assets under management (AUM) or a similar metric, adjusted to a common scale for comparison across different funds within the `investment_funds` table."
        },
        {
          "name": "standardized_currency_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `currencies` table. Stores the ID of the currency to which all fund values are standardized for comparison purposes."
        },
        {
          "name": "fund_number",
          "type": "INTEGER",
          "description": "`fund_number` (INTEGER): Unique identifier for each investment fund within the `investment_funds` table."
        },
        {
          "name": "investment_stage_focus",
          "type": "VARCHAR",
          "description": "`investment_stage_focus`:  (VARCHAR)  Indicates the preferred investment stage(s) of the investment fund, e.g., Seed, Series A, Series B, Growth Equity, Late Stage, etc. Can contain multiple stages separated by commas if the fund invests across multiple stages."
        },
        {
          "name": "therapeutic_focus",
          "type": "VARCHAR",
          "description": "`therapeutic_focus`:  (VARCHAR)  Indicates the primary therapeutic area(s) of interest for the investment fund (e.g., oncology, cardiology, neurology).  May contain multiple comma-separated values."
        },
        {
          "name": "geographic_focus",
          "type": "JSONB",
          "description": "`geographic_focus` (JSONB):  Stores the fund's investment geographic focus, allowing for flexible representation of regions, countries, and specific areas.  Data can be structured hierarchically or as a simple array of locations.  Examples include `{\"region\": \"North America\", \"countries\": [\"USA\", \"Canada\"]}` or `[\"Global\", \"Emerging Markets\"]`."
        },
        {
          "name": "closing_date",
          "type": "DATE",
          "description": "The `closing_date` column in the `investment_funds` table stores the date on which an investment fund officially closes to new investors.  This is a `DATE` type field and stores only the date (year, month, and day)."
        },
        {
          "name": "investment_period_end",
          "type": "DATE",
          "description": "`investment_period_end` (DATE):  The date on which the investment period for a particular fund ends.  This signifies the last date investors can contribute to the fund."
        },
        {
          "name": "fund_life_end",
          "type": "DATE",
          "description": "`fund_life_end` (DATE):  The date on which the investment fund's life cycle ends. This typically signifies the date when the fund is liquidated or otherwise terminated."
        },
        {
          "name": "management_fees",
          "type": "VARCHAR",
          "description": "Management fees associated with the investment fund, represented as a string. This may include specific fee rates, ranges, or descriptive text explaining the fee structure."
        },
        {
          "name": "notes",
          "type": "TEXT",
          "description": "`notes`:  A text field in the `investment_funds` table for storing miscellaneous notes, observations, or any relevant textual information related to a specific investment fund. This field can hold longer strings of text, unlike VARCHAR."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "Stores unstructured investment fund data as a JSONB object, allowing for flexible and efficient querying of nested attributes.  This may include details like fund holdings, performance metrics, or manager information."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `sources` table. Identifies the primary information source for the investment fund data."
        }
      ]
    },
    {
      "table_name": "investment_rounds",
      "description": "The `investment_rounds` table stores information about individual funding rounds for companies.  It tracks key details such as the round name (e.g., Seed, Series A), announcement and closing dates, pre- and post-money valuations, amount raised, currency, and standardized equivalents.  It also flags crossover and extension rounds, links to the extended round if applicable, identifies lead investors, advisors/banks involved, the intended use of funds, and includes free-form notes. Data provenance is tracked via primary sources.  The `data` column allows for storing additional structured data related to the round.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id`:  A unique, auto-incrementing integer that serves as the primary key for each investment round record in the `investment_rounds` table."
        },
        {
          "name": "company_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `companies` table, identifying the company associated with the investment round.  Stores the unique integer ID of the company."
        },
        {
          "name": "round_name",
          "type": "VARCHAR",
          "description": "The `round_name` column (VARCHAR) in the `investment_rounds` table stores the name or designation of a specific investment round, such as \"Seed Round,\" \"Series A,\" \"Series B,\" etc."
        },
        {
          "name": "announcement_date",
          "type": "DATE",
          "description": "The `announcement_date` column of type `DATE` in the `investment_rounds` table stores the date on which a particular investment round was publicly announced.  It does not include time information."
        },
        {
          "name": "closing_date",
          "type": "DATE",
          "description": "The `closing_date` column of type `DATE` in the `investment_rounds` table stores the date on which a specific investment round officially closed. This represents the date when the funding transaction was completed."
        },
        {
          "name": "pre_money_valuation",
          "type": "NUMERIC",
          "description": "The `pre_money_valuation` column in the `investment_rounds` table stores the estimated value of a company *before* an investment round, represented as a NUMERIC value. This value is used to calculate equity percentages and share prices for the incoming investment."
        },
        {
          "name": "post_money_valuation",
          "type": "NUMERIC",
          "description": "The `post_money_valuation` column in the `investment_rounds` table stores the total value of a company after an investment round, expressed as a numeric value. This represents the company's worth including the newly invested capital."
        },
        {
          "name": "total_raised",
          "type": "NUMERIC",
          "description": "Total amount of capital raised (in currency units) during a specific investment round."
        },
        {
          "name": "currency",
          "type": "VARCHAR",
          "description": "The `currency` column in the `investment_rounds` table is a VARCHAR field that stores the three-letter ISO 4217 code representing the currency in which the investment round was conducted (e.g., USD, EUR, GBP)."
        },
        {
          "name": "standardized_total_raised",
          "type": "NUMERIC",
          "description": "The `standardized_total_raised` column in the `investment_rounds` table stores the total amount of capital raised in a given investment round, standardized to a common currency (e.g., USD) and accounting for any currency conversions.  This `NUMERIC` field allows for precise representation of monetary values."
        },
        {
          "name": "standardized_currency_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `currencies` table. Stores the ID of the currency to which all investment amounts in this round have been standardized for reporting and comparison purposes."
        },
        {
          "name": "is_crossover",
          "type": "BOOLEAN",
          "description": "Indicates whether the investment round is a crossover round (TRUE) or not (FALSE). A crossover round is typically a late-stage private investment round that includes participation from public market investors, often preceding an initial public offering (IPO)."
        },
        {
          "name": "is_extension",
          "type": "BOOLEAN",
          "description": "Indicates whether the investment round is an extension of a previous round (TRUE) or a new, independent round (FALSE)."
        },
        {
          "name": "extension_of_round_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `investment_rounds` table.  Indicates that this investment round is an extension of a previous round.  `NULL` if this is not an extension round."
        },
        {
          "name": "lead_investor_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `investors` table.  Identifies the lead investor for a particular investment round."
        },
        {
          "name": "bank_or_advisor",
          "type": "VARCHAR",
          "description": "Indicates whether the investment round was funded by a bank ('bank') or a financial advisor ('advisor')."
        },
        {
          "name": "use_of_proceeds",
          "type": "TEXT",
          "description": "Description of the `use_of_proceeds` column (TEXT) in the `investment_rounds` table:\n\nThis field describes how the company intends to use the funds raised during this specific investment round.  This may include items such as research and development, marketing and sales expansion, hiring, capital expenditures, debt repayment, or acquisitions."
        },
        {
          "name": "notes",
          "type": "TEXT",
          "description": "Additional notes or information regarding the investment round, such as specific terms, investor details, or other relevant context."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `sources` table.  Indicates the primary source of information for this investment round."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value data related to the investment round. This can include details not captured in other structured columns, such as investor-specific terms, special conditions, or future-dated events."
        }
      ]
    },
    {
      "table_name": "round_participants",
      "description": "The `round_participants` table tracks the participation details of investors in a specific funding round. It stores information such as the investor, the amount and currency of their investment, their role in the round (lead or new investor), their participation type, resulting ownership, any board rights gained, and any special rights or notes associated with their participation. Each record represents a single investor's participation in a single funding round.  The `standardized_amount` and `standardized_currency_id` allow for comparison across different currencies. Note: `investor_id` and `investment_fund_id` appear to be duplicated. This likely represents a design flaw and one should be removed depending on the desired data granularity.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique identifier for each participant's entry in a round. Automatically increments for each new record."
        },
        {
          "name": "round_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column of the 'rounds' table.  Identifies the specific round a participant is associated with."
        },
        {
          "name": "investor_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `investors` table.  Uniquely identifies the investor participating in a particular funding round."
        },
        {
          "name": "investment_fund_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `investment_funds` table.  Identifies the specific investment fund participating in a particular funding round."
        },
        {
          "name": "amount",
          "type": "NUMERIC",
          "description": "The `amount` column in the `round_participants` table stores a numeric value representing the amount (likely monetary or score-based) associated with a participant's involvement in a specific round."
        },
        {
          "name": "currency",
          "type": "VARCHAR",
          "description": "The `currency` column in the `round_participants` table is a VARCHAR field that stores the three-letter ISO 4217 currency code (e.g., USD, EUR, GBP) representing the currency used for transactions related to a participant's involvement in a specific round."
        },
        {
          "name": "standardized_amount",
          "type": "NUMERIC",
          "description": "The `standardized_amount` column in the `round_participants` table stores a numeric value representing the participant's contribution or allocation for the round, normalized to a standard scale for comparison across different rounds or participants."
        },
        {
          "name": "standardized_currency_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `currencies` table. Stores the ID of the standardized currency used for tracking investments and returns for this round participant.  Ensures consistent currency comparisons across all participants."
        },
        {
          "name": "is_lead",
          "type": "BOOLEAN",
          "description": "Indicates whether the participant is the lead for this round.  `TRUE` if the participant is the lead, `FALSE` otherwise."
        },
        {
          "name": "is_new_investor",
          "type": "BOOLEAN",
          "description": "Indicates whether the participant in this funding round is a new investor (TRUE) or an existing investor (FALSE)."
        },
        {
          "name": "participation_type",
          "type": "VARCHAR",
          "description": "Indicates the type of participation a participant had in a specific round.  Examples could include \"competitor\", \"judge\", \"spectator\", etc."
        },
        {
          "name": "resulting_ownership_percentage",
          "type": "NUMERIC",
          "description": "The `resulting_ownership_percentage` column in the `round_participants` table stores the participant's ownership percentage in the company *after* a specific funding round, represented as a numeric value (e.g., 0.10 for 10%).  This reflects the impact of dilution or increased investment during the round."
        },
        {
          "name": "board_seat_gained",
          "type": "BOOLEAN",
          "description": "Indicates whether a participant gained a board seat during this round of funding.  `TRUE` if a board seat was gained, `FALSE` otherwise."
        },
        {
          "name": "board_observer_rights",
          "type": "BOOLEAN",
          "description": "Indicates whether a round participant has observer rights on the board.  `TRUE` if the participant can observe the board, `FALSE` otherwise."
        },
        {
          "name": "special_rights",
          "type": "JSONB",
          "description": "`special_rights` (JSONB): Stores specific permissions or attributes granted to a round participant.  This can include things like moderator status, exemption from certain rules, or access to special features within the round."
        },
        {
          "name": "notes",
          "type": "TEXT",
          "description": "Additional notes or comments about a participant's involvement in a specific round.  This field allows for free-form text entry."
        },
        {
          "name": "investor_id",
          "type": "TYPE_UNKNOWN",
          "description": "`investor_id` (TYPE_UNKNOWN):  A unique identifier for the investor participating in this funding round.  The specific type of this identifier is currently unknown and requires further investigation.  This column links to the `investors` table (or a similar table containing investor details)."
        },
        {
          "name": "investment_fund_id)",
          "type": "TYPE_UNKNOWN",
          "description": "`investment_fund_id (TYPE_UNKNOWN)`:  Identifier for an investment fund participating in the funding round.  The specific data type is currently unknown and requires further investigation.  This column likely links to a separate table containing investment fund details."
        }
      ]
    },
    {
      "table_name": "investment_instruments",
      "description": "The `investment_instruments` table stores details of individual investment instruments used in funding rounds. Each record represents a specific instrument, such as equity, convertible note, or SAFE, linked to a specific funding round (`round_id`).  Key information tracked includes the instrument type, investment amount, currency, standardized amount (for cross-currency comparison), interest rate, discount rate, valuation cap, conversion trigger, maturity date, liquidation preference, participation rights, anti-dilution protection, and any special terms.  Additional notes and arbitrary data can be stored for comprehensive record-keeping.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id`:  A unique, auto-incrementing integer that serves as the primary key for identifying each investment instrument record in the `investment_instruments` table."
        },
        {
          "name": "round_id",
          "type": "INTEGER",
          "description": "`round_id` (INTEGER):  A foreign key referencing the `rounds` table.  Identifies the specific funding round associated with this investment instrument."
        },
        {
          "name": "instrument_type",
          "type": "VARCHAR",
          "description": "Classifies the type of investment instrument, e.g., 'stock', 'bond', 'ETF', 'mutual fund', 'real estate', etc."
        },
        {
          "name": "amount",
          "type": "NUMERIC",
          "description": "The `amount` column in the `investment_instruments` table stores the monetary value (e.g., cost, price, or current value) of an investment instrument.  It is a NUMERIC data type, allowing for precise representation of decimal values."
        },
        {
          "name": "currency",
          "type": "VARCHAR",
          "description": "Three-letter ISO 4217 currency code representing the currency in which the investment instrument is denominated (e.g., USD, EUR, GBP)."
        },
        {
          "name": "standardized_amount",
          "type": "NUMERIC",
          "description": "The `standardized_amount` column in the `investment_instruments` table stores the monetary value of the investment instrument, normalized to a specific unit (e.g., USD, shares) for consistent comparison and analysis across different instrument types.  It is stored as a NUMERIC data type for precise calculations."
        },
        {
          "name": "standardized_currency_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `currencies` table. Stores the ID of the standardized currency in which the investment instrument's values (e.g., price, returns) are represented.  Ensures consistent currency reporting across all instruments."
        },
        {
          "name": "interest_rate",
          "type": "NUMERIC",
          "description": "The `interest_rate` column in the `investment_instruments` table stores the annual interest rate (as a decimal) applicable to the investment instrument.  For example, a value of 0.05 represents a 5% interest rate."
        },
        {
          "name": "discount_rate",
          "type": "NUMERIC",
          "description": "The `discount_rate` column in the `investment_instruments` table stores the discount rate (as a decimal) applied to the investment instrument, used for present value calculations or to represent a reduction in price.  For example, a value of 0.10 represents a 10% discount rate."
        },
        {
          "name": "valuation_cap",
          "type": "NUMERIC",
          "description": "The `valuation_cap` column in the `investment_instruments` table stores the maximum valuation of an investment instrument, represented as a numeric value.  This cap may be used in various calculations, such as determining the maximum payout or investment limit."
        },
        {
          "name": "conversion_trigger",
          "type": "TEXT",
          "description": "`conversion_trigger`:  (TEXT) Describes the event or condition that triggers the conversion of the investment instrument (e.g., reaching a certain date, achieving a performance target, investor action).  Can be NULL if no conversion is possible."
        },
        {
          "name": "maturity_date",
          "type": "DATE",
          "description": "The `maturity_date` column in the `investment_instruments` table stores the date on which an investment instrument reaches its maturity.  This is the date the principal amount of the investment becomes due and payable to the investor."
        },
        {
          "name": "liquidation_preference",
          "type": "NUMERIC",
          "description": "The `liquidation_preference` column in the `investment_instruments` table, of type NUMERIC, represents the multiple of the original investment that a particular investor is entitled to receive upon the liquidation of the company, before other investors or common shareholders.  This signifies the preferential return of capital afforded to certain investors in a liquidation event."
        },
        {
          "name": "participation_rights",
          "type": "TEXT",
          "description": "Defines the participation rights associated with the investment instrument.  This field may contain a textual description of the rights, such as voting rights, dividend entitlements, or other relevant information."
        },
        {
          "name": "anti_dilution_protection",
          "type": "TEXT",
          "description": "Specifies the anti-dilution protection clauses associated with the investment instrument, if any.  This field may describe the type of protection (e.g., full ratchet, weighted average), specific terms, or simply indicate presence or absence of such protection."
        },
        {
          "name": "special_terms",
          "type": "TEXT",
          "description": "Special terms and conditions associated with the investment instrument, such as lock-up periods, early withdrawal penalties, or specific redemption requirements.  May include details not captured in other standardized fields."
        },
        {
          "name": "notes",
          "type": "TEXT",
          "description": "`notes`:  A TEXT field in the `investment_instruments` table for storing miscellaneous notes, observations, or any other textual information related to a specific investment instrument. This field can hold longer strings of text."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value data related to the investment instrument. This allows for storing various instrument-specific attributes that don't fit neatly into predefined columns, such as risk profiles, historical performance metrics, or fund manager details."
        }
      ]
    },
    {
      "table_name": "forecast_projects",
      "description": "The `forecast_projects` table stores information about individual forecasting projects.  Each project is identified by a unique `id` and includes details such as the project name, creation date, author, forecast owner, forecast type, time horizon, current status, methodology used, key assumptions made, and a link to any superseding forecast.  It also references a base case scenario, stores forecast data, identifies the primary data source, and tracks the last update date.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each forecast project. Automatically increments on each new record insertion. Serves as the primary key for the `forecast_projects` table."
        },
        {
          "name": "project_name",
          "type": "VARCHAR",
          "description": "`project_name` (VARCHAR):  The name of the project associated with the forecast."
        },
        {
          "name": "creation_date",
          "type": "DATE",
          "description": "The `creation_date` column in the `forecast_projects` table stores the date on which a forecast project was created.  It is of `DATE` type, storing the year, month, and day."
        },
        {
          "name": "author",
          "type": "VARCHAR",
          "description": "The `author` column in the `forecast_projects` table stores the name or ID (VARCHAR) of the user who created or is primarily responsible for a specific forecast project."
        },
        {
          "name": "forecast_owner",
          "type": "VARCHAR",
          "description": "`forecast_owner` (VARCHAR): Stores the username or ID of the user responsible for managing and maintaining the specific forecast project."
        },
        {
          "name": "forecast_type",
          "type": "VARCHAR",
          "description": "The `forecast_type` column in the `forecast_projects` table is a VARCHAR field specifying the type of forecast performed. This could indicate methodologies like 'linear regression', 'moving average', 'ARIMA', or specific business-oriented types like 'demand forecast', 'revenue forecast', etc."
        },
        {
          "name": "time_horizon",
          "type": "VARCHAR",
          "description": "The `time_horizon` column in the `forecast_projects` table is a VARCHAR value specifying the forecasting period for the project.  This could be a descriptive value like 'Short-term', 'Mid-term', 'Long-term', or a specific time range like '1 month', '6 months', '1 year', etc."
        },
        {
          "name": "forecast_status",
          "type": "VARCHAR",
          "description": "Stores the current status of the forecast project, such as 'Draft', 'Submitted', 'Approved', 'Rejected', or 'Completed'."
        },
        {
          "name": "methodology",
          "type": "TEXT",
          "description": "The `methodology` column in the `forecast_projects` table stores a text description of the forecasting methodology used for a specific project. This could include details about the algorithms, data sources, assumptions, and any other relevant information about the forecasting process."
        },
        {
          "name": "key_assumptions",
          "type": "TEXT",
          "description": "Key assumptions made during the creation of this forecast project.  This may include factors related to market conditions, economic outlook, internal resources, or other relevant information that influences the projected values."
        },
        {
          "name": "superseded_by_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `forecast_projects` table itself.  Indicates the ID of the forecast project that supersedes this one (if any).  `NULL` if this project is not superseded."
        },
        {
          "name": "base_case_scenario_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `scenarios` table. Identifies the base case scenario associated with this forecast project."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible, schema-less data related to a forecast project. This can include project-specific parameters, configurations, or any other relevant information not captured in other structured columns of the `forecast_projects` table."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary data source used for this forecast project."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Stores the date and time of the most recent update to the forecast project record in the `forecast_projects` table."
        }
      ]
    },
    {
      "table_name": "forecast_scenarios",
      "description": "The `forecast_scenarios` table stores different forecast scenarios associated with specific forecast projects.  Each scenario is identified by a unique `id` and linked to a `forecast_project_id`.  Scenarios are categorized by `scenario_name` and `scenario_type`, with an assigned `scenario_probability`.  Additional details are provided in the `description` and `key_assumptions` fields.  `last_update_date` tracks the most recent modification, while `data` stores the actual forecast data.  `primary_source_id` identifies the primary data source.  It appears `scenario_name` is duplicated - one instance should likely be removed.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  A unique, automatically incrementing integer serving as the primary key for each forecast scenario record in the `forecast_scenarios` table."
        },
        {
          "name": "forecast_project_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `project_id` column in the `projects` table.  Identifies the project associated with this forecast scenario."
        },
        {
          "name": "scenario_name",
          "type": "VARCHAR",
          "description": "`scenario_name` (VARCHAR):  A descriptive name for the forecast scenario (e.g., \"Best Case\", \"Worst Case\", \"Base Case\").  Used to identify and distinguish between different forecast scenarios within the `forecast_scenarios` table."
        },
        {
          "name": "scenario_type",
          "type": "VARCHAR",
          "description": "Classifies the type of forecast scenario, e.g., 'best case', 'worst case', 'base case', 'optimistic', 'pessimistic'."
        },
        {
          "name": "scenario_probability",
          "type": "NUMERIC",
          "description": "The `scenario_probability` column in the `forecast_scenarios` table stores the likelihood of a given forecast scenario occurring, represented as a numeric value between 0 and 1 (inclusive).  A value of 0 indicates the scenario is impossible, while 1 indicates certainty."
        },
        {
          "name": "description",
          "type": "TEXT",
          "description": "A textual description of the forecast scenario, providing context and details about the assumptions and parameters used."
        },
        {
          "name": "key_assumptions",
          "type": "JSONB",
          "description": "Stores key assumptions made for this forecast scenario as a JSONB object. This allows for flexible storage of various assumptions and their values."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP): Stores the date and time when the forecast scenario was last modified."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value data related to a specific forecast scenario. This allows for storing various scenario-specific parameters and configurations that may not fit into a rigid schema."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary data source used for generating this forecast scenario."
        },
        {
          "name": "scenario_name)",
          "type": "TYPE_UNKNOWN",
          "description": "`scenario_name (TYPE_UNKNOWN)` in the `forecast_scenarios` table stores the name of a specific forecast scenario.  The data type is currently unknown and requires further investigation."
        }
      ]
    },
    {
      "table_name": "forecast_accuracy_analysis",
      "description": "The `forecast_accuracy_analysis` table stores the accuracy metrics of various forecast scenarios. It compares forecasted values against actuals for different entities (e.g., products, regions) and metrics (e.g., sales, demand) across specific time periods.  The table captures absolute and percentage differences, along with the analysis date, notes, and relevant data.  It also links back to the original forecast scenario and primary data source for traceability.  Duplicate columns `entity_type`, `entity_id`, `metric_type`, and `forecast_period` appear to be redundant and should likely be removed.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id`:  A unique, auto-incrementing integer serving as the primary key for the `forecast_accuracy_analysis` table.  It automatically assigns a new value for each new record inserted."
        },
        {
          "name": "forecast_scenario_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `scenario_id` column in the `forecast_scenarios` table.  Identifies the specific forecast scenario used in the accuracy analysis."
        },
        {
          "name": "entity_type",
          "type": "VARCHAR",
          "description": "Classifies the type of entity for which the forecast accuracy is being analyzed (e.g., 'product', 'region', 'customer')."
        },
        {
          "name": "entity_id",
          "type": "INTEGER",
          "description": "Unique identifier for the entity (e.g., product, region, store) for which the forecast accuracy is being analyzed.  This ID links to the corresponding entity record in the relevant entity table."
        },
        {
          "name": "metric_type",
          "type": "VARCHAR",
          "description": "`metric_type` (VARCHAR):  Specifies the type of forecast accuracy metric used in the analysis (e.g., 'MAE', 'RMSE', 'MAPE', 'WMAPE')."
        },
        {
          "name": "forecast_period",
          "type": "VARCHAR",
          "description": "The `forecast_period` column in the `forecast_accuracy_analysis` table is a VARCHAR field that defines the time period for which the forecast was generated.  This could represent a specific date, a week, a month, a quarter, or any other defined period relevant to the forecast analysis."
        },
        {
          "name": "forecast_value",
          "type": "NUMERIC",
          "description": "The `forecast_value` column in the `forecast_accuracy_analysis` table stores the predicted numerical value generated by a forecasting model. This value represents the anticipated quantity, such as demand, sales, or price, for a specific future period.  It is stored as a NUMERIC data type to accommodate a wide range of potential values and facilitate accurate calculations of forecast accuracy."
        },
        {
          "name": "actual_value",
          "type": "NUMERIC",
          "description": "The `actual_value` column in the `forecast_accuracy_analysis` table stores the NUMERIC representation of the actual observed value for a given metric, used in comparison with the forecasted value to calculate forecast accuracy."
        },
        {
          "name": "absolute_difference",
          "type": "NUMERIC",
          "description": "Stores the absolute difference between the forecasted value and the actual value, used in forecast accuracy calculations.  Data type is NUMERIC for precise representation of the difference."
        },
        {
          "name": "percentage_difference",
          "type": "NUMERIC",
          "description": "Stores the percentage difference between the forecasted value and the actual value, calculated as ((Actual - Forecast) / Actual) * 100.  Used in the `forecast_accuracy_analysis` table to assess forecast performance."
        },
        {
          "name": "analysis_date",
          "type": "DATE",
          "description": "The `analysis_date` column in the `forecast_accuracy_analysis` table stores the date on which the forecast accuracy analysis was performed.  Data type is DATE, representing the date only (no time component)."
        },
        {
          "name": "analysis_notes",
          "type": "TEXT",
          "description": "`analysis_notes` (TEXT): Holds free-form text notes and observations regarding the forecast accuracy analysis. This may include explanations for discrepancies, contextual information affecting accuracy, or insights gained during the analysis process."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing various data points related to the forecast accuracy analysis.  This may include forecast values, actual values, error metrics, and other relevant information for a specific analysis."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary data source used in generating the forecast being analyzed in the `forecast_accuracy_analysis` table."
        },
        {
          "name": "entity_type",
          "type": "TYPE_UNKNOWN",
          "description": "Classifies the type of entity the forecast accuracy analysis pertains to.  Currently uses a placeholder value `TYPE_UNKNOWN` as the specific entity types are not yet defined.  This column will be updated in the future with specific entity type identifiers."
        },
        {
          "name": "entity_id",
          "type": "TYPE_UNKNOWN",
          "description": "`entity_id` (TYPE_UNKNOWN):  The identifier for the entity (e.g., product, region, store) for which the forecast accuracy is being analyzed in the `forecast_accuracy_analysis` table.  The specific meaning of the identifier depends on the context and requires further investigation to determine the appropriate data type."
        },
        {
          "name": "metric_type",
          "type": "TYPE_UNKNOWN",
          "description": "The `metric_type` column in the `forecast_accuracy_analysis` table specifies the type of accuracy metric used for the analysis.  Currently, its type is `TYPE_UNKNOWN`, indicating that the specific metric types being stored are not yet formally defined or categorized within the system.  This likely requires further development to enumerate and assign meaningful types to the stored metrics."
        },
        {
          "name": "forecast_period)",
          "type": "TYPE_UNKNOWN",
          "description": "`forecast_period` (TYPE_UNKNOWN):  The period of the forecast being analyzed in the `forecast_accuracy_analysis` table.  The specific unit of time (e.g., day, week, month) represented by this column is currently unknown and requires further investigation."
        }
      ]
    },
    {
      "table_name": "forecast_drivers",
      "description": "The `forecast_drivers` table stores information about the drivers influencing a specific forecast scenario.  It captures the driver category, name, description, baseline value, projected values, impact description, sensitivity level, and data source.  Each driver is linked to a forecast scenario via `forecast_scenario_id`. The `data` column allows for storing structured data related to the driver, while `primary_source_id` can link to an external source. Note: `driver_category` and `driver_name` appear twice in the provided schema, which is likely redundant.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each forecast driver. Automatically increments on insertion. Serves as the primary key for the `forecast_drivers` table."
        },
        {
          "name": "forecast_scenario_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `scenario_id` column in the `forecast_scenarios` table.  Identifies the specific forecast scenario (e.g., best case, worst case, base case) to which the driver values in this record belong."
        },
        {
          "name": "driver_category",
          "type": "VARCHAR",
          "description": "Categorization of the driver impacting the forecast (e.g., 'Economic', 'Seasonal', 'Promotional', 'Competitive')."
        },
        {
          "name": "driver_name",
          "type": "VARCHAR",
          "description": "`driver_name` (VARCHAR): Stores the name of the driver influencing the forecast.  This could be an internal or external factor, such as \"Seasonality\", \"Marketing Campaign\", \"Competitor Activity\", or \"Economic Downturn\"."
        },
        {
          "name": "driver_description",
          "type": "TEXT",
          "description": "A textual description of the driver impacting the forecast, providing context or details about the driver's influence.  This field allows for free-form notes and explanations."
        },
        {
          "name": "value_type",
          "type": "VARCHAR",
          "description": "Indicates the type of value stored for the forecast driver, such as 'percentage', 'absolute', 'index', etc."
        },
        {
          "name": "baseline_value",
          "type": "NUMERIC",
          "description": "The `baseline_value` column in the `forecast_drivers` table stores the initial numeric value used as a starting point for forecasting calculations. This value represents the known quantity or historical data point against which future projections are compared or derived."
        },
        {
          "name": "projected_values",
          "type": "JSONB",
          "description": "`projected_values` (JSONB): Stores a JSON object containing projected values for different forecast drivers.  This allows for flexible storage of various driver data points and their corresponding projections."
        },
        {
          "name": "driver_impact_description",
          "type": "TEXT",
          "description": "A textual description of the impact of a specific forecast driver. This field provides qualitative context and details about how the driver influences the forecast."
        },
        {
          "name": "sensitivity_level",
          "type": "VARCHAR",
          "description": "Classifies the sensitivity of the forecast driver (e.g., 'High', 'Medium', 'Low') indicating the potential impact of changes in the driver on the forecast outcome."
        },
        {
          "name": "data_source",
          "type": "VARCHAR",
          "description": "Identifies the source of the data used for the forecast driver.  (VARCHAR)"
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value pairs related to the forecast driver.  This allows for storing various driver-specific attributes and metadata without requiring schema changes."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the primary data source (ID) used for this specific forecast driver."
        },
        {
          "name": "driver_category",
          "type": "TYPE_UNKNOWN",
          "description": "Classifies the forecast driver, but the specific categories and their meaning are currently undefined (TYPE_UNKNOWN).  Further documentation is needed to clarify the usage of this column."
        },
        {
          "name": "driver_name)",
          "type": "TYPE_UNKNOWN",
          "description": "`driver_name (TYPE_UNKNOWN)` in the `forecast_drivers` table stores the name of the forecast driver.  Further investigation is needed to determine the specific data type of this column.  It may contain text strings representing driver names, or it could be a placeholder or legacy column."
        }
      ]
    },
    {
      "table_name": "forecast_model_changes",
      "description": "The `forecast_model_changes` table tracks modifications made to forecast models within specific projects.  It logs the date, author, type of change (e.g., parameter adjustment, model switch), a description of the change, the rationale behind it, its anticipated impact on the forecast, and the previous and new values.  It also stores any relevant data associated with the change and links to the primary data source if applicable. Each change is uniquely identified by `id` and associated with a `forecast_project_id`.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each change recorded in the `forecast_model_changes` table.  Automatically increments with each new entry."
        },
        {
          "name": "forecast_project_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `project_id` column in the `forecast_projects` table.  Identifies the forecast project to which this model change belongs."
        },
        {
          "name": "change_date",
          "type": "TIMESTAMP",
          "description": "`change_date` (TIMESTAMP): Records the timestamp of when a change was made to the forecast model."
        },
        {
          "name": "changed_by",
          "type": "VARCHAR",
          "description": "Stores the identifier (e.g., username or ID) of the user or process that made a change to the forecast model."
        },
        {
          "name": "change_type",
          "type": "VARCHAR",
          "description": "Stores the type of change made to the forecast model, e.g., 'parameter update', 'model retraining', 'data source change'."
        },
        {
          "name": "change_description",
          "type": "TEXT",
          "description": "`change_description` (TEXT):  Describes the modifications made to the forecast model. This may include changes to parameters, algorithms, data sources, or any other relevant details."
        },
        {
          "name": "reason_for_change",
          "type": "TEXT",
          "description": "`reason_for_change` (TEXT):  A description explaining the rationale behind a modification to the forecast model.  This may include details such as bug fixes, methodology improvements, data updates, or adjustments based on new information."
        },
        {
          "name": "impact_on_forecast",
          "type": "TEXT",
          "description": "Description of the 'impact_on_forecast' column (TEXT) in the 'forecast_model_changes' table:\n\nThis column stores a free-text description of how the corresponding model change is expected to impact the resulting forecast. This could include qualitative descriptions of expected direction and magnitude of change (e.g., \"Slight increase in predicted sales volume\", \"Significant decrease in Q4 revenue\"),  or explanations of which specific forecast metrics will be affected (e.g., \"Impacts average order value but not conversion rate\")."
        },
        {
          "name": "previous_value",
          "type": "JSONB",
          "description": "Stores the previous JSON representation of a forecast model's configuration before a change was applied. This allows for auditing and rollback capabilities."
        },
        {
          "name": "new_value",
          "type": "JSONB",
          "description": "Stores the new JSON representation of a forecast model parameter after a change. This column, within the `forecast_model_changes` table, allows tracking modifications to model parameters by preserving their new state in JSON format."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data` (JSONB): Stores the specific changes made to a forecast model's configuration or parameters. This could include updates to model variables, coefficients, or other relevant data."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `primary_sources` table.  Indicates the primary data source used for the specific forecast model change."
        }
      ]
    },
    {
      "table_name": "scientific_events",
      "description": "The `scientific_events` table stores information about scientific conferences, workshops, symposiums, and other similar events.  Each event is uniquely identified by `id`.  Key details include the event's `name`, `acronym`, `event_type`, `start_date`, `end_date`, `location_city`, `location_country`, `organizing_body`, and `website_url`.  `importance_tier` categorizes the event's significance.  `recurring_event_id` links events that are part of a series. `data` allows for storing additional event-specific information. `last_update_date` tracks the last modification, and `primary_source_id` references the original information source. Note: `start_date` appears to be listed twice, likely a typo.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each scientific event. Automatically increments for each new record. Serves as the primary key for the `scientific_events` table."
        },
        {
          "name": "name",
          "type": "VARCHAR",
          "description": "The `name` column in the `scientific_events` table is a string (VARCHAR) representing the name or title of a scientific event."
        },
        {
          "name": "acronym",
          "type": "VARCHAR",
          "description": "A short string containing the acronym of the scientific event (e.g., \"ICML\" for International Conference on Machine Learning)."
        },
        {
          "name": "event_type",
          "type": "VARCHAR",
          "description": "Classifies the type of scientific event, such as \"Conference,\" \"Workshop,\" \"Seminar,\" or \"Symposium.\"  Stored as a string."
        },
        {
          "name": "start_date",
          "type": "DATE",
          "description": "The `start_date` column in the `scientific_events` table stores the date on which a scientific event begins.  Data type is DATE (YYYY-MM-DD)."
        },
        {
          "name": "end_date",
          "type": "DATE",
          "description": "The `end_date` column of type `DATE` in the `scientific_events` table stores the date on which a scientific event concludes.  This column does not include time information."
        },
        {
          "name": "location_city",
          "type": "VARCHAR",
          "description": "The `location_city` column in the `scientific_events` table stores the city where a scientific event (e.g., conference, workshop, symposium) takes place.  It is a string value (VARCHAR)."
        },
        {
          "name": "location_country",
          "type": "VARCHAR",
          "description": "The `location_country` column in the `scientific_events` table stores the two-letter country code (VARCHAR) where a scientific event (e.g., conference, workshop) takes place.  "
        },
        {
          "name": "organizing_body",
          "type": "VARCHAR",
          "description": "The `organizing_body` column (VARCHAR) in the `scientific_events` table stores the name or title of the institution, organization, or group primarily responsible for organizing and hosting the scientific event.  This could be a university, professional society, government agency, or company, for example."
        },
        {
          "name": "website_url",
          "type": "VARCHAR",
          "description": "The `website_url` column in the `scientific_events` table stores the URL (as a string) of the official website for a scientific event."
        },
        {
          "name": "importance_tier",
          "type": "INTEGER",
          "description": "Classifies the scientific event's importance using integer tiers. Higher values represent greater importance.  (e.g., 1=Low, 2=Medium, 3=High)"
        },
        {
          "name": "recurring_event_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `events` table.  Identifies the recurring event series (if any) to which this scientific event belongs. `NULL` if the event is not part of a recurring series."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value data related to the scientific event. This allows for storing various event-specific attributes that don't fit neatly into predefined columns.  Examples include experimental parameters, instrument readings, participant demographics, or custom metadata."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time when information for this scientific event was last modified in the `scientific_events` table."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source (e.g., publication, dataset) associated with this scientific event."
        },
        {
          "name": "start_date)",
          "type": "TYPE_UNKNOWN",
          "description": "`start_date` (TYPE_UNKNOWN) in the `scientific_events` table represents the starting date of a scientific event.  The specific data type is currently unknown and requires further investigation."
        }
      ]
    },
    {
      "table_name": "scientific_publications",
      "description": "The `scientific_publications` table stores comprehensive information about scientific publications, including details about the publication type, research phase, authorship, journal information, publication and preprint details, open access status, impact metrics, review status, associated data, source identifiers, and update timestamps.  It allows for tracking publications from preprint stage through peer review and final publication, capturing a broad range of metadata for analysis and retrieval.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique, auto-incrementing integer serving as the primary key for identifying each scientific publication record in the `scientific_publications` table."
        },
        {
          "name": "publication_type",
          "type": "VARCHAR",
          "description": "Stores the type of scientific publication (e.g., journal article, conference paper, book chapter, preprint)."
        },
        {
          "name": "research_phase",
          "type": "VARCHAR",
          "description": "`research_phase`:  (VARCHAR) Indicates the stage of research for the publication, such as \"Basic Research,\" \"Applied Research,\" \"Clinical Trial Phase 1,\" \"Clinical Trial Phase 2,\" etc."
        },
        {
          "name": "title",
          "type": "TEXT",
          "description": "The `title` column in the `scientific_publications` table stores the full title of the scientific publication as TEXT, allowing for titles of varying lengths."
        },
        {
          "name": "authors",
          "type": "TEXT",
          "description": "A TEXT column storing the author(s) of the scientific publication.  This can include multiple authors separated by a delimiter (e.g., comma, semicolon) or utilize a structured format like JSON for more complex author information."
        },
        {
          "name": "first_author",
          "type": "VARCHAR",
          "description": "`first_author` (VARCHAR): Stores the name of the first author listed for the scientific publication."
        },
        {
          "name": "last_author",
          "type": "VARCHAR",
          "description": "Stores the name of the last author (typically the senior or corresponding author) contributing to the scientific publication."
        },
        {
          "name": "corresponding_author",
          "type": "VARCHAR",
          "description": "`corresponding_author` (VARCHAR):  Name and contact information (e.g., email address, affiliation) of the author responsible for correspondence regarding the publication."
        },
        {
          "name": "journal_name",
          "type": "VARCHAR",
          "description": "`journal_name` (VARCHAR): Stores the name of the scientific journal where the publication appeared."
        },
        {
          "name": "publisher",
          "type": "VARCHAR",
          "description": "Stores the name of the publisher of the scientific publication."
        },
        {
          "name": "publication_date",
          "type": "DATE",
          "description": "The `publication_date` column in the `scientific_publications` table stores the date (YYYY-MM-DD) on which a scientific publication was officially published."
        },
        {
          "name": "doi",
          "type": "VARCHAR",
          "description": "The `doi` column in the `scientific_publications` table stores the Digital Object Identifier (DOI) of a publication as a string.  The DOI is a persistent identifier that provides a stable link to the publication's location on the internet."
        },
        {
          "name": "pmid",
          "type": "VARCHAR",
          "description": "PubMed ID (PMID) of the publication.  A unique identifier assigned by the National Library of Medicine to each article indexed in PubMed."
        },
        {
          "name": "open_access",
          "type": "BOOLEAN",
          "description": "Indicates whether the scientific publication is open access (TRUE) or not (FALSE)."
        },
        {
          "name": "impact_factor",
          "type": "NUMERIC",
          "description": "The `impact_factor` column in the `scientific_publications` table stores a journal's impact factor as a numeric value, representing the average number of citations received in a particular year by papers published in the journal during the two preceding years.  A higher value generally indicates greater influence and prestige."
        },
        {
          "name": "citation_count",
          "type": "INTEGER",
          "description": "Number of times this scientific publication has been cited by other publications.  Stored as an integer."
        },
        {
          "name": "is_peer_reviewed",
          "type": "BOOLEAN",
          "description": "Indicates whether the scientific publication has undergone peer review (TRUE) or not (FALSE)."
        },
        {
          "name": "abstract",
          "type": "TEXT",
          "description": "A text field containing the abstract of the scientific publication. This summarizes the key findings and purpose of the research."
        },
        {
          "name": "full_text_available",
          "type": "BOOLEAN",
          "description": "Indicates whether the full text of the scientific publication is available in the system (TRUE) or not (FALSE)."
        },
        {
          "name": "preprint_server",
          "type": "VARCHAR",
          "description": "`preprint_server`:  (VARCHAR) Stores the name of the preprint server (e.g., arXiv, bioRxiv, medRxiv) where the preprint version of the publication was originally hosted.  NULL if no preprint was posted."
        },
        {
          "name": "preprint_doi",
          "type": "VARCHAR",
          "description": "The `preprint_doi` column in the `scientific_publications` table stores the Digital Object Identifier (DOI) of a preprint version of the publication, if one exists.  This is a character string representing the unique identifier for the preprint."
        },
        {
          "name": "preprint_version",
          "type": "VARCHAR",
          "description": "Stores the version number or identifier (e.g., \"v1\", \"v2\", \"Revision 1\") of a preprint associated with the scientific publication.  This helps track different iterations of the preprint before formal publication."
        },
        {
          "name": "preprint_posted_date",
          "type": "DATE",
          "description": "`preprint_posted_date` (DATE):  The date a preprint version of the scientific publication was posted online, if applicable.  This field is left NULL if no preprint was posted."
        },
        {
          "name": "publication_status",
          "type": "VARCHAR",
          "description": "Stores the publication status of a scientific publication (e.g., \"Submitted\", \"Under Review\", \"Accepted\", \"Published\", \"Rejected\")."
        },
        {
          "name": "review_status",
          "type": "VARCHAR",
          "description": "`review_status`: (VARCHAR) Stores the current status of the peer review process for the scientific publication.  Possible values could include 'Submitted', 'Under Review', 'Accepted', 'Rejected', 'Revision Requested', etc."
        },
        {
          "name": "review_timeline",
          "type": "JSONB",
          "description": "Stores a JSONB object representing the timeline of a scientific publication's review process. This could include dates and details for submission, revisions, reviews received, acceptance, and publication."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible, unstructured data related to the scientific publication.  This may include supplementary materials, author affiliations, funding information, or other relevant details not captured in dedicated columns."
        },
        {
          "name": "document_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the source (e.g., journal, conference, preprint server) from which the scientific publication was obtained."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source (e.g., journal article, book chapter, conference proceeding) for this scientific publication."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time when information for this scientific publication was last modified in the database."
        }
      ]
    },
    {
      "table_name": "entity_publications",
      "description": "The `entity_publications` table stores relationships between publications and various entities (e.g., authors, institutions, journals).  Each record links a specific publication (`publication_id`) to an entity (`entity_id` of type `entity_type`) via a defined relationship (`relationship_type`), such as \"author\", \"publisher\", or \"funder\".  `publication_rank` allows ordering of multiple entities related to a publication (e.g., first author, second author).  `supersedes_publication_id` tracks updates or revisions to publications. `document_source_id` indicates the source of the publication data. `data` stores additional JSON formatted information about the relationship. `last_update_date` records when the entry was last modified.  The table's primary key is `id`.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique serial identifier automatically generated for each publication record in the `entity_publications` table. Serves as the primary key."
        },
        {
          "name": "publication_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column of the 'publications' table.  Identifies the publication associated with this entity."
        },
        {
          "name": "entity_type",
          "type": "VARCHAR",
          "description": "Stores the type of entity making the publication (e.g., 'researcher', 'institution', 'journal')."
        },
        {
          "name": "entity_id",
          "type": "INTEGER",
          "description": "`entity_id` (INTEGER):  A unique identifier referencing a specific entity in the related 'entities' table. This column links a publication record in 'entity_publications' to the entity it belongs to."
        },
        {
          "name": "relationship_type",
          "type": "VARCHAR",
          "description": "Defines the type of relationship between an entity (e.g., author, editor) and a publication (e.g., book, article).  Examples include \"author\", \"editor\", \"contributor\", \"translator\"."
        },
        {
          "name": "publication_rank",
          "type": "INTEGER",
          "description": "`publication_rank`:  An integer representing the relative rank or importance of a publication within the context of an entity's publications.  Lower values indicate higher rank (e.g., 1 is the most important publication).  Null values are permitted if the rank is unknown or not applicable."
        },
        {
          "name": "supersedes_publication_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `publication_id` column within the `entity_publications` table.  Indicates a publication that this record supersedes or replaces.  `NULL` if this publication does not supersede another."
        },
        {
          "name": "document_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the source (e.g., journal, website, database) from which the publication document associated with this entity was retrieved."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data` (JSONB): Stores flexible, unstructured publication-related data for entities. This column allows for storing various attributes and metadata associated with a publication, which may not fit into a predefined schema."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP): Stores the date and time of the most recent update to the entity publication record."
        },
        {
          "name": "entity_type",
          "type": "TYPE_UNKNOWN",
          "description": "Classifies the type of entity associated with a publication. Currently uses a placeholder value 'TYPE_UNKNOWN' for entities whose type is undetermined or unclassified."
        },
        {
          "name": "entity_id",
          "type": "TYPE_UNKNOWN",
          "description": "`entity_id` (TYPE_UNKNOWN):  A unique identifier for the entity associated with the publication in the `entity_publications` table.  The specific type of this identifier is currently unknown and requires further investigation."
        },
        {
          "name": "relationship_type)",
          "type": "TYPE_UNKNOWN",
          "description": "`relationship_type` (TYPE_UNKNOWN):  The nature of the entity's relationship to the publication. The specific format and allowed values for this column are currently undefined."
        }
      ]
    },
    {
      "table_name": "research_program_publication_details",
      "description": "The `research_program_publication_details` table stores specific information about publications related to a research program.  It links to publication records via `entity_publication_id`, detailing the research stage, model systems used, key findings, and technology platforms employed.  `data_cutoff_date` indicates the date the data was collected for the publication. The `data` column stores additional structured or unstructured data relevant to the publication. `last_update_date` tracks when the record was last modified.  Each record is uniquely identified by `id`.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each entry in the `research_program_publication_details` table. Automatically increments with each new record. Serves as the primary key."
        },
        {
          "name": "entity_publication_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'publication_id' column in the 'entity_publications' table.  Identifies the specific publication associated with a research program."
        },
        {
          "name": "research_stage",
          "type": "VARCHAR",
          "description": "Indicates the stage of research at the time of publication for a given research program.  Possible values may include (but are not limited to) \"Preliminary Findings,\" \"Pilot Study,\" \"Phase 1,\" \"Phase 2,\" \"Phase 3,\" \"Completed,\" and \"Post-Market Surveillance.\""
        },
        {
          "name": "model_systems",
          "type": "TEXT",
          "description": "`model_systems`:  A text field storing a comma-separated list of model systems (e.g., mouse, zebrafish, cell culture) used in the research described in the publication associated with this research program."
        },
        {
          "name": "key_findings",
          "type": "TEXT",
          "description": "Key findings or takeaways from the publication related to the research program.  This field can include a brief summary of the main results, conclusions, or significant discoveries."
        },
        {
          "name": "technology_platforms_used",
          "type": "TEXT",
          "description": "A text field storing a comma-separated list of technology platforms utilized in the research associated with the publication.  This could include software, hardware, or specific online resources."
        },
        {
          "name": "data_cutoff_date",
          "type": "DATE",
          "description": "The `data_cutoff_date` column in the `research_program_publication_details` table stores the date (YYYY-MM-DD) representing the cutoff point for data inclusion regarding publications associated with a specific research program.  This indicates the last date considered when gathering publication data."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value pairs related to the publication details for a research program. This allows for storing various publication-specific attributes that might not fit into a traditional schema."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time when the information for this research program publication detail was last modified."
        }
      ]
    },
    {
      "table_name": "clinical_trial_publication_details",
      "description": "This table, `clinical_trial_publication_details`, stores information about publications related to clinical trials. Each record represents a specific publication and includes details such as the publication type, data cutoff date, follow-up duration, analysis type (primary, interim, or final), and the actual publication data.  The `entity_publication_id` links to a related publication entity, while `id` serves as the primary key.  `last_update_date` tracks when the record was last modified.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique identifier for each clinical trial publication detail.  Automatically increments for each new record."
        },
        {
          "name": "entity_publication_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `publication_id` column in the `entity_publications` table.  Identifies the publication associated with this clinical trial publication detail record."
        },
        {
          "name": "publication_type",
          "type": "VARCHAR",
          "description": "The `publication_type` column in the `clinical_trial_publication_details` table stores the type of publication associated with a clinical trial, such as \"Journal Article,\" \"Conference Abstract,\" \"Preprint,\" or \"Study Protocol.\"  This is a string value (VARCHAR)."
        },
        {
          "name": "data_cutoff_date",
          "type": "DATE",
          "description": "The `data_cutoff_date` column in the `clinical_trial_publication_details` table stores the date (YYYY-MM-DD) representing the cutoff point for data inclusion in the publication associated with the clinical trial.  This indicates the last date of data collection or observation considered in the published results."
        },
        {
          "name": "follow_up_duration",
          "type": "VARCHAR",
          "description": "The `follow_up_duration` column in the `clinical_trial_publication_details` table stores the length of the follow-up period for the clinical trial as a string.  This may be expressed in various formats (e.g., \"12 months\", \"2 years\", \"36 weeks\")."
        },
        {
          "name": "is_primary_analysis",
          "type": "BOOLEAN",
          "description": "Indicates whether the publication represents the primary analysis of the clinical trial (TRUE) or a secondary/exploratory analysis, re-analysis, or other related publication (FALSE)."
        },
        {
          "name": "is_interim_analysis",
          "type": "BOOLEAN",
          "description": "Indicates whether the publication reports on an interim analysis of the clinical trial (TRUE) or presents final results (FALSE)."
        },
        {
          "name": "is_final_analysis",
          "type": "BOOLEAN",
          "description": "Indicates whether the analysis presented in the publication is the final analysis for the associated clinical trial (TRUE) or if further analysis is expected/planned (FALSE)."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing miscellaneous data related to the clinical trial publication. This flexible field can accommodate various structured information not captured by other dedicated columns, such as author affiliations, funding details, or supplementary materials."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time when the information in this row of the `clinical_trial_publication_details` table was last modified."
        }
      ]
    },
    {
      "table_name": "publication_target_details",
      "description": "The `publication_target_details` table stores specific information about the targets investigated within a given publication.  It links to a publication via `entity_publication_id`, specifies the `target_role`, `evidence_type`, `cellular_context`, and `in_vivo_models` used in the research.  `key_findings` summarizes the main results related to the target, while `data` may hold more detailed information. `last_update_date` tracks the most recent modification to the record.  The `id` column serves as the primary key for unique identification.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id`:  A unique, auto-incrementing integer that serves as the primary key for the `publication_target_details` table.  It uniquely identifies each record within the table."
        },
        {
          "name": "entity_publication_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `publication_id` column in the `entity_publications` table.  Identifies the specific publication associated with this target detail record."
        },
        {
          "name": "target_role",
          "type": "VARCHAR",
          "description": "The `target_role` column in the `publication_target_details` table stores a string value representing the role or purpose a specific target serves for a publication.  This could indicate things like \"primary audience\", \"secondary audience\", \"reviewer\", \"editor\", etc."
        },
        {
          "name": "evidence_type",
          "type": "VARCHAR",
          "description": "`evidence_type` (VARCHAR):  Classifies the type of evidence supporting the association between a publication and a target (e.g., \"direct interaction\", \"genetic association\", \"reported mention\")."
        },
        {
          "name": "cellular_context",
          "type": "VARCHAR",
          "description": "`cellular_context`: (VARCHAR) Describes the cellular environment or specific cell types relevant to the publication target, such as \"T cells\", \"epithelial cells\", or \"in vivo\".  This helps categorize targets based on their biological context."
        },
        {
          "name": "in_vivo_models",
          "type": "VARCHAR",
          "description": "Specifies the in vivo models (e.g., mouse, rat, zebrafish) used in the publication's target validation experiments.  Multiple models can be listed, separated by commas."
        },
        {
          "name": "key_findings",
          "type": "TEXT",
          "description": "Key findings or takeaways from targeting specific publications, providing a summary of the analysis or results related to each publication's performance and audience engagement."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value pairs related to the publication target's specifics.  This allows for storing various attributes without requiring schema changes, accommodating diverse target platforms and configurations."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time of the most recent modification to the publication target details."
        }
      ]
    },
    {
      "table_name": "publication_versions",
      "description": "The `publication_versions` table tracks different versions of a publication, linking preprints to their corresponding final published versions (if any).  It stores the relationship between versions (e.g., \"is_preprint_of\", \"is_revision_of\"), the date of transition, a flag indicating significant changes between versions, additional version-specific data, and IDs referencing the primary source and both preprint and final publications.  Note:  `final_publication_id` appears twice in your provided list - this likely represents an error, and one should probably be removed (perhaps in favor of something like `preprint_publication_id`).",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique sequential identifier automatically generated for each version of a publication.  Serves as the primary key for the `publication_versions` table."
        },
        {
          "name": "preprint_publication_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of a preprint publication in the `preprints` table.  This links a specific version of a publication record to its original preprint, if applicable."
        },
        {
          "name": "final_publication_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `publications` table.  Represents the ID of the final published version of a publication."
        },
        {
          "name": "relationship_type",
          "type": "VARCHAR",
          "description": "Stores the type of relationship this publication version has to other versions (e.g., \"revision\", \"edition\", \"translation\", \"reprint\")."
        },
        {
          "name": "transition_date",
          "type": "DATE",
          "description": "The `transition_date` column in the `publication_versions` table stores the date (YYYY-MM-DD) on which a particular publication version transitioned to a new status (e.g., draft to published, published to archived)."
        },
        {
          "name": "significant_changes",
          "type": "TEXT",
          "description": "Stores a textual description of the significant changes introduced in this version of the publication compared to the previous version. This could include details about added/removed content, corrections, or major revisions."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data` (JSONB): Stores flexible, unstructured data associated with a specific version of a publication.  This may include content, metadata, or other relevant information in JSON format, allowing for efficient querying and indexing of specific attributes within the JSON document."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `primary_sources` table.  Identifies the primary source document associated with this version of the publication."
        },
        {
          "name": "final_publication_id)",
          "type": "TYPE_UNKNOWN",
          "description": "`final_publication_id (TYPE_UNKNOWN)` in the `publication_versions` table likely stores the identifier of the final published version of a publication.  The specific data type is unknown and needs further investigation.  This column probably links to a record in another table containing the final published version details."
        }
      ]
    },
    {
      "table_name": "publication_altmetrics",
      "description": "The `publication_altmetrics` table stores alternative metrics (altmetrics) for publications. Each record represents a specific metric collected for a given publication at a particular time.  It includes the metric type, value, source, raw data, and a link back to the original data source if applicable.  `publication_id` connects the record to a specific publication. Duplicate metric_type and collection_date are allowed to potentially represent different sources for the same metric.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each altmetric entry.  Automatically increments for each new record.  Serves as the primary key for the `publication_altmetrics` table."
        },
        {
          "name": "publication_id",
          "type": "INTEGER",
          "description": "Unique identifier for a publication, referencing a record in the main publications table.  Used to link alternative metrics data to specific publications."
        },
        {
          "name": "metric_type",
          "type": "VARCHAR",
          "description": "`metric_type`:  (VARCHAR) Specifies the type of altmetric tracked for the publication, e.g., 'citation', 'mention', 'download', 'tweet', 'news_article'."
        },
        {
          "name": "metric_value",
          "type": "INTEGER",
          "description": "`metric_value`: An integer representing the numerical value of a specific altmetric for a publication.  This could be a count (e.g., number of tweets), a score, or other quantifiable metric."
        },
        {
          "name": "collection_date",
          "type": "DATE",
          "description": "The `collection_date` column in the `publication_altmetrics` table stores the date (YYYY-MM-DD) on which the altmetrics data for a given publication was collected.  This allows tracking of altmetric changes over time."
        },
        {
          "name": "source",
          "type": "VARCHAR",
          "description": "The `source` column in the `publication_altmetrics` table is a VARCHAR field that identifies the platform or service from which the altmetric data was collected (e.g., Twitter, Mendeley, Facebook, etc.)."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  Stores alternative metrics (altmetrics) data for a publication in JSONB format. This allows for flexible storage of diverse metrics and providers, including counts, scores, and other relevant information."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source (e.g., article, dataset) in a related table.  Used to link altmetrics data to the specific publication it describes."
        },
        {
          "name": "metric_type",
          "type": "TYPE_UNKNOWN",
          "description": "`metric_type` (TYPE_UNKNOWN):  Indicates the type of altmetric associated with this record.  The specific meaning of the values stored here is currently unknown and requires further investigation."
        },
        {
          "name": "collection_date)",
          "type": "TYPE_UNKNOWN",
          "description": "`collection_date (TYPE_UNKNOWN)` in the `publication_altmetrics` table stores the date when the altmetric data for a given publication was collected.  The specific data type is currently unknown and requires further investigation."
        }
      ]
    },
    {
      "table_name": "scientific_presentations",
      "description": "The `scientific_presentations` table stores information about scientific presentations, including details about the presenter, event, key findings, and availability of materials. It links to publications through `entity_publication_id` and data sources via `document_source_id` and `primary_source_id`.  `presentation_id` uniquely identifies each presentation, while `event_id` links to information about the event where the presentation occurred. The table tracks data updates with `last_update_date` and includes a flag (`has_new_data`) to indicate presentations with novel data.  `presentation_date` and `event_id` appear to be duplicated column names, likely an error.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each scientific presentation record.  Automatically increments with each new entry. Serves as the primary key for the table."
        },
        {
          "name": "entity_publication_id",
          "type": "INTEGER",
          "description": "Unique identifier for a publication associated with a scientific presentation.  Foreign key referencing the 'id' column in the 'publications' table."
        },
        {
          "name": "presentation_date",
          "type": "DATE",
          "description": "The `presentation_date` column in the `scientific_presentations` table stores the date on which a scientific presentation was given.  It is of type `DATE`, storing only the date (year, month, and day) without time or timezone information."
        },
        {
          "name": "presentation_type",
          "type": "VARCHAR",
          "description": "Stores the format of the scientific presentation, such as \"oral presentation,\" \"poster presentation,\" \"workshop,\" or \"invited talk.\""
        },
        {
          "name": "presentation_id",
          "type": "VARCHAR",
          "description": "`presentation_id` (VARCHAR): A unique identifier for each scientific presentation."
        },
        {
          "name": "presenter_name",
          "type": "VARCHAR",
          "description": "`presenter_name` (VARCHAR): Stores the name of the presenter for a scientific presentation."
        },
        {
          "name": "presenter_affiliation",
          "type": "VARCHAR",
          "description": "The `presenter_affiliation` column in the `scientific_presentations` table stores the institutional affiliation (e.g., university, company, research institute) of the presenter as a string.  This allows for identifying the organization the presenter represents during their scientific presentation."
        },
        {
          "name": "event_id",
          "type": "INTEGER",
          "description": "Unique identifier for a scientific presentation event.  This INTEGER value serves as a primary key for referencing specific presentations within the `scientific_presentations` table."
        },
        {
          "name": "presentation_title",
          "type": "TEXT",
          "description": "`presentation_title` (TEXT):  The title of the scientific presentation."
        },
        {
          "name": "key_findings",
          "type": "TEXT",
          "description": "Key findings or takeaways from the scientific presentation, summarized in text format."
        },
        {
          "name": "has_new_data",
          "type": "BOOLEAN",
          "description": "Indicates whether the scientific presentation has new data associated with it (true) or not (false)."
        },
        {
          "name": "presentation_materials_available",
          "type": "BOOLEAN",
          "description": "Indicates whether presentation materials (e.g., slides, posters, transcripts) are available for the scientific presentation.  `TRUE` if materials are available, `FALSE` if not."
        },
        {
          "name": "document_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the source (e.g., journal, conference proceedings) where the scientific presentation's document can be found."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing miscellaneous data related to the scientific presentation. This can include details like abstract, presentation format (poster/oral), keywords, authors, affiliations, supporting materials links, and other relevant information not captured in dedicated columns."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time when information about this scientific presentation was last modified."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source (e.g., publication, dataset) upon which the scientific presentation is based."
        },
        {
          "name": "presentation_date",
          "type": "TYPE_UNKNOWN",
          "description": "`presentation_date` (TYPE_UNKNOWN) - The date of the scientific presentation.  Further investigation is needed to determine the specific data type stored in this column (e.g., DATE, DATETIME, VARCHAR)."
        },
        {
          "name": "event_id)",
          "type": "TYPE_UNKNOWN",
          "description": "`event_id (TYPE_UNKNOWN)`:  A unique identifier for the event associated with the scientific presentation.  The specific format of this identifier is currently unknown and requires further investigation."
        }
      ]
    },
    {
      "table_name": "publication_analysis_sets",
      "description": "The `publication_analysis_sets` table stores information about different analysis sets defined within a publication. Each record represents a specific cohort of patients (defined by `analysis_set_criteria` and optionally stored in `data`) used for analysis, linked to a specific publication (`publication_id`).  `analysis_set_name` and `analysis_set_description` provide details about the set, while `patient_count` indicates its size.  `is_primary` flags the primary analysis set for the publication. `last_update_date` tracks the last modification time. `primary_source_id` likely refers to a source system identifier. Note: `analysis_set_name` appears to be duplicated.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique auto-incrementing integer identifier for each publication analysis set within the `publication_analysis_sets` table. Serves as the primary key."
        },
        {
          "name": "publication_id",
          "type": "INTEGER",
          "description": "Unique identifier for a publication.  Foreign key referencing the `publication` table."
        },
        {
          "name": "analysis_set_name",
          "type": "VARCHAR",
          "description": "The `analysis_set_name` column (VARCHAR) in the `publication_analysis_sets` table stores the descriptive name assigned to a specific analysis set used in a publication.  This name helps identify and distinguish different sets of data or cohorts analyzed within the publication."
        },
        {
          "name": "analysis_set_description",
          "type": "TEXT",
          "description": "A textual description of the analysis set used in the publication. This field provides context and details about the specific criteria used to define the subset of data analyzed (e.g., inclusion/exclusion criteria, specific cohorts, timeframes)."
        },
        {
          "name": "patient_count",
          "type": "INTEGER",
          "description": "Number of patients included in the analysis set described in this publication."
        },
        {
          "name": "is_primary",
          "type": "BOOLEAN",
          "description": "Indicates whether this analysis set is the primary one for the publication.  A publication can have multiple analysis sets, but only one can be marked as primary."
        },
        {
          "name": "analysis_set_criteria",
          "type": "TEXT",
          "description": "The `analysis_set_criteria` column in the `publication_analysis_sets` table stores the textual description of the criteria used to define a specific analysis set within a publication. This could include inclusion/exclusion criteria, filters applied, or any other relevant information about how the analysis set was constructed."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data` (JSONB): Stores arbitrary data related to the publication analysis set, often containing results, parameters, or metadata in a flexible JSON format."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time when the data in the `publication_analysis_sets` table was last modified."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source (e.g., article, book) used in the publication analysis set."
        },
        {
          "name": "analysis_set_name)",
          "type": "TYPE_UNKNOWN",
          "description": "The `analysis_set_name` column in the `publication_analysis_sets` table stores the name of the analysis set. The specific data type is currently unknown (TYPE_UNKNOWN) and requires further investigation.  This column likely identifies or categorizes different sets of data used for analysis within a publication."
        }
      ]
    },
    {
      "table_name": "publication_study_arms",
      "description": "The `publication_study_arms` table stores information about the individual arms (treatment groups) described within a clinical study publication.  Each record represents a specific arm, linked to its parent publication (`publication_id`) and optionally to a corresponding trial arm (`corresponds_to_trial_arm_id`).  Key information includes the arm name, description, treatment details, whether it's a control group, patient count, associated data, and the last update date. The `primary_source_id` identifies the original source of the arm information.  The table uses `id` as a primary key. Note: the column `arm_name` appears twice which likely indicates a design error.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique identifier for each study arm within a publication. Automatically increments for each new record."
        },
        {
          "name": "publication_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column of the 'publications' table.  Identifies the publication associated with this study arm."
        },
        {
          "name": "arm_name",
          "type": "VARCHAR",
          "description": "`arm_name` (VARCHAR):  The name or label assigned to a specific arm (e.g., treatment group, control group, placebo group) within a clinical study."
        },
        {
          "name": "arm_description",
          "type": "TEXT",
          "description": "Description of the study arm, including details like treatment, dosage, control type (e.g., placebo, active comparator), or intervention procedures."
        },
        {
          "name": "treatment_description",
          "type": "TEXT",
          "description": "A textual description of the treatment administered to a study arm in a published research study. This may include details of specific interventions, dosages, schedules, and control procedures."
        },
        {
          "name": "is_control",
          "type": "BOOLEAN",
          "description": "Indicates whether the study arm is a control group (true) or not (false)."
        },
        {
          "name": "patient_count",
          "type": "INTEGER",
          "description": "Number of patients enrolled in a specific study arm of a publication."
        },
        {
          "name": "corresponds_to_trial_arm_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `trial_arm_id` column in the `trial_arms` table.  Indicates which trial arm in the original study this publication-specific study arm corresponds to.  Allows linking of reported results back to the pre-specified trial arms."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data` (JSONB):  Stores flexible, structured data related to the study arm of a publication. This can include various arm-specific details not captured in other columns, allowing for extensibility and accommodation of diverse study designs."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time of the most recent modification to the associated study arm information within the `publication_study_arms` table."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `primary_sources` table.  Identifies the primary data source for the study arm information."
        },
        {
          "name": "arm_name)",
          "type": "TYPE_UNKNOWN",
          "description": "`arm_name (TYPE_UNKNOWN)` in the `publication_study_arms` table stores the name or label assigned to a specific study arm within a published research study. The exact data type is currently unknown and requires further investigation."
        }
      ]
    },
    {
      "table_name": "publication_results",
      "description": "The `publication_results` table stores individual results extracted from scientific publications.  Each result is linked to a specific publication (`publication_id`) and characterized by its type (`result_type`), associated endpoint (`endpoint_name`, `endpoint_definition`), analysis population (`analysis_set_id`), treatment arms (`arm_id`, `comparator_arm_id`), and timepoint.  It holds key statistical information such as the result value (`result_value`), significance (`statistical_significance`, `p_value`), confidence interval, and effect size.  Hierarchical relationships between results are captured using `result_hierarchy` and `parent_result_id`.  Flags indicate comparative analyses (`is_comparative`), post-hoc analyses (`is_post_hoc`), and deviations from the study protocol (`differs_from_protocol`). Raw result data is stored in the `data` column.  `importance_rank` allows for prioritization of results, and `primary_source_id` links back to the original data source if applicable.  The table is updated via `last_update_date`.  (Note: Some column names are duplicated and should be reviewed - e.g. endpoint_name, analysis_set_id, arm_id, comparator_arm_id, timepoint, parent_result_id.)",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`publication_results.id`: A unique, auto-incrementing integer that serves as the primary key for each publication result record."
        },
        {
          "name": "publication_id",
          "type": "INTEGER",
          "description": "Unique identifier for a publication record.  Foreign key referencing the `publication` table."
        },
        {
          "name": "result_type",
          "type": "VARCHAR",
          "description": "Classifies the type of result presented in the publication, e.g., \"experimental\", \"theoretical\", \"simulation\", \"review\"."
        },
        {
          "name": "endpoint_name",
          "type": "VARCHAR",
          "description": "`endpoint_name` (VARCHAR):  The name of the endpoint where the publication results were sent or retrieved."
        },
        {
          "name": "endpoint_definition",
          "type": "TEXT",
          "description": "`endpoint_definition` (TEXT):  Stores the specific definition or criteria used for a given endpoint in the publication results. This might include the exact measurement, threshold, or specific criteria used to assess the endpoint in the study being referenced."
        },
        {
          "name": "analysis_set_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `analysis_set` table.  Identifies the specific set of analysis parameters and data used to generate the results stored in this row of the `publication_results` table."
        },
        {
          "name": "arm_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `arm_id` column in the `study_arms` table.  Identifies the specific study arm to which the publication results belong."
        },
        {
          "name": "comparator_arm_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of a comparator arm within a clinical trial publication.  Used to link results to a specific comparator arm."
        },
        {
          "name": "is_comparative",
          "type": "BOOLEAN",
          "description": "Indicates whether the results presented in this publication are based on a comparative study (TRUE) or not (FALSE)."
        },
        {
          "name": "result_value",
          "type": "VARCHAR",
          "description": "Stores the textual representation of a result value associated with a publication.  This may include qualitative descriptions, non-numeric values, or textual representations of numeric data."
        },
        {
          "name": "statistical_significance",
          "type": "BOOLEAN",
          "description": "Indicates whether the results presented in this publication achieved statistical significance (TRUE) or not (FALSE)."
        },
        {
          "name": "p_value",
          "type": "FLOAT",
          "description": "The `p_value` column in the `publication_results` table stores the calculated p-value (represented as a FLOAT) for a given statistical test in a published research result.  This value indicates the statistical significance of the observed results."
        },
        {
          "name": "confidence_interval",
          "type": "VARCHAR",
          "description": "Stores the confidence interval (e.g., \"95%\") associated with a reported result in a publication.  This field is stored as text to accommodate various representations of confidence intervals."
        },
        {
          "name": "effect_size",
          "type": "JSON",
          "description": "`effect_size` (JSON):  Stores the calculated effect size(s) for the reported results of a publication.  This may include various effect size metrics (e.g., Cohen's d, odds ratio, eta-squared) and associated confidence intervals,  allowing for flexible storage and querying of different effect size types."
        },
        {
          "name": "timepoint",
          "type": "VARCHAR",
          "description": "Indicates the specific time or period during the research when the result was observed or measured.  This could be a specific date, a range of dates, or a descriptive label (e.g., \"baseline\", \"follow-up\", \"6 months\")."
        },
        {
          "name": "result_hierarchy",
          "type": "INTEGER",
          "description": "`result_hierarchy` (INTEGER): Represents the hierarchical level of a research result within a publication.  Higher integer values indicate a more granular or sub-level result.  For example, 1 might represent a main finding, while 2 and 3 could represent supporting data or sub-analyses related to that main finding."
        },
        {
          "name": "parent_result_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `result_id` column (INTEGER) in the `publication_results` table.  Indicates the ID of a parent result if this result is part of a hierarchical structure or derived from another result within the same publication.  Nullable, allowing for top-level results without parents."
        },
        {
          "name": "importance_rank",
          "type": "INTEGER",
          "description": "Integer representing the importance or priority ranking of a publication result.  Higher values indicate greater importance."
        },
        {
          "name": "differs_from_protocol",
          "type": "BOOLEAN",
          "description": "Indicates whether the reported results in this publication differ from the results expected based on the registered study protocol.  `TRUE` if the results deviate from the protocol, `FALSE` if they are consistent, and `NULL` if the comparison cannot be made (e.g., no protocol available or insufficient information)."
        },
        {
          "name": "is_post_hoc",
          "type": "BOOLEAN",
          "description": "Indicates whether the result was obtained through post hoc analysis (TRUE) or planned comparison (FALSE)."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value data related to the publication result. This allows for storing various metadata and results specific to each publication without requiring schema changes."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time when the data in this publication result row was last modified."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column of the 'sources' table.  Identifies the primary source for the publication result."
        },
        {
          "name": "endpoint_name",
          "type": "TYPE_UNKNOWN",
          "description": "`endpoint_name` (TYPE_UNKNOWN):  The name or identifier of the endpoint associated with a publication result.  The specific format and meaning of this value are currently unknown and require further investigation."
        },
        {
          "name": "analysis_set_id",
          "type": "TYPE_UNKNOWN",
          "description": "Foreign key referencing a (currently undefined) analysis set.  This likely identifies the specific subset of data used to generate the results stored in this row of the `publication_results` table."
        },
        {
          "name": "arm_id",
          "type": "TYPE_UNKNOWN",
          "description": "`arm_id` (TYPE_UNKNOWN):  Identifier for a specific arm or cohort within a publication's reported results. The precise nature of this identifier is currently unknown and requires further investigation.  It may refer to a treatment group, control group, or other subgrouping used in the study."
        },
        {
          "name": "comparator_arm_id",
          "type": "TYPE_UNKNOWN",
          "description": "Foreign key referencing a specific arm (e.g., treatment group, control group) within a comparator used for analysis in a published result.  Data type is currently unknown and requires further investigation."
        },
        {
          "name": "timepoint",
          "type": "TYPE_UNKNOWN",
          "description": "`timepoint` (TYPE_UNKNOWN) -  The specific point in time or period associated with the publication result.  Further clarification on the data type and format is needed."
        },
        {
          "name": "parent_result_id)",
          "type": "TYPE_UNKNOWN",
          "description": "`parent_result_id (TYPE_UNKNOWN)` in the `publication_results` table refers to a related result.  The specific nature of this relationship and the data type are currently unknown and require further investigation.  It may represent a link to a previous version, a parent record, or another related result."
        }
      ]
    },
    {
      "table_name": "publication_result_graphics",
      "description": "The `publication_result_graphics` table stores graphical data associated with publication results.  Each record represents a figure or graphic, linked to a specific publication (`publication_id`) and potentially a location within a document (`document_location_id`). It includes details such as figure number, title, caption, type, related endpoints, image path, raw data, and the date of the last update.  A `primary_source_id` identifies the original data source. Note: `figure_number` appears to be duplicated.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique serial identifier for each graphic associated with a publication result.  Automatically increments on each new entry."
        },
        {
          "name": "publication_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `publication` table.  Identifies the publication to which the result graphic belongs."
        },
        {
          "name": "figure_number",
          "type": "VARCHAR",
          "description": "`figure_number`: (VARCHAR)  A string identifier for the figure within the publication.  This could be a simple number (\"1\", \"2\", \"S1\"), a more complex label (\"1A\", \"2.1\"), or a descriptive name (\"Flow Cytometry Results\")."
        },
        {
          "name": "figure_title",
          "type": "TEXT",
          "description": "`figure_title` (TEXT):  Stores the descriptive title or caption for a figure (e.g., graph, chart, image) associated with a publication result's graphical representation."
        },
        {
          "name": "figure_caption",
          "type": "TEXT",
          "description": "`figure_caption` (TEXT): Stores the descriptive caption for a figure or graphic associated with a publication result.  This field provides context and explains the content of the visual element."
        },
        {
          "name": "figure_type",
          "type": "VARCHAR",
          "description": "Stores the type of figure represented in the graphic, e.g., 'graph', 'chart', 'diagram', 'photo', 'illustration'."
        },
        {
          "name": "related_endpoints",
          "type": "TEXT",
          "description": "Stores a JSON array of strings representing related API endpoints for the publication result graphic.  These endpoints might provide data downloads, alternative formats, or related visualizations."
        },
        {
          "name": "image_path",
          "type": "VARCHAR",
          "description": "Stores the file path or URL of an image associated with a publication result graphic."
        },
        {
          "name": "document_location_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'document_locations' table.  Identifies the location (e.g., URL, file path) of a graphic associated with a publication result."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data` (JSONB): Stores flexible, structured data related to the graphic associated with a publication result.  This might include image metadata, layout information, or other relevant properties."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time when the publication result graphic was last modified."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source (e.g., image, dataset) used to create the graphic associated with a publication result."
        },
        {
          "name": "figure_number)",
          "type": "TYPE_UNKNOWN",
          "description": "`figure_number` (TYPE_UNKNOWN):  The figure number associated with a graphic within a publication result.  Further investigation is needed to determine the specific data type."
        }
      ]
    },
    {
      "table_name": "publication_subgroup_analyses",
      "description": "The `publication_subgroup_analyses` table stores information about subgroup analyses conducted within publications. Each record represents a single subgroup analysis and links back to its parent result (`parent_result_id`) within the publication (`publication_id`).  The table captures details like the type of subgroup (`subgroup_type`), the criteria used to define the subgroup (`subgroup_criteria`), the size of the subgroup (`subgroup_size`), whether the analysis was pre-specified (`is_prespecified`), the interaction p-value (`interaction_p_value`), and an associated forest plot figure (`forest_plot_figure_id`). Raw data associated with the analysis can be stored in the `data` column.  `last_update_date` tracks the most recent modification, and `primary_source_id` identifies the original data source.  Duplicate columns `parent_result_id`, `subgroup_type`, and `subgroup_criteria` appear to be an error and should likely be removed.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each publication subgroup analysis record.  Automatically increments on insertion.  Serves as the primary key for this table."
        },
        {
          "name": "publication_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column of the 'publications' table.  Identifies the publication associated with the subgroup analysis."
        },
        {
          "name": "parent_result_id",
          "type": "INTEGER",
          "description": "`parent_result_id` (INTEGER):  Foreign key referencing the `id` column of the `publication_results` table.  Indicates the parent result to which this subgroup analysis belongs.  NULL if the analysis is not associated with a specific parent result."
        },
        {
          "name": "subgroup_type",
          "type": "VARCHAR",
          "description": "Classifies the type of subgroup analysis performed, e.g., \"age\", \"sex\", \"disease severity\", \"comorbidity\"."
        },
        {
          "name": "subgroup_criteria",
          "type": "TEXT",
          "description": "The `subgroup_criteria` column, of type TEXT, in the `publication_subgroup_analyses` table stores the specific criteria used to define a subgroup within a published analysis.  This might include demographic information (e.g., \"age > 65\"), clinical characteristics (e.g., \"stage III disease\"), or other relevant factors used to stratify the analysis."
        },
        {
          "name": "subgroup_size",
          "type": "INTEGER",
          "description": "Number of participants/subjects within a specific subgroup analyzed in a publication."
        },
        {
          "name": "is_prespecified",
          "type": "BOOLEAN",
          "description": "Indicates whether the subgroup analysis was pre-specified (planned before seeing the data) or post-hoc (conducted after examining the data).  `TRUE` represents a pre-specified analysis, `FALSE` represents a post-hoc analysis."
        },
        {
          "name": "interaction_p_value",
          "type": "FLOAT",
          "description": "The `interaction_p_value` column (FLOAT) in the `publication_subgroup_analyses` table stores the p-value resulting from a statistical test of interaction within a subgroup analysis of a published study.  This value indicates the statistical significance of the difference in effect between subgroups."
        },
        {
          "name": "forest_plot_figure_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `figure_id` column in the `forest_plots` table.  Identifies the forest plot figure associated with this particular subgroup analysis within a publication."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing arbitrary data related to the analysis of a publication subgroup. This allows for flexible storage of various analysis-specific information without requiring schema changes."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time of the most recent modification to the corresponding publication subgroup analysis record."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `primary_sources` table.  Identifies the primary source associated with this subgroup analysis within a publication."
        },
        {
          "name": "parent_result_id",
          "type": "TYPE_UNKNOWN",
          "description": "`parent_result_id` (TYPE_UNKNOWN):  Foreign key referencing a related analysis result, potentially from a parent or overarching analysis.  The specific type of result referenced is currently unknown and requires further investigation.  This field likely establishes a hierarchical relationship between analysis results within publication subgroups."
        },
        {
          "name": "subgroup_type",
          "type": "TYPE_UNKNOWN",
          "description": "`subgroup_type` (TYPE_UNKNOWN):  Indicates the type of subgroup analysis performed.  The specific meaning of the values in this column is currently unknown and requires further investigation."
        },
        {
          "name": "subgroup_criteria)",
          "type": "TYPE_UNKNOWN",
          "description": "The `subgroup_criteria` column in the `publication_subgroup_analyses` table defines the criteria used to define a specific subgroup within a publication's analysis.  The data type is currently unknown (TYPE_UNKNOWN) and requires further investigation to determine its structure and content.  This field likely contains information describing how the subgroup was selected or defined, such as specific patient characteristics, interventions, or outcomes."
        }
      ]
    },
    {
      "table_name": "people",
      "description": "The `people` table stores information about individuals, including their contact details, professional background, and areas of expertise.  Each person is uniquely identified by an `id`.  Data includes their name, LinkedIn profile URL, personal email address, phone number, therapeutic focus, functional expertise, general background information, the date of the last update, additional unstructured data, the type of source the information originated from, and the ID within that source system.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each person in the `people` table.  Automatically increments with each new record.  Serves as the primary key."
        },
        {
          "name": "name",
          "type": "VARCHAR",
          "description": "`name` (VARCHAR): Stores the name of a person."
        },
        {
          "name": "linkedin_url",
          "type": "VARCHAR",
          "description": "Stores the LinkedIn profile URL for a person."
        },
        {
          "name": "personal_email",
          "type": "VARCHAR",
          "description": "The `personal_email` column in the `people` table stores the personal email address of a person as a string.  It is of type VARCHAR, allowing for variable-length email addresses."
        },
        {
          "name": "phone",
          "type": "VARCHAR",
          "description": "The `phone` column in the `people` table stores phone numbers as a string (VARCHAR).  It is intended to hold various phone number formats and may include country codes, extensions, or other special characters."
        },
        {
          "name": "therapeutic_focus",
          "type": "VARCHAR",
          "description": "`therapeutic_focus`:  (VARCHAR)  Indicates the primary area of therapeutic concentration or specialization for a person, such as \"Cognitive Behavioral Therapy,\" \"Trauma-Informed Care,\" or \"Mindfulness-Based Stress Reduction.\"  May be NULL if the person is not a therapist or their focus is not specified."
        },
        {
          "name": "functional_expertise",
          "type": "VARCHAR",
          "description": "`functional_expertise` (VARCHAR):  A comma-separated list of areas of functional expertise for a person (e.g., \"Marketing,Sales,Project Management\")."
        },
        {
          "name": "background",
          "type": "TEXT",
          "description": "Stores detailed background information about a person, such as their work history, education, or biographical details.  This field can accommodate long text strings."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the most recent date and time when information for a person in the `people` table was modified."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`: A JSONB column in the `people` table storing flexible, unstructured data related to each person.  This can include various attributes not fitting into traditional columns, allowing for extensibility and customized information storage."
        },
        {
          "name": "source_type",
          "type": "VARCHAR",
          "description": "`source_type` (VARCHAR):  Indicates the origin or method through which the person's information was obtained (e.g., 'online registration', 'referral', 'imported list', 'manual entry')."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column of the 'sources' table.  Indicates the primary source of information for this person's record."
        }
      ]
    },
    {
      "table_name": "employment",
      "description": "The `employment` table stores historical and current employment information for individuals.  It links a person (via `person_id`) to a company (via `company_id`) and records details like job title, department, role type, company contact information, employment dates, and whether the employment is current.  `is_primary_contact` flags if this is the primary point of contact for the person at this company. `data` allows for storage of miscellaneous JSON data related to the employment.  Source tracking is provided through `source_type` and `primary_source_id`.  `last_update_date` tracks when the record was last modified.  `id` serves as the primary key.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`employment.id`: A unique, auto-incrementing integer that serves as the primary key for each employment record."
        },
        {
          "name": "person_id",
          "type": "INTEGER",
          "description": "Unique identifier for a person recorded in the employment table.  References the primary key of the 'persons' table."
        },
        {
          "name": "company_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column of the 'companies' table.  Represents the company a particular employment record is associated with."
        },
        {
          "name": "title",
          "type": "VARCHAR",
          "description": "`title` (VARCHAR):  The job title held during the employment period."
        },
        {
          "name": "department",
          "type": "VARCHAR",
          "description": "The `department` column in the `employment` table is a string (VARCHAR) representing the department within the organization where the employee works (e.g., \"Sales\", \"Engineering\", \"Human Resources\")."
        },
        {
          "name": "role_type",
          "type": "VARCHAR",
          "description": "`role_type` (VARCHAR):  Indicates the type of employment role, such as \"Full-time,\" \"Part-time,\" \"Contract,\" \"Intern,\" etc."
        },
        {
          "name": "company_email",
          "type": "VARCHAR",
          "description": "The `company_email` column in the `employment` table stores the employee's email address assigned by their company.  This is a `VARCHAR` field, allowing for varying lengths of email addresses."
        },
        {
          "name": "company_phone",
          "type": "VARCHAR",
          "description": "The `company_phone` column in the `employment` table stores the phone number of the company associated with a particular employment record.  It is a `VARCHAR` type to accommodate various phone number formats and international numbers."
        },
        {
          "name": "start_date",
          "type": "DATE",
          "description": "The `start_date` column in the `employment` table stores the date an employee's employment began.  It is of the `DATE` data type, storing the year, month, and day."
        },
        {
          "name": "end_date",
          "type": "DATE",
          "description": "The `end_date` column in the `employment` table stores the date (YYYY-MM-DD) when an employee's employment period ended.  A NULL value indicates that the employment is currently active."
        },
        {
          "name": "is_current",
          "type": "BOOLEAN",
          "description": "Indicates whether the employment record is the employee's current position (true) or a past position (false)."
        },
        {
          "name": "is_primary_contact",
          "type": "BOOLEAN",
          "description": "Indicates whether this employment record represents the employee's primary contact information.  A value of TRUE signifies this is the primary contact, while FALSE indicates it is not."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time of the most recent modification to the employment record."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column in the `employment` table storing flexible, unstructured data related to a person's employment.  This might include details like previous roles, skills, projects, or other relevant information not fitting into traditional relational columns."
        },
        {
          "name": "source_type",
          "type": "VARCHAR",
          "description": "Indicates the source from which the employment record was obtained (e.g., 'Company Website', 'LinkedIn', 'Referral', 'Job Board')."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source of the employment record.  Relates to the 'sources' table."
        }
      ]
    },
    {
      "table_name": "expertise_areas",
      "description": "The `expertise_areas` table stores information about different areas of expertise. Each area is uniquely identified by `id` and has a user-friendly `name` and a standardized `canonical_name` for easier searching and comparison. The `expertise_type` categorizes the expertise (e.g., \"skill,\" \"domain,\" \"industry\").  `parent_expertise_id` allows for hierarchical organization, linking an area to a broader parent area.  Finally, the `data` column can store additional JSON formatted information specific to each expertise area.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each expertise area.  Automatically increments. Serves as the primary key for the `expertise_areas` table."
        },
        {
          "name": "name",
          "type": "VARCHAR",
          "description": "`name`:  (VARCHAR) The name of an area of expertise."
        },
        {
          "name": "canonical_name",
          "type": "VARCHAR",
          "description": "Canonical name of the expertise area.  This is the preferred, standardized name used for indexing and searching, ensuring consistency even if alternative names exist."
        },
        {
          "name": "expertise_type",
          "type": "VARCHAR",
          "description": "Classifies the type of expertise, such as \"Technical\", \"Business\", \"Creative\", etc.  Stored as a string."
        },
        {
          "name": "parent_expertise_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column (primary key) of the `expertise_areas` table itself.  Represents the ID of the parent expertise area, allowing for a hierarchical structure of expertise areas.  A null value indicates a top-level expertise area."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`: A JSONB column storing flexible key-value data related to expertise areas.  This allows for storing complex and varied information about each area without requiring predefined schema changes."
        }
      ]
    },
    {
      "table_name": "person_expertise",
      "description": "The `person_expertise` table stores information about a person's expertise in various areas.  It links individuals (via `person_id`) to specific expertise areas (`expertise_id`) and records their `proficiency_level`, `years_experience`, whether it's their `is_primary` area of expertise, additional related `data`, the `last_update_date` of the record, and the `primary_source_id` indicating the origin of the expertise information.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`person_expertise.id`: A unique, auto-incrementing integer that serves as the primary key for the `person_expertise` table.  It identifies each record representing a specific area of expertise for a person."
        },
        {
          "name": "person_id",
          "type": "INTEGER",
          "description": "A unique integer identifying a person associated with an expertise record.  This is a foreign key referencing the 'id' column in the 'person' table."
        },
        {
          "name": "expertise_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'expertise' table.  Identifies the specific expertise a person possesses."
        },
        {
          "name": "proficiency_level",
          "type": "VARCHAR",
          "description": "`proficiency_level` (VARCHAR):  Indicates the level of expertise a person has in a particular skill.  Possible values may include (but are not limited to) \"Beginner\", \"Intermediate\", \"Advanced\", and \"Expert\"."
        },
        {
          "name": "years_experience",
          "type": "INTEGER",
          "description": "Years of experience a person has in a particular expertise.  Stored as a whole number."
        },
        {
          "name": "is_primary",
          "type": "BOOLEAN",
          "description": "Indicates whether the listed expertise is the person's primary area of expertise (true) or not (false)."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible key-value pairs related to a person's expertise. This allows for storing various details about their skills, proficiencies, and experience in a structured but adaptable format."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time when the expertise information for a person in the `person_expertise` table was last modified."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'id' column of the 'sources' table.  Indicates the primary source verifying the person's expertise."
        }
      ]
    },
    {
      "table_name": "entity_milestones",
      "description": "The `entity_milestones` table tracks key milestones for various entities (e.g., projects, products, companies). It records planned and actual completion dates, status, delays, significance, public disclosure information, dependencies, impact on valuation, and other relevant data. Each milestone is categorized and linked to a specific entity and geography.  The table also maintains relationships between milestones and identifies primary data sources.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique serial identifier automatically generated for each milestone within the `entity_milestones` table. Serves as the primary key."
        },
        {
          "name": "entity_type",
          "type": "VARCHAR",
          "description": "Stores the type of entity achieving the milestone (e.g., 'project', 'employee', 'organization')."
        },
        {
          "name": "entity_id",
          "type": "INTEGER",
          "description": "Unique identifier for an entity within the `entity_milestones` table.  This integer links to the primary key of the `entities` table (or similar)."
        },
        {
          "name": "milestone_type_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `milestone_types` table.  Identifies the type of milestone achieved for the entity."
        },
        {
          "name": "milestone_category",
          "type": "VARCHAR",
          "description": "Categorizes the milestone, indicating its general purpose or type (e.g., 'Development', 'Marketing', 'Sales', 'Funding')."
        },
        {
          "name": "milestone_name",
          "type": "VARCHAR",
          "description": "`milestone_name` (VARCHAR):  The name or title of a specific milestone achieved by an entity."
        },
        {
          "name": "planned_date",
          "type": "DATE",
          "description": "The `planned_date` column in the `entity_milestones` table stores the target date (YYYY-MM-DD) for achieving a specific milestone associated with an entity."
        },
        {
          "name": "actual_date",
          "type": "DATE",
          "description": "Stores the actual date on which a specific milestone for an entity was achieved.  This field is of type DATE and does not include time information."
        },
        {
          "name": "status",
          "type": "VARCHAR",
          "description": "The `status` column in the `entity_milestones` table is a string (VARCHAR) representing the current state of a specific milestone for an entity.  This could include values like \"Completed,\" \"In Progress,\" \"Not Started,\" \"Blocked,\" etc."
        },
        {
          "name": "delay_reason",
          "type": "TEXT",
          "description": "`delay_reason`:  (TEXT)  Provides a textual explanation for any delay in reaching a specific milestone for an entity. This field can be left NULL if the milestone was reached on time or early."
        },
        {
          "name": "geography_id",
          "type": "INTEGER",
          "description": "Foreign key referencing a geographical location (e.g., country, region, city) record.  Identifies the geography associated with this entity milestone."
        },
        {
          "name": "company_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `companies` table.  Identifies the company associated with this milestone."
        },
        {
          "name": "significance",
          "type": "VARCHAR",
          "description": "Significance of the milestone for the entity.  This field allows for a textual description of why the milestone is important."
        },
        {
          "name": "public_disclosure_date",
          "type": "DATE",
          "description": "The `public_disclosure_date` column in the `entity_milestones` table stores the date (YYYY-MM-DD) on which a specific milestone was publicly disclosed or announced."
        },
        {
          "name": "disclosure_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `disclosure_sources` table.  Identifies the source of information for the associated entity milestone."
        },
        {
          "name": "next_milestone_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column (primary key) of the `milestones` table.  Indicates the ID of the next milestone in the sequence for a given entity.  NULL if there are no further milestones."
        },
        {
          "name": "dependencies",
          "type": "JSONB",
          "description": "Stores a JSONB object representing dependencies for a given entity milestone. This object can define relationships to other milestones or entities, specifying criteria that must be met before this milestone can be considered completed."
        },
        {
          "name": "impact_on_valuation",
          "type": "TEXT",
          "description": "Describes the impact of a given milestone on the entity's valuation (e.g., \"Increased valuation by 10%\", \"No significant impact\", \"Triggered a down round\")."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data` (JSONB): Stores flexible, semi-structured data related to the milestone for the entity. This can include various attributes, depending on the milestone type, and allows for schema-less storage and querying of milestone-specific information."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `id` column of the `primary_sources` table.  Indicates the primary source documenting this entity milestone."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP): Stores the date and time of the most recent update to a milestone record in the `entity_milestones` table."
        }
      ]
    },
    {
      "table_name": "milestone_types",
      "description": "The `milestone_types` table defines various types of milestones, categorizing them by area and specifying relevant entity types, expected timelines, visibility, significance, and descriptions.  It allows for consistent tracking and reporting of progress across different project entities.  The `id` acts as a primary key, while `milestone_category` groups related milestone types. `applicable_entity_types` indicates which entities (e.g., projects, tasks) the milestone type applies to. `typical_timeline` provides an estimated duration. `is_public` controls visibility. `significance_level` highlights the milestone's importance.  `description` offers further details.  The redundant `milestone_type` column appears to be an error and should likely be removed.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique identifier for each milestone type. Automatically increments on insertion."
        },
        {
          "name": "milestone_category",
          "type": "VARCHAR",
          "description": "Categorization of milestones.  This field specifies the general category a milestone belongs to (e.g., 'Development', 'Testing', 'Deployment', 'Marketing')."
        },
        {
          "name": "milestone_type",
          "type": "VARCHAR",
          "description": "The `milestone_type` column in the `milestone_types` table stores a string value representing the category or classification of a milestone (e.g., \"Project Start\", \"Design Complete\", \"Testing Phase\", \"Launch\").  This column allows for categorization and filtering of milestones based on their type."
        },
        {
          "name": "applicable_entity_types",
          "type": "VARCHAR",
          "description": "A comma-separated list of entity types to which this milestone type applies.  For example, \"PROJECT,TASK,SUBTASK\"."
        },
        {
          "name": "typical_timeline",
          "type": "VARCHAR",
          "description": "Typical timeline for completion of this milestone type.  This is a descriptive value and not used for calculations.  (e.g., \"1-2 weeks\", \"3 months\", \"Before launch\")"
        },
        {
          "name": "is_public",
          "type": "BOOLEAN",
          "description": "Indicates whether the milestone type is publicly visible (true) or internal only (false)."
        },
        {
          "name": "significance_level",
          "type": "VARCHAR",
          "description": "Significance Level of the milestone type (e.g., \"High\", \"Medium\", \"Low\").  Used for categorization and reporting."
        },
        {
          "name": "description",
          "type": "TEXT",
          "description": "A textual description of the milestone type. This field provides further details about the nature and purpose of the milestone."
        },
        {
          "name": "milestone_type)",
          "type": "TYPE_UNKNOWN",
          "description": "The `milestone_type` column in the `milestone_types` table stores the type of milestone.  The specific meaning of the type is currently unknown (TYPE_UNKNOWN) and requires further investigation. This column likely holds a value that categorizes different milestones."
        }
      ]
    },
    {
      "table_name": "program_terminations",
      "description": "The `program_terminations` table tracks the discontinuation of research programs, capturing details such as the termination date, associated entities (drug, combination, regimen, trial, indication, company), development stage, reasons for termination, impact assessment (pipeline, financial, staffing, facilities, assets), and disclosure information.  It also links to any successor programs or out-licensing arrangements resulting from the termination.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each program termination record.  Automatically increments upon insertion. Serves as the primary key for the table."
        },
        {
          "name": "termination_date",
          "type": "DATE",
          "description": "The `termination_date` column of type `DATE` in the `program_terminations` table stores the date on which a specific program was terminated.  This date indicates the official end of the program's operation."
        },
        {
          "name": "research_program_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `research_programs` table.  Identifies the research program associated with this termination record."
        },
        {
          "name": "drug_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the 'drugs' table.  Identifies the drug associated with the program termination record."
        },
        {
          "name": "combination_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific combination of factors leading to program termination.  Foreign key referencing the `combinations` table."
        },
        {
          "name": "regimen_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `regimens` table.  Identifies the specific treatment regimen associated with the program termination record."
        },
        {
          "name": "clinical_trial_id",
          "type": "INTEGER",
          "description": "Unique identifier for the clinical trial associated with the program termination record.  Foreign key referencing the `clinical_trials` table."
        },
        {
          "name": "indication_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `indications` table.  Identifies the reason or indication for the program termination."
        },
        {
          "name": "indication_specification_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `indication_specifications` table.  Identifies the specific indication leading to the program termination."
        },
        {
          "name": "terminating_company_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `company_id` column in the `companies` table.  Identifies the company that initiated the termination of a program."
        },
        {
          "name": "development_stage",
          "type": "VARCHAR",
          "description": "Indicates the stage of development the program had reached at the time of termination.  Possible values may include (but are not limited to): 'Planning', 'Development', 'Testing', 'Deployment', 'Production'."
        },
        {
          "name": "termination_type",
          "type": "VARCHAR",
          "description": "Stores the reason for program termination, such as \"Completed,\" \"Cancelled,\" \"Transferred,\" or \"Dismissed.\""
        },
        {
          "name": "specific_reasons",
          "type": "JSONB",
          "description": "Stores a JSONB object containing specific reasons for a program termination.  This allows for flexible storage of multiple reasons and associated details, such as dates, explanations, or related identifiers."
        },
        {
          "name": "decision_trigger",
          "type": "VARCHAR",
          "description": "`decision_trigger`:  (VARCHAR) Describes the event or reason that initiated the program termination.  This could be a user action, a system event, or a predefined criteria being met."
        },
        {
          "name": "decision_data_reference_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `decision_data` table.  Stores the ID of the decision data record associated with the program termination."
        },
        {
          "name": "was_anticipated",
          "type": "BOOLEAN",
          "description": "Indicates whether the program termination was anticipated (true) or unexpected (false)."
        },
        {
          "name": "impact_level",
          "type": "VARCHAR",
          "description": "Indicates the severity or magnitude of the program termination.  Possible values are defined elsewhere (e.g., lookup table or data dictionary) and represent categories such as \"Low,\" \"Medium,\" or \"High.\""
        },
        {
          "name": "disclosure_date",
          "type": "DATE",
          "description": "The `disclosure_date` column of type DATE in the `program_terminations` table stores the date when the termination of a specific program was publicly disclosed or announced."
        },
        {
          "name": "disclosure_vehicle",
          "type": "VARCHAR",
          "description": "`disclosure_vehicle` (VARCHAR):  Indicates the method used to disclose the program termination, e.g., \"press release\", \"email notification\", \"website announcement\", \"SEC filing\", etc."
        },
        {
          "name": "official_rationale",
          "type": "TEXT",
          "description": "`official_rationale` (TEXT):  Stores the official, documented reason for the termination of a program.  This may include details about performance, budget constraints, strategic shifts, or other relevant factors."
        },
        {
          "name": "pipeline_impact",
          "type": "TEXT",
          "description": "`pipeline_impact`:  Describes the anticipated impact on the program's pipeline (e.g., recruitment, onboarding, etc.) resulting from the program termination.  This field allows for free-form text explanation."
        },
        {
          "name": "financial_impact",
          "type": "JSONB",
          "description": "Stores a JSON document detailing the financial impact of terminating a program. This may include costs associated with termination (e.g., severance, contract buyouts) and projected savings or losses resulting from the termination."
        },
        {
          "name": "headcount_impact",
          "type": "INTEGER",
          "description": "The `headcount_impact` column in the `program_terminations` table is an integer representing the net change in employee headcount resulting from the program termination.  A positive value indicates an increase in headcount (e.g., through reassignments), while a negative value indicates a decrease (e.g., through layoffs).  Zero indicates no net change."
        },
        {
          "name": "facility_impact",
          "type": "BOOLEAN",
          "description": "Indicates whether the termination of the program had an impact on the facility (true) or not (false)."
        },
        {
          "name": "asset_disposition",
          "type": "VARCHAR",
          "description": "`asset_disposition` (VARCHAR):  Describes how assets associated with the terminated program were handled (e.g., sold, transferred, returned, disposed)."
        },
        {
          "name": "successor_program_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the `program_id` column in the `programs` table.  Indicates the ID of the program that replaced or succeeded the terminated program.  Nullable, as not all terminated programs will have a successor."
        },
        {
          "name": "out_licensed_to_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the entity (e.g., company, institution) to which the program was out-licensed upon termination.  NULL if the program was not out-licensed."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  (JSONB) Stores arbitrary data related to the program termination, such as reasons for termination, termination details, or any other relevant information."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source documenting the program termination.  This allows tracking back to the original record of termination (e.g., a letter, a system entry, etc.)."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time of the most recent modification to the program termination record."
        }
      ]
    },
    {
      "table_name": "termination_data_points",
      "description": "The `termination_data_points` table stores individual data points related to specific termination events. Each record represents a single metric observed during a termination, including its value, a potentially associated threshold, significance level, data source, impact weight, and any relevant notes or raw data.  The `termination_id` links the data point to a specific termination event. `data_type` and `metric_name` categorize the observed metric.  `primary_source_id` identifies the primary origin of the data point if applicable. Note that `data_type` and `metric_name` appear twice, which is likely a design error and one set should be removed.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each termination data point. Automatically increments with each new record. Serves as the primary key for the `termination_data_points` table."
        },
        {
          "name": "termination_id",
          "type": "INTEGER",
          "description": "Unique identifier for a specific termination event recorded in the `termination_data_points` table.  This is an integer value."
        },
        {
          "name": "data_type",
          "type": "VARCHAR",
          "description": "Stores the type of data represented by the termination data point (e.g., 'voltage', 'current', 'power', 'temperature')."
        },
        {
          "name": "metric_name",
          "type": "VARCHAR",
          "description": "`metric_name` (VARCHAR):  The name of the termination metric being tracked (e.g., 'employee_initiated', 'involuntary', 'retirement')."
        },
        {
          "name": "observed_value",
          "type": "VARCHAR",
          "description": "The `observed_value` column in the `termination_data_points` table stores a string representation of the observed data point value at the termination event. This could include various types of information depending on the termination context, and is stored as text due to the potential for mixed data types or complex values that cannot be easily represented numerically."
        },
        {
          "name": "threshold_value",
          "type": "VARCHAR",
          "description": "The `threshold_value` column in the `termination_data_points` table stores a string representation of the termination threshold. This value is used to determine when a specific process or event should be terminated."
        },
        {
          "name": "significance",
          "type": "VARCHAR",
          "description": "Significance of the data point in the termination process (e.g., 'primary reason', 'contributing factor', 'irrelevant')."
        },
        {
          "name": "data_source",
          "type": "VARCHAR",
          "description": "Identifies the source of the termination data point (e.g., HR system, payroll system, external provider)."
        },
        {
          "name": "impact_weight",
          "type": "VARCHAR",
          "description": "`impact_weight`:  (VARCHAR) Represents the impact or severity of a termination data point.  This could be a qualitative value (e.g., 'Low', 'Medium', 'High') or a more granular scale defined elsewhere."
        },
        {
          "name": "notes",
          "type": "TEXT",
          "description": "`notes`:  (TEXT)  Free-form text field for recording any relevant notes or comments related to the termination data point."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data` (JSONB): Stores arbitrary data related to a termination data point. This field provides flexibility for storing various attributes and values associated with the termination event in a structured JSON format."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source document (e.g., contract, agreement) associated with this termination data point."
        },
        {
          "name": "data_type",
          "type": "TYPE_UNKNOWN",
          "description": "Indicates the specific data type of the termination data point when the exact type cannot be immediately determined or categorized within the predefined types.  This typically requires further investigation or processing."
        },
        {
          "name": "metric_name)",
          "type": "TYPE_UNKNOWN",
          "description": "`metric_name (TYPE_UNKNOWN)` in the `termination_data_points` table stores the name of the termination metric being recorded.  The specific data type is currently unknown and requires further investigation."
        }
      ]
    },
    {
      "table_name": "termination_pattern_analysis",
      "description": "The `termination_pattern_analysis` table stores the results of analyses performed on program terminations. Each record represents a specific analysis run, identified by its `id`, and includes details like the `analysis_date`, `analysis_type` (e.g., cohort, overall), `analysis_scope` (e.g., department, region), the analyzed `time_period`, aggregated metrics such as `total_terminations`, `total_active_programs`, and the calculated `termination_rate`.  Benchmark comparisons, distributions of termination stages and reasons, key insights derived from the analysis, and the raw `data` used are also stored.  The `primary_source_id` links to the original data source and `last_update_date` tracks the record's most recent modification.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique identifier for each termination pattern analysis record.  Automatically increments on insertion. Serves as the primary key for the table."
        },
        {
          "name": "analysis_date",
          "type": "DATE",
          "description": "The `analysis_date` column in the `termination_pattern_analysis` table stores the date on which the termination pattern analysis was performed.  It is of type `DATE` and thus stores only the date (year, month, and day) without time components."
        },
        {
          "name": "analysis_type",
          "type": "VARCHAR",
          "description": "`analysis_type` (VARCHAR):  Specifies the type of termination pattern analysis performed.  Examples include 'standard deviation', 'percentile', 'trend analysis', etc."
        },
        {
          "name": "analysis_scope",
          "type": "VARCHAR",
          "description": "Defines the scope of the termination pattern analysis, such as 'department', 'company', 'industry', or 'specific project'."
        },
        {
          "name": "time_period_start",
          "type": "DATE",
          "description": "The `time_period_start` column in the `termination_pattern_analysis` table stores the starting date of the time period being analyzed for termination patterns.  It is of type `DATE` and therefore only stores the date (year, month, and day) without any time component."
        },
        {
          "name": "time_period_end",
          "type": "DATE",
          "description": "`time_period_end` (DATE):  The end date of the time period considered for termination pattern analysis."
        },
        {
          "name": "total_terminations",
          "type": "INTEGER",
          "description": "Total number of terminations observed within the specific context being analyzed in the `termination_pattern_analysis` table."
        },
        {
          "name": "total_active_programs",
          "type": "INTEGER",
          "description": "Total number of active programs for the entity being analyzed in the termination pattern analysis."
        },
        {
          "name": "termination_rate",
          "type": "NUMERIC",
          "description": "Termination rate represented as a decimal value.  This column in the `termination_pattern_analysis` table quantifies the rate at which something is terminated (e.g., a subscription, employment, contract)."
        },
        {
          "name": "benchmark_comparison",
          "type": "NUMERIC",
          "description": "`benchmark_comparison` (NUMERIC):  A numerical value representing the comparison of a termination pattern against a benchmark. This could be a ratio, difference, or other calculated metric indicating how the observed termination pattern deviates from the expected benchmark."
        },
        {
          "name": "stage_distribution",
          "type": "JSONB",
          "description": "Stores a JSON document representing the distribution of terminations across different stages of a process.  This allows for flexible tracking of counts or percentages at each stage."
        },
        {
          "name": "reason_distribution",
          "type": "JSONB",
          "description": "Stores a JSONB object representing the distribution of reasons for terminations.  This object could contain key-value pairs where keys represent termination reasons (e.g., \"layoff\", \"resignation\", \"performance\") and values represent the count or percentage of terminations attributed to that reason within a specific pattern."
        },
        {
          "name": "key_insights",
          "type": "TEXT",
          "description": "`key_insights` (TEXT):  Summarizes the most important findings and observations derived from the termination pattern analysis. This may include trends, anomalies, or significant contributing factors related to employee terminations."
        },
        {
          "name": "data",
          "type": "JSONB",
          "description": "`data`:  A JSONB column storing flexible data related to the termination pattern analysis. This can include various attributes, metrics, and results of the analysis, allowing for schema-less storage and efficient querying of specific data points."
        },
        {
          "name": "primary_source_id",
          "type": "INTEGER",
          "description": "Foreign key referencing the ID of the primary source document used in the termination pattern analysis."
        },
        {
          "name": "last_update_date",
          "type": "TIMESTAMP",
          "description": "`last_update_date` (TIMESTAMP):  Records the date and time of the most recent update to the termination pattern analysis record."
        }
      ]
    },
    {
      "table_name": "entity_versions",
      "description": "The `entity_versions` table tracks historical changes to various entities within the system.  Each record represents a specific version of an entity, storing the previous and current data, along with metadata about the change like the timestamp, user responsible, and the reason for the modification.  `entity_type` identifies the kind of entity being tracked, while `entity_id` and `version_number` pinpoint the specific entity and its revision.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  Unique, auto-incrementing identifier for each version of an entity in the `entity_versions` table. Serves as the primary key."
        },
        {
          "name": "entity_type",
          "type": "VARCHAR",
          "description": "Stores the type of entity represented in this version, e.g., 'user', 'product', 'order'."
        },
        {
          "name": "entity_id",
          "type": "INTEGER",
          "description": "A unique integer identifier for the entity whose versions are tracked in this table (`entity_versions`).  It serves as a foreign key referencing the primary key of the `entities` table."
        },
        {
          "name": "version_number",
          "type": "INTEGER",
          "description": "Stores the version number of an entity.  Each increment represents a new revision of the entity."
        },
        {
          "name": "changed_by",
          "type": "VARCHAR",
          "description": "Stores the identifier (e.g., username, user ID) of the user or system process that made the changes recorded in this version of the entity."
        },
        {
          "name": "change_reason",
          "type": "TEXT",
          "description": "`change_reason` (TEXT):  A description of the reason for the change captured in this version of the entity.  This can include user-provided explanations, automated system updates, or other relevant context."
        },
        {
          "name": "previous_data",
          "type": "JSONB",
          "description": "Stores a JSONB representation of the entity's data before the current version. This allows tracking changes and reverting to previous states."
        },
        {
          "name": "current_data",
          "type": "JSONB",
          "description": "`current_data` (JSONB): Stores the current version's data for the entity as a JSON document.  This allows for flexible and evolving data structures within each entity version."
        },
        {
          "name": "change_timestamp",
          "type": "TIMESTAMP",
          "description": "`change_timestamp` (TIMESTAMP): Records the date and time of the most recent change to the entity version. This timestamp automatically updates on each modification."
        },
        {
          "name": "entity_id",
          "type": "TYPE_UNKNOWN",
          "description": "`entity_id` (TYPE_UNKNOWN):  A unique identifier for the entity whose version is being tracked in this row of the `entity_versions` table.  The specific data type is currently unknown and requires further investigation."
        },
        {
          "name": "version_number)",
          "type": "TYPE_UNKNOWN",
          "description": "`version_number (TYPE_UNKNOWN)` in the `entity_versions` table stores the version identifier for a specific entity revision.  The exact format of the version number is currently unknown and requires further investigation."
        }
      ]
    },
    {
      "table_name": "schema_evolution",
      "description": "The `schema_evolution` table tracks changes in the structure of various entities.  It records the specific attribute (`json_path`), its data type (`value_type`), and a description of the change.  `occurrence_count`, `first_seen`, and `last_seen` provide historical context, while `is_active` indicates if the attribute is currently present.  `id` serves as a unique identifier and `entity_type` specifies the entity being tracked (e.g., 'user', 'product').",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  A unique auto-incrementing integer serving as the primary key for tracking schema evolution changes."
        },
        {
          "name": "entity_type",
          "type": "VARCHAR",
          "description": "Type of schema entity changed (e.g., 'table', 'column', 'index', 'view', etc.)."
        },
        {
          "name": "json_path",
          "type": "VARCHAR",
          "description": "JSONPath expression indicating the location of a schema element relevant to an evolution step.  This allows tracking specific changes within a JSON schema."
        },
        {
          "name": "description",
          "type": "TEXT",
          "description": "Description of the schema evolution change.  This field provides a human-readable explanation of the modification applied to the schema."
        },
        {
          "name": "value_type",
          "type": "VARCHAR",
          "description": "Data type of the schema element.  (e.g., 'INTEGER', 'VARCHAR', 'BOOLEAN')"
        },
        {
          "name": "occurrence_count",
          "type": "INTEGER",
          "description": "Number of times a specific schema evolution event has occurred."
        },
        {
          "name": "first_seen",
          "type": "TIMESTAMP",
          "description": "`first_seen` (TIMESTAMP):  Records the timestamp of when a particular schema change was first observed."
        },
        {
          "name": "last_seen",
          "type": "TIMESTAMP",
          "description": "`last_seen` (TIMESTAMP): Records the timestamp of the last detected schema change event."
        },
        {
          "name": "is_active",
          "type": "BOOLEAN",
          "description": "Indicates whether a particular schema evolution is currently active (true) or inactive (false)."
        }
      ]
    },
    {
      "table_name": "entity_resolution_log",
      "description": "The `entity_resolution_log` table tracks the history of entity resolution operations. Each record documents a single resolution attempt, including the time of the operation, the type of entity involved, the resolved entity ID, the original source entity information, the action taken (e.g., merge, create, no-op), the confidence level of the resolution, and the reasoning behind the decision.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`id` (SERIAL):  A unique, auto-incrementing integer serving as the primary key for the `entity_resolution_log` table. This identifies each individual log entry."
        },
        {
          "name": "timestamp",
          "type": "TIMESTAMP",
          "description": "Records the date and time of an action related to entity resolution, such as a match, merge, or update."
        },
        {
          "name": "entity_type",
          "type": "VARCHAR",
          "description": "Stores the type of entity being resolved (e.g., 'customer', 'product', 'location') in the entity resolution process. This helps categorize and filter resolution logs."
        },
        {
          "name": "entity_id",
          "type": "INTEGER",
          "description": "Unique identifier for the entity being processed in the resolution job.  Foreign key referencing the `entity` table."
        },
        {
          "name": "source_entity",
          "type": "JSON",
          "description": "Stores a JSON object representing the source entity involved in the resolution process.  This could include details like the entity's original ID, source system, and relevant attributes."
        },
        {
          "name": "resolution_action",
          "type": "VARCHAR",
          "description": "Stores the action taken to resolve an entity resolution conflict.  This could be values like 'merged', 'ignored', 'updated', 'deleted', or a more specific description of the resolution process."
        },
        {
          "name": "confidence",
          "type": "FLOAT",
          "description": "The `confidence` column in the `entity_resolution_log` table stores a floating-point value representing the confidence score (typically between 0.0 and 1.0) assigned to a particular entity resolution match.  Higher values indicate greater confidence that the identified entities refer to the same real-world entity."
        },
        {
          "name": "reasoning",
          "type": "TEXT",
          "description": "Reasoning:  A textual description of the logic or rationale behind a specific entity resolution decision (e.g., match, non-match, or uncertain) recorded in this log entry.  This may include details about matching attributes, similarity scores, or specific rules applied."
        }
      ]
    },
    {
      "table_name": "data_source_metadata",
      "description": "The `data_source_metadata` table stores metadata about each data source ingested into the system. It tracks the source name, type, entities found within it, common fields across those entities, a quality assessment, the last ingestion timestamp, ingestion frequency, and example entities for reference.  This table serves as a catalog and provides key information about the data sources available.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "Unique sequential identifier for each data source metadata entry. Automatically generated by the database."
        },
        {
          "name": "source_name",
          "type": "VARCHAR",
          "description": "`source_name` (VARCHAR):  The name of the data source. This field identifies the origin of the data, such as a specific file, database, or API endpoint."
        },
        {
          "name": "source_type",
          "type": "VARCHAR",
          "description": "The `source_type` column in the `data_source_metadata` table is a VARCHAR field that categorizes the origin or type of the data source.  This could include values like \"API\", \"Database\", \"File Upload\", \"Streaming Service\", etc.  It helps classify and distinguish different data sources based on their nature."
        },
        {
          "name": "entity_types_found",
          "type": "JSONB",
          "description": "`entity_types_found` (JSONB): Stores a JSON object representing the different types of entities detected within this data source.  This could include things like \"PERSON\", \"ORGANIZATION\", \"LOCATION\", etc.  The specific format of the JSON object is flexible but should be consistently applied across data sources."
        },
        {
          "name": "common_fields",
          "type": "JSONB",
          "description": "`common_fields` (JSONB): Stores a JSON object containing common metadata fields shared across various data sources. This allows for flexible storage of key-value pairs beyond the predefined columns in the `data_source_metadata` table."
        },
        {
          "name": "quality_assessment",
          "type": "FLOAT",
          "description": "`quality_assessment` (FLOAT):  A numerical score representing the overall quality of the data source.  Higher values indicate better quality."
        },
        {
          "name": "last_ingested",
          "type": "TIMESTAMP",
          "description": "`last_ingested` (TIMESTAMP):  Records the timestamp of the most recent successful data ingestion for this data source."
        },
        {
          "name": "ingestion_frequency",
          "type": "VARCHAR",
          "description": "Frequency at which data is ingested from the source.  Examples: 'daily', 'hourly', 'weekly', 'monthly', 'real-time'."
        },
        {
          "name": "example_entities",
          "type": "JSONB",
          "description": "Stores a JSONB object representing example entities related to the data source. This could include sample data points, representative records, or other illustrative examples to aid in understanding the data source's content."
        }
      ]
    },
    {
      "table_name": "query_analytics",
      "description": "The `query_analytics` table stores metadata about user queries. It tracks the general query pattern, the types of entities and specific fields involved, the query frequency, the last time the query was executed, the average confidence score associated with the query results, and any notes regarding missing data encountered during query execution.  This table facilitates analysis of query patterns and data usage.",
      "columns": [
        {
          "name": "id",
          "type": "SERIAL",
          "description": "`query_analytics.id`:  A unique, auto-incrementing integer that serves as the primary key for the `query_analytics` table."
        },
        {
          "name": "query_pattern",
          "type": "VARCHAR",
          "description": "Stores the generalized or templated form of a query, used for identifying similar query patterns. This might use placeholders or regular expressions to represent variable parts of the query."
        },
        {
          "name": "entity_types_queried",
          "type": "JSONB",
          "description": "`entity_types_queried` (JSONB): Stores an array of entity types involved in a given query.  This allows analysis of which entity types are frequently searched together.  Example: `[\"person\", \"organization\", \"location\"]`."
        },
        {
          "name": "fields_queried",
          "type": "JSONB",
          "description": "Stores a JSONB object representing the fields requested in a specific query. This allows for analysis of query patterns and data usage."
        },
        {
          "name": "frequency",
          "type": "INTEGER",
          "description": "Number of times a specific query has been executed (recorded in the `query_analytics` table)."
        },
        {
          "name": "last_queried",
          "type": "TIMESTAMP",
          "description": "`last_queried` (TIMESTAMP):  Records the timestamp of the most recent query execution related to this entry in the `query_analytics` table."
        },
        {
          "name": "avg_confidence",
          "type": "FLOAT",
          "description": "Average confidence score (as a floating-point number) for the results returned for a given query. This is stored in the `query_analytics` table."
        },
        {
          "name": "missing_data_notes",
          "type": "TEXT",
          "description": "`missing_data_notes` (TEXT):  Stores free-form text notes explaining any missing data encountered while executing a specific query. This field allows analysts to document reasons for data gaps, potential issues, or any other relevant information regarding data completeness for a given query tracked in the `query_analytics` table."
        }
      ]
    }
  ]
}